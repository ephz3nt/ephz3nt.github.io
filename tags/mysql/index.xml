<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mysql on ephz3nt</title><link>https://painso.com/tags/mysql/</link><description>Recent content in mysql on ephz3nt</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 05 Aug 2013 13:08:39 +0000</lastBuildDate><atom:link href="https://painso.com/tags/mysql/index.xml" rel="self" type="application/rss+xml"/><item><title>修改mysql用户密码</title><link>https://painso.com/posts/tech/2013/change-mysql-password/</link><pubDate>Mon, 05 Aug 2013 13:08:39 +0000</pubDate><guid>https://painso.com/posts/tech/2013/change-mysql-password/</guid><description>mysqladmin命令（回目录） 格式如下（其中，USER为用户名，PASSWORD为新密码）： mysqladmin -u USER -p password PASSWORD 该命令之后会提示输入原密码，输入正确后即可修改。 例如，设置root用户的密码为123456，则
mysqladmin -u root -p password 123456 UPDATE user 语句（回目录） 这种方式必须是先用root帐户登入mysql，然后执行： UPDATE user SET password=PASSWORD('123456') WHERE user='root'; FLUSH PRIVILEGES; SET PASSWORD 语句（回目录） 这种方式也需要先用root命令登入mysql，然后执行： SET PASSWORD FOR root=PASSWORD('123456'); 忘记mysql密码（回目录） windows：在bin目录下执行 mysqld --skip-grant-tables 回车。如果没有出现提示信息，那就对了。 再开一个DOS窗口(因为刚才那个DOS窗口已经不能动了)，转到mysql\bin目录。 输入mysql回车，如果成功，将出现MySQL提示符
use mysql; update user set password=password(&amp;quot;newpassword&amp;quot;) where user=&amp;quot;root&amp;quot;; flush privileges; 注销系统，再进入，开MySQL，使用用户名root和刚才设置的新密码123456登陆。 linux：
vi /etc/my.cnf 在[mysqld]的段中加上一句：skip-grant-tables 例如：
[mysqld] datadir=/var/lib/mysql socket=/var/lib/mysql/mysql.sock skip-grant-tables 保存并且退出vi。 重新启动mysqld</description></item><item><title>[转]PHP连接MySQL主机127.0.0.1与localhost的区别</title><link>https://painso.com/posts/tech/2013/php-connect-mysql-localhost/</link><pubDate>Fri, 12 Jul 2013 23:45:53 +0000</pubDate><guid>https://painso.com/posts/tech/2013/php-connect-mysql-localhost/</guid><description>发现问题
昨天在帮同事编译安装Linux环境时，遇到一个问题： WEB服务器是apache，数据库是MySQL。 于是写了一个测试连接数据库的PHP页面： $mysql = mysql_connect('localhost','root',''); 打开 http://localhost/test.php 测试 提示：Can’t connect to local MySQL server through socket... 检查环境正常 以为是数据库没有启动，于是查看一下进程，MySQL在进程里，重启了一下MySQL. 使用mysql -u root -p 可以进入MySQL操作界面 直接使用/usr/local/php5/bin/php /web/test.php执行可以连上数据库 apache也重启了，一样无效 疑点：为何网页执行失败，命令执行却成功 这下就郁闷了，使用php命令直接执行就成功，通过网页执行就失败。难道是apache导致？网上搜索了大堆资料也没找到解决方案，重新编译安装apache问题依旧。 把localhost改成127.0.0.1成功 把localhost改成127.0.0.1后竟然连接成功了，开始陷入思考困局：localhost失败127.0.0.1却成功？ ping localhost 地址是127.0.0.1没错 打开hosts加入 127.0.0.1 qttc 使用qttc当主机连接也正常，唯独就不认localhost。 localhost连接方式不同导致 为了了解PHP连接数据库时，主机填写localhost与其它的区别阅读了大量资料，最后得知： 当主机填写为localhost时mysql会采用 unix domain socket连接 当主机填写为127.0.0.1时mysql会采用tcp方式连接 这是linux套接字网络的特性，win平台不会有这个问题 解决方法在my.cnf的[mysql]区段里添加protocol=tcp保存重启MySQL，问题解决！原文链接：http://www.qttc.net/201210228.html</description></item><item><title>解决MYSQL不能远程访问。</title><link>https://painso.com/posts/tech/2012/solve-mysql-can-not-remote-access/</link><pubDate>Tue, 28 Feb 2012 16:54:23 +0000</pubDate><guid>https://painso.com/posts/tech/2012/solve-mysql-can-not-remote-access/</guid><description>最近在网上找了个免费网站备份的网站，Dropmysite.com 提供2.3个G的备份空间，提供网站数据、数据库数据以及邮箱数据的自动备份，可按月，周，日，时为单位来备份，很方便，但是在用到MYSQL备份的时候老是提示不能访问远程数据库，网上找了一下资料，经实践 最简单的方法就是在PHPMYADMIN后台改一下数据表，应为我的是lnmp的环境默认带phpmysql这个网页数据库管理的功能 ，打开PHPMYADMIN后台登陆，选择mysql数据库里面最下面的user数据表，把第一行的localhost改成%即可。
这个dropmysite.com不错哟，有兴趣的朋友可以试试。</description></item><item><title>用php+mysql写一个刷新页面显示不同的内容</title><link>https://painso.com/posts/tech/2011/used-to-write-a-php-mysql-refresh-the-page-to-display-different-content/</link><pubDate>Fri, 18 Nov 2011 04:31:39 +0000</pubDate><guid>https://painso.com/posts/tech/2011/used-to-write-a-php-mysql-refresh-the-page-to-display-different-content/</guid><description>用php+mysql写一个刷新页面显示不同的内容
&amp;lt;? $conn=mysql_connect(&amp;#34;localhost&amp;#34;,&amp;#34;user&amp;#34;,&amp;#34;pwd&amp;#34;); $sql=&amp;#34;select * from tab where 1&amp;#34;; result=mysql_db_query(&amp;#34;database_name&amp;#34;,sql); row_num=mysql_num_rows(result); rand=rand(0,row_num); mysql_data_seek(result, rand); row=mysql_fetch_assoc(result); echo &amp;#34;&amp;lt;pre&amp;gt;&amp;#34;; print_r($row); echo &amp;#34;/&amp;lt;pre&amp;gt;&amp;#34;; ?&amp;gt;</description></item></channel></rss>