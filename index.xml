<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ephz3nt</title><link>https://painso.com/</link><description>Recent content on ephz3nt</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 23 Aug 2020 16:50:36 +0800</lastBuildDate><atom:link href="https://painso.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Java 变量作用域</title><link>https://painso.com/posts/tech/2020/java-variable-scope/</link><pubDate>Sun, 23 Aug 2020 16:50:36 +0800</pubDate><guid>https://painso.com/posts/tech/2020/java-variable-scope/</guid><description>Java 变量分为: 类变量 实例变量 局部变量 类变量 需要在变量前添加修饰符static，可以在方法中直接调用
public class Hello { static int number = 10; // 定义类变量 public static void main(String[] args) { System.out.println(number); // 直接调用 } } 实例变量 定义格式为String &amp;lt;type&amp;gt; &amp;lt;name&amp;gt; = &amp;lt;value&amp;gt;;
实例变量从属于对象，使用时需要进行初始化
public class Hello { // 定义实例变量 String name = &amp;#34;Benjamin&amp;#34;; int age = 18; public static void main(String[] args) { Hello instance = new Hello() ; // new 一个当前的Hello对象 System.</description></item><item><title>Manjaro 添加自定义快捷方式</title><link>https://painso.com/posts/tech/2020/manjaro-custom-shortcut/</link><pubDate>Sat, 22 Aug 2020 21:19:42 +0800</pubDate><guid>https://painso.com/posts/tech/2020/manjaro-custom-shortcut/</guid><description>今天装了个Goland, 由于没有像Ubuntu那样的deb包导致每次启动都需shell进相应目录执行
./goland.sh 非常麻烦
稍微找了下资料
首先进入 &amp;ldquo;/usr/share/applications&amp;rdquo; 目录, 可以看到里面有很多的 .desktop 文件, 这就是快捷方式文件了
可以随便找一个复制出来, 如:
sudo cp idea.desktop goland.desktop 文件大概长这样, 怎么改一目了然了 路径按照自己实际目录修改就行.
goland.desktop
[Desktop Entry] Version=1.0 Type=Application Name=Goland Comment=Develop with pleasure! Exec=/home/ephz3nt/Downloads/GoLand-2020.2.2/bin/goland.sh %f Icon=/home/ephz3nt/Downloads/GoLand-2020.2.2/bin/goland.png Terminal=false StartupNotify=true StartupWMClass=jetbrains-goland Categories=Development;IDE;Go; 顺便贴一下Typora的配置吧, 正好今天在用
[Desktop Entry] Version=1.0 Type=Application Name=Typora Comment=Typora Markdown Editor Exec=/home/ephz3nt/Downloads/Typora-linux-x64/Typora %f Icon=/home/ephz3nt/Downloads/Typora-linux-x64/resources/app/asserts/icon/icon_128x128.png Terminal=false StartupNotify=true #StartupWMClass=jetbrains-goland Categories=Development;Markdown;Typora;</description></item><item><title>snap 设置HTTP代理</title><link>https://painso.com/posts/tech/2020/snap-set-proxy/</link><pubDate>Sat, 22 Aug 2020 20:58:13 +0800</pubDate><guid>https://painso.com/posts/tech/2020/snap-set-proxy/</guid><description>这里由于我用的是V2RAY, 代理端口 &amp;ldquo;12333&amp;rdquo;
sudo snap set system proxy.http=&amp;#34;http://127.0.0.1:12333&amp;#34; sudo snap set system proxy.https=&amp;#34;http://127.0.0.1:12333&amp;#34; 酸爽！</description></item><item><title>博客迁移至github &amp; hugo。</title><link>https://painso.com/posts/thinking/2020/migrated-to-hugo/</link><pubDate>Tue, 03 Mar 2020 18:32:00 +0000</pubDate><guid>https://painso.com/posts/thinking/2020/migrated-to-hugo/</guid><description>从wordpress到hexo，从hexo到hugo 搭配git-pages 实现白嫖 准备重拾博客</description></item><item><title>使用acme签发&amp;续期 Let&#39;s Encrypt 证书。</title><link>https://painso.com/posts/tech/2017/acme-lets-encrypt-issue/</link><pubDate>Tue, 28 Feb 2017 14:57:48 +0000</pubDate><guid>https://painso.com/posts/tech/2017/acme-lets-encrypt-issue/</guid><description>acme.sh 实现了 acme 协议, 可以从 letsencrypt 生成免费的证书.
使用它的原因是 acme.sh 支持DNS API方式签发证书,这可方便太多了
支持的DNS服务商有: cloudflare, dnspod, cloudxns, godaddy 以及 ovh 等数十种解析商的自动集成.
[root@ROOT ~]# ls .acme.sh/dnsapi/ dns_ad.sh dns_cf.sh dns_do.sh dns_gd.sh dns_linode.sh dns_myapi.sh dns_pdns.sh dns_ali.sh dns_cx.sh dns_dp.sh dns_ispconfig.sh dns_lua.sh dns_nsupdate.sh README.md dns_aws.sh dns_cyon.sh dns_freedns.sh dns_lexicon.sh dns_me.sh dns_ovh.sh 获取acme.sh
curl https://get.acme.sh | sh 将安装acme.sh至你当前账户根目录下的 .acme.sh下
创建一个bash的alias, 方便直接使用acme.sh
vim ~/.bashrc 增加一行 alias acme.sh=~/.acme.sh/acme.sh
# .bashrc # User specific aliases and functions alias acme.sh=~/.acme.sh/acme.sh alias rm=&amp;#39;rm -i&amp;#39; alias cp=&amp;#39;cp -i&amp;#39; alias mv=&amp;#39;mv -i&amp;#39; 执行 source .</description></item><item><title>陈佩斯&amp;朱时茂 主角与配角</title><link>https://painso.com/posts/share/2017/chenpeisi-zhushimao-zhujueyupeijue/</link><pubDate>Fri, 13 Jan 2017 20:26:48 +0000</pubDate><guid>https://painso.com/posts/share/2017/chenpeisi-zhushimao-zhujueyupeijue/</guid><description/></item><item><title>博客迁移到hexo。</title><link>https://painso.com/posts/thinking/2017/migrate-to-hexo/</link><pubDate>Fri, 13 Jan 2017 12:17:00 +0000</pubDate><guid>https://painso.com/posts/thinking/2017/migrate-to-hexo/</guid><description>终于抛弃臃肿的WP了，这种静态页面博客貌似挺好用的。</description></item><item><title>ocserv 安装记录。</title><link>https://painso.com/posts/tech/2016/ocserv-install-usage/</link><pubDate>Fri, 03 Jun 2016 17:53:05 +0000</pubDate><guid>https://painso.com/posts/tech/2016/ocserv-install-usage/</guid><description>ocserv 全称是 OpenConnect VPN Server。实现了 AnyConnect SSL VPN 协议，兼容 OpenConnection VPN 客户端。特点是体积小、安全和可配置。依赖标准协议如 TLS 1.2 和数据报文 TLS。
它通过实现Cisco的AnyConnect协议，用DTLS作为主要的加密传输协议。
它的主要好处在于:
AnyConnect的VPN协议默认使用UDP DTLS作为数据传输，但如果有什么网络问题导致UDP传输出现问题，它会利用最初建立的TCP TLS通道作为备份通道，降低VPN断开的概率。 AnyConnect作为Cisco新一代的VPN解决方案，被用于许多大型企业，这些企业依赖它提供正常的商业运作，这些正常运作对应的经济效益（读作GDP），是我们最好的伙伴。 OpenConnet的架设足够麻烦，我的意思是，如果你不是大型企业，你会用AnyConnect的概率无限趋近于零。再者，如果它足够简单，我就不用写这篇文章了。(摘自比特客栈) 支持平台：Windows、Mac、Android、iOS、Windows Phone 基本是全平台支持, 我为什么会用他而不用Shadowsocks，因为我一个朋友用的iPhone，而且未越狱又想全局，所以才想到ocserv。
系统版本：CentOS release 6.7 x64
安装前置关联库：
yum -y install autoconf automake gcc libtasn1-devel zlib zlib-devel trousers trousers-devel gmp-devel gmp xz texinfo libnl-devel libnl tcp_wrappers-libs tcp_wrappers-devel tcp_wrappers dbus dbus-devel ncurses-devel pam-devel readline-devel bison bison-devel flex gcc automake autoconf wget expat-devel openssl-devel nettle</description></item><item><title>Let&#39;s Encrypt 免费SSL证书安装小记。</title><link>https://painso.com/posts/tech/2015/lets-encrypt-freessl-install/</link><pubDate>Thu, 10 Dec 2015 16:08:58 +0000</pubDate><guid>https://painso.com/posts/tech/2015/lets-encrypt-freessl-install/</guid><description>从去年就开始关注Let&amp;rsquo;s Encrypt 了， 就在不久前它宣布公测。所有人都可以使用由此机构签发的免费SSL证书。
下面来分享一下本屌的安装过程。
系统：CentOS 6.4 x64 环境：军哥LNMP 签发的域名：本博客 使用的签发工具：acme-tiny (这里不使用官方提供的工具原因为太过臃肿，acme-tiny仅200+行代码，小巧简单)
2015-12-27 22:06:57 update: CloudXNS已支持Let&amp;rsquo;s Encrypt的验证, See https://www.cloudxns.net/Support/detail/id/1062.html 注意： 1、确保需要签发的域名使用的DNS为国外DNS服务(如cloudflare,linode等，否则到签发步骤可能会报错) 2、确保需要签发的域名已指向A记录到你的网站服务器，不要用CNAME等记录，一定要A记录！(否则到签发步骤可能会报错) 3、最好用ROOT帐号操作(我使用普通帐号操作会报key values mismatch)
安装git
yum -y install git 如果你已经有了git则执行(注意：存放目录最好不要在home目录下，我存放在/web/acme-tiny)
git clone https://github.com/diafygi/acme-tiny.git 生成帐号KEY
openssl genrsa 4096 &amp;amp;gt; account.key 生成域名KEY
openssl genrsa 4096 &amp;amp;gt; painso.key 生成CSR文件(如果你是以根域名来访问的话使用单域名即可，签发的主机头越多越麻烦哦)
单域名(不包含其他域如www)： openssl req -new -sha256 -key painso.key -subj &amp;quot;/CN=painso.com&amp;quot; &amp;amp;gt; painso.csr 多域名： openssl req -new -sha256 -key painso.key -subj &amp;quot;/&amp;quot; -reqexts SAN -config &amp;amp;lt;(cat /etc/ssl/openssl.</description></item><item><title>Android L 网络图标感叹号去除方法</title><link>https://painso.com/posts/tech/2015/android-l-exclamation-mark/</link><pubDate>Thu, 05 Feb 2015 11:16:04 +0000</pubDate><guid>https://painso.com/posts/tech/2015/android-l-exclamation-mark/</guid><description>大致意思是Android 5.0连上WIFI后会访问 clients3.google.com/generate_204 这个网址
如果能正常访问, 则不会在通知栏出现 &amp;ldquo;此WIFI需要登录才能使用&amp;rdquo;
而你也知道, 谷歌在国内基本是不能访问的
所以找一个替换一下就OK了
clients3.google.com/generate_204 会给你返回一个204状态, 你也可以自己搭建一个这样的服务
解决方法(无需root):
完全屏蔽网络检查功能, 最简单快速, 但是就没有办法提示wifi登录: adb shell &amp;quot;settings put global captive_portal_detection_enabled 0&amp;quot; 使用g.cn替换掉被墙的google服务器: adb shell &amp;quot;settings put global captive_portal_server g.cn&amp;quot; 上面的方法需要电脑执行adb命令, 当然你也可以在手机上安装类似本地Shell的APP执行: settings put global captive_portal_server g.cn btw: g.cn中的g.cn/generate_204也同样会返回204状态所以建议使用</description></item></channel></rss>