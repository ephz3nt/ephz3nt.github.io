<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ephz3nt</title><link>https://painso.com/</link><description>Recent content on ephz3nt</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 30 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://painso.com/index.xml" rel="self" type="application/rss+xml"/><item><title>记一次小程序请求PHP后端报错</title><link>https://painso.com/posts/tech/2020/wechat-miniprogram-issues/</link><pubDate>Mon, 30 Nov 2020 00:00:00 +0000</pubDate><guid>https://painso.com/posts/tech/2020/wechat-miniprogram-issues/</guid><description>小程序业务有外接一套商城，由于需要部署一套测试环境，所以在公司内网服务器使用 K8S 跑了一套。 但是问题来了，线上的没有问题，测试环境小程序调用 PHP 后端接口貌似出现了问题，无法获取用户信息。 数据库是直接从线上导出来的，PHP 代码除了配置文件不同，其他都没有变动。
使用Charles抓包看了下报错
&amp;quot;status&amp;quot;: 400, &amp;quot;msg&amp;quot;: &amp;quot;系统出现异常&amp;quot;, &amp;quot;data&amp;quot;: { &amp;quot;message&amp;quot;: &amp;quot;SQLSTATE[22001]: String data, right truncated: 1406 Data too long for column 'token' at row 1&amp;quot;, &amp;quot;file&amp;quot;: &amp;quot;\/var\/www\/html\/vendor\/topthink\/think-orm\/src\/db\/PDOConnection.php&amp;quot;, &amp;quot;code&amp;quot;: 10501, &amp;quot;line&amp;quot;: 713, &amp;quot;trace&amp;quot;: [{ &amp;quot;file&amp;quot;: &amp;quot;\/var\/www\/html\/vendor\/topthink\/think-orm\/src\/db\/PDOConnection.php&amp;quot;, &amp;quot;line&amp;quot;: 769, &amp;quot;function&amp;quot;: &amp;quot;getPDOStatement&amp;quot;, &amp;quot;class&amp;quot;: &amp;quot;think\\db\\PDOConnection&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;-&amp;gt;&amp;quot;, &amp;quot;args&amp;quot;: [&amp;quot;INSERT INTO `user_token` SET `uid` = :ThinkBind_1_1689079_ , `token` = :ThinkBind_2_1472105804_ , `expires_time` = :ThinkBind_3_1500549319_ , `create_time` = :ThinkBind_4_1947827158_ , `login_ip` = :ThinkBind_5_2004432133_ &amp;quot;, { &amp;quot;ThinkBind_1_1689079_&amp;quot;: [1, 1], &amp;quot;ThinkBind_2_1472105804_&amp;quot;: [&amp;quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.</description></item><item><title>Java ExcelUtil 库导出Excel表格报错问题</title><link>https://painso.com/posts/tech/2020/java-in-docker-alpine-font-issue/</link><pubDate>Thu, 29 Oct 2020 00:00:00 +0000</pubDate><guid>https://painso.com/posts/tech/2020/java-in-docker-alpine-font-issue/</guid><description>环境信息 运行环境: Docker 使用镜像: adoptopenjdk/openjdk11:alpine 问题概述 同事新写的接口，功能大概是访问提供某些参数会返回一个 Excel 表格。在本机测试正常，但是部署到测试环境下载下来的表格内容是 ||| |&amp;mdash;-| &amp;mdash;-| | {&amp;ldquo;code&amp;rdquo;:500 | data&amp;rdquo;:null,&amp;ldquo;message&amp;rdquo;:&amp;ldquo;Handler dispatch failed; nested exception is java.lang.InternalError: java.lang.reflect.InvocationTargetException&amp;rdquo;} |
控制台报错信息 org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.InternalError: java.lang.reflect.InvocationTargetException at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1055) ~[spring-webmvc-5.2.2.RELEASE.jar!/:5.2.2.RELEASE] at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar!/:5.2.2.RELEASE] at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar!/:5.2.2.RELEASE] at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.2.RELEASE.jar!/:5.2.2.RELEASE] at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.29.jar!/:9.0.29] at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar!/:5.2.2.RELEASE] at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar!/:9.0.29] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar!/:9.0.29] at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar!/:9.0.29] at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar!/:9.0.29] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar!/:9.0.29] at org.</description></item><item><title>Vue上传阿里云OSS问题</title><link>https://painso.com/posts/tech/2020/vue-upload-aliyun-oss-issue/</link><pubDate>Thu, 29 Oct 2020 00:00:00 +0000</pubDate><guid>https://painso.com/posts/tech/2020/vue-upload-aliyun-oss-issue/</guid><description>前段时间部署前端同事的 Vue 代码遇到的，记录一下。
问题概述 前端同事在vue.config.js配置了 OSS 的 proxy
&amp;#34;/ossUpload&amp;#34;: { target: &amp;#34;https://xxx-proj.oss-cn-shanghai.aliyuncs.com&amp;#34;, changeOrigin: true, ws: true, pathRewrite: { &amp;#34;^/ossUpload&amp;#34;: &amp;#34;&amp;#34;, }, }, 由于 Vue 编译后为纯静态文件，导致我部署到 Nginx 访问不到这个/ossUpload路径，于是只能加个proxy_pass规则。
location ^~/ossUpload { proxy_pass https://xxx-proj.oss-cn-shanghai.aliyuncs.com/; 加上后发现上传报错，直接在 Vue 启动开发模式发现上传 OSS 的状态码是204, 看到这个想到websocket的配置需要设置http_upgrade的一些配置，于是配置上去正常上传了。 最终 Nginx 配置如下
location ^~/ossUpload { proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header X-NginX-Proxy true; proxy_redirect off; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection &amp;quot;upgrade&amp;quot;; proxy_pass https://xxx-proj.oss-cn-shanghai.aliyuncs.com/; 时间过去比较久， 一些细节忘记了 - -</description></item><item><title>Google SRE 运维解密笔记</title><link>https://painso.com/posts/tech/2020/google-sre-how/</link><pubDate>Wed, 23 Sep 2020 11:00:43 +0800</pubDate><guid>https://painso.com/posts/tech/2020/google-sre-how/</guid><description>本书对于 SRE 的定义
我们认为如果软件工程师主要专注于设计和构建软件系统，那么应该有另外一种职业专注于整个软件系统的生命周期管理。从其设计一直到部署，历经不断改进，最后顺利退役。这样一种职业必须具备非常广泛的技能，但是和其他职业的专注点都不同。Google 将这个职业称为站点可靠性工程师(SRE: Site Reliability Engineering)。
&amp;ldquo;无论对一个软件系统运行原理掌握得多么彻底，也不能阻止人犯意外错误。&amp;rdquo;
只有靠着对细节的不懈关注，做好充足的灾难预案和准备工作，时刻警惕着，不放过一切机会去避免灾难发生。这就是 SRE 最重要的理念！
第一章：介绍 不能将碰运气当成战略。 - SRE 俗语
SRE 团队要承担以下几类职责
可用性改进 延迟优化 性能优化 效率优化 变更管理 监控 紧急事务处理 容量规划与管理 在保障服务 SLO 的前提下最大化迭代速度 在企业中，最主要的矛盾就是迭代创新的速度与产品稳定程度之间的矛盾。 在 SRE 模型中，我们选择正面面对这种矛盾，使用的工具是错误预算。
&amp;ldquo;错误预算&amp;quot;起源于这样一个理念： 任何产品都不是，也不应该做到 100%可靠(显然这并不适用于心脏起博器和防抱死系统等)。因为对最终用户来说，99.999%和 100%的可用性是没有实质区别的。
多少才是？
基于用户的使用习惯，服务可靠性要达到什么程度用户才会满意？ 如果这项服务的可靠程度不够，用户是否有其他的替代选择？ 服务的可靠程度是否会影响用户对这项服务的使用模式？ 如果一个服务的可靠性目标是 99.99%，那么错误预算就是 0.01%。这意味着产品研发部门和 SRE 部门可以在这个范围内将预算用于新功能上线或产品创新等任何事情。
监控系统 监控系统是 SRE 团队监控服务质量和可用性的一个主要手段。
一个需要人工阅读邮件和分析警报来决定目前是否需要采取某种行动的系统本质上就是错误的。监控系统不应该依赖人来分析警报信息，而是应该由系统自动分析，仅当需要用户执行某种操作时，才需要通知用户。
一个监控系统应该只有三类输出
紧急警报 - alert 意味着收到警报的用户需要立即执行某种操作，目标是解决某种已经发生的问题，或者是避免即将发生的问题。</description></item><item><title>Google SRE 生存指南笔记</title><link>https://painso.com/posts/tech/2020/real-world-sre-notes/</link><pubDate>Wed, 09 Sep 2020 21:55:43 +0800</pubDate><guid>https://painso.com/posts/tech/2020/real-world-sre-notes/</guid><description>《SRE 生存指南》- Nat Welch
系统中断响应与正常运行时间最大化
SRE 简介 SRE 是指 Site Reliability Engineer (网站可靠性工程师)。他是软件工程师和系统管理员的结合，一个 SRE 工程师基本上需要掌握很多知识：算法，数据结构，编程能力，网络编程，分布式系统，可扩展架构，故障排除。 - 百度百科
Site： 一个网站
Reliability： 被定义为&amp;quot;值得信赖的质量或一贯可靠的质量&amp;rdquo;
Engineering： 被定义为&amp;quot;熟练地运用技巧以达到某种目的的行动&amp;rdquo;
语录
故障是常态，正常才是异常
个人不应该害怕事故，而是要确信如果事故发生，团队将会响应和改进系统，而不是关注发生事故带来的耻辱和愤怒。事故是我们可以从中学习的东西，而不是让人害怕和羞耻的事情！
1. 简介 SRE 的目标是提高服务可靠性，帮助业务实现并改善用户的服务体验 SRE 定义： 一个专注于熟练地维护一个网站以使其持续可靠的领域 互联网上的软件永远做不到完全可靠，这里有两个原因
互联网是一个分布式系统，各部分经常出现故障，这会影响服务可用性。 软件是人编写的，所以 Bug 不可避免，而 Bug 会导致系统宕机。 可靠性层次结构 Mikey Pyramid</description></item><item><title>Java 线程</title><link>https://painso.com/posts/tech/2020/java-thread/</link><pubDate>Mon, 07 Sep 2020 21:06:51 +0800</pubDate><guid>https://painso.com/posts/tech/2020/java-thread/</guid><description>观看至： https://www.bilibili.com/video/BV1V4411p7EF?p=23
什么是任务、进程、线程 多任务表示一个人边吃饭边玩手机，看上去是同时进行，实际上这一秒在吃饭下一秒在玩手机，只是切换时间很短感觉不出来 说道进程就得提程序，程序运行会创建一个进程，里面包含一个主线程如main函数，还有其他语言自带的守护线程如Java的GC 线程不一定立即执行，它是由CPU调度的 线程的三种创建方式 Thread class 继承Thread类
不建议使用： 避免OOP单继承局限性 创建一个Class继承Thread class并重写run()方法，启动线程使用.start() package com.painso.study.thread.demo01; // create thread way 1: extend Thread class, override run() method, call start enable thread public class D1 extends Thread{ @Override public void run(){ // run() body for (int i = 0; i&amp;lt;20;i++){ System.out.println(&amp;#34;i&amp;#39;m run() body &amp;#34;+i); } } public static void main(String[] args) { // main() body D1 d1 = new D1(); d1.</description></item><item><title>微星B460主板安装Linux问题</title><link>https://painso.com/posts/tech/2020/msi-b460-motherboard-linux-issue/</link><pubDate>Wed, 02 Sep 2020 20:14:05 +0800</pubDate><guid>https://painso.com/posts/tech/2020/msi-b460-motherboard-linux-issue/</guid><description>今天公司到了一台内网测试用服务器，想着直接装好Ubuntu 16.04配置好网络直接扔杂物间(没有机房，只能放那边挨着交换机)
没想到我的U盘直接认不到了，我是用YUMI把好几个系统装到U盘里的，我自己用的办公电脑是ok的，后面网上查了下说要吧BIOS里面的UEFI改成CMS 兼容模式，结果直接点不亮了。
没办法，拆开机箱取主板电池下来放电重新来
重新用YUMI把ISO刻到U盘后发现竟然神奇的可以了，兴奋的等待安装完毕后蛋疼的事情又来了。
装完后启动黑屏，我折腾了好一会才发现是进入系统黑屏，不是系统没装好。
之前我自己的办公电脑装也是这个样子，我尝试开机后按上下键在Ubuntu启动界面编辑启动项在后面加上nomodeset，貌似和显卡有关系。结果能看到启动的界面了，但是卡在磁盘扫描那边。
想着之前自己的办公电脑也差不多是这样，Manjaro、Archlinux 都不行，后面换Linux Mint完美运行。接着自己吧它也刻进去，进入到LiveCD桌面，点安装然后下一步下一步。。。到在线更新包的时候提示网络问题，ifconfig看了下就一块lo网卡，应该是找不到网卡驱动了，lspci看了下ethernet信息，网卡型号是RTL8125 Realtek PCIe FE / GBE / 2.5G ，我先跳过在线更新直接把系统先装了再说。
完事后在自己办公电脑从官网下载驱动 https://www.realtek.com/en/component/zoo/category/network-interface-controllers-10-100-1000m-gigabit-ethernet-pci-express-software
选择Unix (Linux)下的2.5G Ethernet LINUX driver r8125 for kernel up to 5.6 下载后拷贝到U盘，然后插上服务器挂载，解压运行./autorun.sh正常执行完后运行lsmod | grep 8125应该就可以看到显示了。ifconfig -a 也能看到网卡信息。
安装驱动需要 gcc kernel-dev等包，如果没有的话需要先安装，我是正好有一个USB装RJ45的线。
接着配置好静态IP明天再部署环境。
最后再吹一波 Linux Mint的兼容性！
后记 弄好之后用kubeadm部署了个单机版kubernetes，用第二块nvmeSSD去做k8s的sc
用glusterfs+heketi实现，heketi-cli topology load --json cluster.json的时候提示
Adding device /dev/nvm0n1 ... Unable to add device: Setup of device /dev/vdb failed (already initialized or contains data?</description></item><item><title>Java 基础</title><link>https://painso.com/posts/tech/2020/java-basic/</link><pubDate>Sun, 23 Aug 2020 17:25:46 +0800</pubDate><guid>https://painso.com/posts/tech/2020/java-basic/</guid><description>狂神说JAVA学习笔记 - JavaSE基础部分 Bilibili: https://www.bilibili.com/video/av68373450
当前观看至: https://www.bilibili.com/video/av68373450?p=77
运算符 不同类型运算返回值
double a = 55; float b = 10F; long c = 10; int d = 20; short e = 25; byte f = 25; 如果变量a+b+c+d相加，返回值类型为double 如果变量b+c+d+e相加，返回值类型为float
如果d+e相加，返回值为int 如果e+f相加，返回值为int 。。。 结论
如果一组不同类型的变量进行运算，返回值取类型最大数据类型 如果其中最大的数据类型为int，返回值为int
如果小于int的类型，返回int 自增、自减 ++ --
package operator; public class Demo01 { public static void main(String[] args) { int a = 1; int b = a++; int c = ++a; System.</description></item><item><title>Java 变量作用域</title><link>https://painso.com/posts/tech/2020/java-variable-scope/</link><pubDate>Sun, 23 Aug 2020 16:50:36 +0800</pubDate><guid>https://painso.com/posts/tech/2020/java-variable-scope/</guid><description>Java 变量分为: 类变量 实例变量 局部变量 类变量 需要在变量前添加修饰符static，可以在方法中直接调用
public class Hello { static int number = 10; // 定义类变量 public static void main(String[] args) { System.out.println(number); // 直接调用 } } 实例变量 定义格式为String &amp;lt;type&amp;gt; &amp;lt;name&amp;gt; = &amp;lt;value&amp;gt;;
实例变量从属于对象，使用时需要进行初始化
public class Hello { // 定义实例变量 String name = &amp;#34;Benjamin&amp;#34;; int age = 18; public static void main(String[] args) { Hello instance = new Hello() ; // new 一个当前的Hello对象 System.</description></item><item><title>Manjaro 添加自定义快捷方式</title><link>https://painso.com/posts/tech/2020/manjaro-custom-shortcut/</link><pubDate>Sat, 22 Aug 2020 21:19:42 +0800</pubDate><guid>https://painso.com/posts/tech/2020/manjaro-custom-shortcut/</guid><description>今天装了个Goland, 由于没有像Ubuntu那样的deb包导致每次启动都需shell进相应目录执行
./goland.sh 非常麻烦
稍微找了下资料
首先进入 &amp;ldquo;/usr/share/applications&amp;rdquo; 目录, 可以看到里面有很多的 .desktop 文件, 这就是快捷方式文件了
可以随便找一个复制出来, 如:
sudo cp idea.desktop goland.desktop 文件大概长这样, 怎么改一目了然了 路径按照自己实际目录修改就行.
goland.desktop
[Desktop Entry] Version=1.0 Type=Application Name=Goland Comment=Develop with pleasure! Exec=/home/ephz3nt/Downloads/GoLand-2020.2.2/bin/goland.sh %f Icon=/home/ephz3nt/Downloads/GoLand-2020.2.2/bin/goland.png Terminal=false StartupNotify=true StartupWMClass=jetbrains-goland Categories=Development;IDE;Go; 顺便贴一下Typora的配置吧, 正好今天在用
[Desktop Entry] Version=1.0 Type=Application Name=Typora Comment=Typora Markdown Editor Exec=/home/ephz3nt/Downloads/Typora-linux-x64/Typora %f Icon=/home/ephz3nt/Downloads/Typora-linux-x64/resources/app/asserts/icon/icon_128x128.png Terminal=false StartupNotify=true #StartupWMClass=jetbrains-goland Categories=Development;Markdown;Typora;</description></item></channel></rss>