<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on ephz3nt</title><link>https://painso.com/posts/</link><description>Recent content in Posts on ephz3nt</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 23 Aug 2020 17:25:46 +0800</lastBuildDate><atom:link href="https://painso.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Java 基础</title><link>https://painso.com/posts/tech/2020/java-basic/</link><pubDate>Sun, 23 Aug 2020 17:25:46 +0800</pubDate><guid>https://painso.com/posts/tech/2020/java-basic/</guid><description>狂神说JAVA学习笔记 - JavaSE基础部分 Bilibili: https://www.bilibili.com/video/av68373450
当前观看至: https://www.bilibili.com/video/av68373450?p=58
运算符 不同类型运算返回值
double a = 55; float b = 10F; long c = 10; int d = 20; short e = 25; byte f = 25; 如果变量a+b+c+d相加，返回值类型为double 如果变量b+c+d+e相加，返回值类型为float
如果d+e相加，返回值为int 如果e+f相加，返回值为int 。。。 结论
如果一组不同类型的变量进行运算，返回值取类型最大数据类型 如果其中最大的数据类型为int，返回值为int
如果小于int的类型，返回int 自增、自减 ++ --
package operator; public class Demo01 { public static void main(String[] args) { int a = 1; int b = a++; int c = ++a; System.</description><content type="html"><![CDATA[<h2 id="狂神说java学习笔记---javase基础部分">狂神说JAVA学习笔记 - JavaSE基础部分</h2>
<p>Bilibili: <a href="https://www.bilibili.com/video/av68373450">https://www.bilibili.com/video/av68373450</a></p>
<p>当前观看至: <a href="https://www.bilibili.com/video/av68373450?p=58">https://www.bilibili.com/video/av68373450?p=58</a></p>
<h3 id="运算符">运算符</h3>
<ol>
<li>
<p>不同类型运算返回值</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kt">double</span> <span class="n">a</span> <span class="o">=</span> <span class="n">55</span><span class="o">;</span>
<span class="kt">float</span> <span class="n">b</span> <span class="o">=</span> <span class="n">10F</span><span class="o">;</span>
<span class="kt">long</span> <span class="n">c</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">d</span> <span class="o">=</span> <span class="n">20</span><span class="o">;</span>
<span class="kt">short</span> <span class="n">e</span> <span class="o">=</span> <span class="n">25</span><span class="o">;</span>
<span class="kt">byte</span> <span class="n">f</span> <span class="o">=</span> <span class="n">25</span><span class="o">;</span>
</code></pre></div><ul>
<li>如果变量<code>a+b+c+d</code>相加，返回值类型为<code>double</code></li>
</ul>
</li>
</ol>
<ul>
<li>
<p>如果变量<code>b+c+d+e</code>相加，返回值类型为<code>float</code></p>
<ul>
<li>如果<code>d+e</code>相加，返回值为int</li>
<li>如果<code>e+f</code>相加，返回值为int</li>
<li>。。。</li>
</ul>
<p>结论</p>
<ul>
<li>如果一组不同类型的变量进行运算，返回值取类型最大数据类型</li>
</ul>
</li>
<li>
<p>如果其中最大的数据类型为<code>int</code>，返回值为<code>int</code></p>
<ul>
<li>如果小于<code>int</code>的类型，返回<code>int</code></li>
</ul>
</li>
</ul>
<ol start="2">
<li>
<p>自增、自减  <code>++</code> <code>--</code></p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">operator</span><span class="o">;</span>
   
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Demo01</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">1</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">a</span><span class="o">++;</span>
        <span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="o">++</span><span class="n">a</span><span class="o">;</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div><p>输出结果为</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="m">3</span>
<span class="m">1</span>
<span class="m">3</span>
</code></pre></div><p><code>a++ ==  a = a+1</code></p>
<p><code>++a == a = a+1</code></p>
<p>乍看好像都一样，实则进行赋值时顺序有所不同</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">a</span><span class="o">++;</span> <span class="c1">// 先把a的值复制给b再做自增运算
</span><span class="c1"></span><span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="o">++</span><span class="n">a</span><span class="o">;</span> <span class="c1">// 先进行自增运算再复制给c
</span></code></pre></div><p>所以b的值是上述的<code>1</code>， 不信我们在b后紧跟一条输出<code>a 和 b</code>看看结果</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">operator</span><span class="o">;</span>
   
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Demo01</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">1</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">a</span><span class="o">++;</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="o">++</span><span class="n">a</span><span class="o">;</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div><div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="m">2</span>
<span class="m">1</span>
<span class="m">3</span>
<span class="m">1</span>
<span class="m">3</span>
   
Process finished with <span class="nb">exit</span> code <span class="m">0</span>
</code></pre></div></li>
<li>
<p>短路运算</p>
<p>逻辑于运算中如果第一个为<code>false</code>则不再进行后面的运算</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">operator</span><span class="o">;</span>
   
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Demo01</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">((</span><span class="n">c</span> <span class="o">&lt;</span> <span class="n">11</span> <span class="o">&amp;&amp;</span> <span class="n">c</span><span class="o">++</span> <span class="o">&lt;</span> <span class="n">100</span><span class="o">));</span> <span class="c1">// 添加自增运算验证第二个表达式是否执行
</span><span class="c1"></span>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
<span class="cm">/* 
</span><span class="cm">c &lt; 11 为真 继续后面的表达式运算
</span><span class="cm">结果为：
</span><span class="cm">true
</span><span class="cm">11
</span><span class="cm">*/</span>
</code></pre></div><div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">operator</span><span class="o">;</span>
   
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Demo01</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">((</span><span class="n">c</span> <span class="o">&gt;</span> <span class="n">11</span> <span class="o">&amp;&amp;</span> <span class="n">c</span><span class="o">++</span> <span class="o">&lt;</span> <span class="n">100</span><span class="o">));</span> <span class="c1">// 添加自增运算验证第二个表达式是否执行
</span><span class="c1"></span>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
<span class="cm">/* 
</span><span class="cm">c &gt; 11 为假 直接忽略后面的表达式运算返回假
</span><span class="cm">结果为：
</span><span class="cm">false
</span><span class="cm">10
</span><span class="cm">*/</span>
</code></pre></div><blockquote>
<p>逻辑或同理</p>
</blockquote>
</li>
<li>
<p>字符串拼接顺序</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">20</span><span class="o">;</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;&#34;</span><span class="o">+</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">);</span>
<span class="c1">// 结果为 1020
</span><span class="c1"></span><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">20</span><span class="o">;</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">+</span><span class="s">&#34;&#34;</span><span class="o">);</span>
<span class="c1">// 结果为 30
</span></code></pre></div><p>字符串拼接所在位置会影响输出结果，如果字符串在前则后方的<code>int</code>变量以字符串拼接，如果整型在前则进行算术运算</p>
</li>
<li>
<p>三元运算符</p>
<p><code>x ? y : z</code></p>
<p>如果 <code>x</code> 的运算结果为<code>true</code>则值为<code>y</code></p>
<p>反之为<code>z</code></p>
</li>
</ol>
<h3 id="条件表达式">条件表达式</h3>
<ol>
<li>
<p>九九乘法表</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">com.painso.study.condition</span><span class="o">;</span>
   
<span class="cm">/**
</span><span class="cm"> * @author ephz3nt
</span><span class="cm"> * @version 1.0
</span><span class="cm"> *
</span><span class="cm"> * @description 使用for实现99乘法表
</span><span class="cm"> * 1x1=1
</span><span class="cm"> * 1x2=2 2x2=4
</span><span class="cm"> * 1x3=3 2x3=6 3x3=9
</span><span class="cm"> * 1x4=4 2x4=8 3x4=12 4x4=16
</span><span class="cm"> * 1x5=5 2x5=10 3x5=15 4x5=20 5x5=25
</span><span class="cm"> * 1x6=6 2x6=12 3x6=18 4x6=24 5x6=30 6x6=36
</span><span class="cm"> * 1x7=7 2x7=14 3x7=21 4x7=28 5x7=35 6x7=42 7x7=49
</span><span class="cm"> * 1x8=8 2x8=16 3x8=24 4x8=32 5x8=40 6x8=48 7x8=56 8x8=64
</span><span class="cm"> * 1x9=9 2x9=18 3x9=27 4x9=36 5x9=45 6x9=54 7x9=63 8x9=72 9x9=81
</span><span class="cm"> */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">D1</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span><span class="n">1</span><span class="o">;</span><span class="n">x</span><span class="o">&lt;=</span><span class="n">9</span><span class="o">;</span><span class="n">x</span><span class="o">++){</span> <span class="c1">// 定义x 为被乘的数，不超过9
</span><span class="c1"></span>            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span><span class="n">1</span><span class="o">;</span><span class="n">y</span><span class="o">&lt;=</span><span class="n">x</span><span class="o">;</span><span class="n">y</span><span class="o">++){</span> <span class="c1">// 定义y为乘数，循环乘到不满足&lt;=x退出
</span><span class="c1"></span>                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%dx%d=%d\t&#34;</span><span class="o">,</span><span class="n">y</span><span class="o">,</span><span class="n">x</span><span class="o">,</span><span class="n">y</span><span class="o">*</span><span class="n">x</span><span class="o">);</span> <span class="c1">// 使用格式化输出 &#34;乘数x被乘数=积&#34; , 不换行
</span><span class="c1"></span>            <span class="o">}</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span> <span class="c1">// 嵌套for执行结束后输出换行
</span><span class="c1"></span>        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></li>
<li>
<p>打印金字塔三角形</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">   <span class="kn">package</span> <span class="nn">com.painso.study.condition</span><span class="o">;</span>
      
   <span class="kd">public</span> <span class="kd">class</span> <span class="nc">D2</span> <span class="o">{</span>
       <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
           <span class="cm">/**
</span><span class="cm">            * 打印一个三角形
</span><span class="cm">            * 1. 把三角形拆分成左右两边
</span><span class="cm">            * 2. 定义几个矩形框起来
</span><span class="cm">            * 3. 打印左边空白区域
</span><span class="cm">            * 4. 打印三角形左边
</span><span class="cm">            */</span>
           <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">5</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
               <span class="c1">// 打印空白区
</span><span class="c1"></span>               <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">5</span><span class="o">;</span> <span class="n">j</span> <span class="o">&gt;=</span> <span class="n">i</span><span class="o">;</span> <span class="n">j</span><span class="o">--)</span> <span class="o">{</span>
                   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">&#34; &#34;</span><span class="o">);</span>
               <span class="o">}</span>
               <span class="c1">// 反向打印三角形左边
</span><span class="c1"></span>               <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">1</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">i</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">&#34;*&#34;</span><span class="o">);</span>
               <span class="o">}</span>
               <span class="c1">// 打印三角形右边
</span><span class="c1"></span>               <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">1</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">i</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">&#34;*&#34;</span><span class="o">);</span>
               <span class="o">}</span>
               <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>
           <span class="o">}</span>
       <span class="o">}</span>
   <span class="o">}</span>
   <span class="c1">// 输出
</span><span class="c1"></span>        <span class="o">*</span>
       <span class="o">***</span>
      <span class="o">*****</span>
     <span class="o">*******</span>
    <span class="o">*********</span>
</code></pre></div></li>
</ol>
<h3 id="方法">方法</h3>
<ol>
<li>
<p>方法的重载</p>
<ul>
<li>
<p>重载就是在一个类中，有相同的函数名称，但形参不同的函数</p>
</li>
<li>
<p>方法的重载规则</p>
<ol>
<li>方法名称必须相同</li>
<li>参数列表必须不同(个数、类型、排列顺序)</li>
<li>方法的返回值类型可以相同也可以不同</li>
<li>仅仅返回值类型不同不足以成为方法的重载</li>
</ol>
</li>
<li>
<p>实现理论</p>
<p>方法名称相同时，编译器会根据调用方法的参数个数、参数类型等去逐个匹配，以选择对应的方法，如果匹配失败则编译器报错</p>
</li>
</ul>
</li>
<li>
<p>可变参数</p>
<ul>
<li>JDK 1.5开始支持</li>
<li>在方法声明中，在制定参数类型后加一个省略号<code>...</code></li>
<li>一个方法中只能制定一个可变参数，它必须是该方法的最后一个参数。</li>
<li>可变参数的传入类型必须一致</li>
<li>任何普通的参数必须在它之前声明</li>
</ul>
</li>
<li>
<p>递归 <code>Recursion</code></p>
<ul>
<li>
<p>自己调用自己</p>
</li>
<li>
<p>利用递归可以用简单的程序来解决一些复杂的问题</p>
</li>
<li>
<p>它通常把一个大型复杂的问题层层转化为一个与原问题相似的且规模较小的问题来求解</p>
</li>
<li>
<p>递归策略只需少量的程序代码就可描述出解题过程所需要的多次重复计算，大大减少了程序的代码量</p>
</li>
<li>
<p>递归的能力在与用有限的语句来定义对象的无限集合</p>
</li>
<li>
<p>递归结构包含两个部分</p>
</li>
<li>
<ol>
<li>递归头: 什么时候不调用自身的方法。如果没有头，将陷入死循环</li>
<li>递归体: 什么时候需要调用自身方法</li>
</ol>
</li>
<li>
<p>下面的代码体现了递归的 <code>它通常把一个大型复杂的问题层层转化为一个与原问题相似的且规模较小的问题来求解</code></p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">com.painso.study.method</span><span class="o">;</span>
     
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Recursion2</span> <span class="o">{</span>
    <span class="cm">/* 阶乘
</span><span class="cm">        2! = 2 * 1
</span><span class="cm">        3! = 3 * 2 * 1
</span><span class="cm">        5! = 5 * 4 * 3 * 2 * 1
</span><span class="cm">     */</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="cm">/*
</span><span class="cm">            计算5的阶乘
</span><span class="cm">            流程如下:
</span><span class="cm">            main -&amp;gt; recursion(5) -&amp;gt; recursion(4) -&amp;gt; recursion(3) -&amp;gt; recursion(2) -&amp;gt; recursion(1)
</span><span class="cm">            由于递归体if判断了参数为1直接返回
</span><span class="cm">            所以最后的recursion(1)得到一个具体值 1 后开始回传
</span><span class="cm">            recursion(1):1  返回给       recursion(2) == 2*1 == 2
</span><span class="cm">            recursion(2):2  继续返回给    recursion(3) == 3*2 == 6
</span><span class="cm">            recursion(3):6  继续返回给    recursion(4) == 4*6 == 24
</span><span class="cm">            recursion(4):24 继续返回给    recursion(5) == 5*24 == 120
</span><span class="cm">         */</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">recursion</span><span class="o">(</span><span class="n">5</span><span class="o">));</span>
    <span class="o">}</span>
     
    <span class="c1">// 使用递归计算阶乘
</span><span class="c1"></span>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">recursion</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">){</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">n</span> <span class="o">==</span> <span class="n">1</span><span class="o">){</span>
            <span class="k">return</span> <span class="n">n</span><span class="o">;</span>
        <span class="o">}</span><span class="k">else</span><span class="o">{</span>
            <span class="cm">/*
</span><span class="cm">               5的阶乘这里等于 return recursion(5); == 5 * 4 * 3 * 2 * 1
</span><span class="cm">               因为我们在上面的if判断如果n==1直接返回从而跳出递归体
</span><span class="cm">             */</span>
            <span class="k">return</span> <span class="n">n</span><span class="o">*</span><span class="n">recursion</span><span class="o">(</span><span class="n">n</span><span class="o">-</span><span class="n">1</span><span class="o">);</span>
        <span class="o">}</span>
     
    <span class="o">}</span>
<span class="o">}</span><span class="n">dd</span>
</code></pre></div></li>
<li>
<p>递归适用于少量计算，因会在栈积压栈空间，容易引发异常且资源消耗很大(因为一直在嵌套调用方法)</p>
</li>
</ul>
</li>
</ol>
<h3 id="数组">数组</h3>
<ol>
<li>
<p>冒泡排序</p>
<ul>
<li>
<p>比较数组中相邻的两个数值大小，如果<code>a[0]&gt;a[1]</code> 则进行位置互换</p>
</li>
<li>
<p>java 实现</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">com.painso.study.array</span><span class="o">;</span>
     
<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
     
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BubbleSort</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">ary</span> <span class="o">=</span> <span class="o">{</span><span class="n">23</span><span class="o">,</span><span class="n">1</span><span class="o">,</span><span class="n">44</span><span class="o">,</span><span class="n">545</span><span class="o">,</span><span class="n">22</span><span class="o">,</span><span class="n">5677</span><span class="o">,</span><span class="n">223</span><span class="o">,</span><span class="n">11</span><span class="o">,</span><span class="n">32</span><span class="o">,</span><span class="n">4</span><span class="o">,</span><span class="n">13</span><span class="o">};</span>
<span class="c1">//        System.out.println(Arrays.toString(ary));
</span><span class="c1"></span>        <span class="n">sort</span><span class="o">(</span><span class="n">ary</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">array</span><span class="o">){</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span> <span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span><span class="n">j</span> <span class="o">&lt;</span> <span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="n">1</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
                <span class="kt">int</span> <span class="n">tmp</span><span class="o">;</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="n">j</span><span class="o">]&gt;</span><span class="n">array</span><span class="o">[</span><span class="n">j</span><span class="o">+</span><span class="n">1</span><span class="o">]){</span>
                    <span class="n">tmp</span> <span class="o">=</span> <span class="n">array</span><span class="o">[</span><span class="n">j</span><span class="o">+</span><span class="n">1</span><span class="o">];</span>
                    <span class="n">array</span><span class="o">[</span><span class="n">j</span><span class="o">+</span><span class="n">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">array</span><span class="o">[</span><span class="n">j</span><span class="o">];</span>
                    <span class="n">array</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">tmp</span><span class="o">;</span>
                <span class="o">}</span>
     
            <span class="o">}</span>
     
        <span class="o">}</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">array</span><span class="o">));</span>
     
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></li>
<li>
<p>顺便发一下Go的实现，Go的互换支持更简洁的写法 <code>a,b = b,a</code></p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kn">package</span> <span class="nx">main</span>
     
<span class="kn">import</span> <span class="p">(</span>
   <span class="s">&#34;fmt&#34;</span>
<span class="p">)</span>
     
<span class="kd">func</span> <span class="nf">sort</span><span class="p">(</span><span class="nx">arr</span> <span class="p">[]</span><span class="kt">int</span><span class="p">)</span> <span class="p">[]</span><span class="kt">int</span> <span class="p">{</span>
   <span class="k">for</span> <span class="nx">j</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">j</span> <span class="p">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="nx">arr</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span> <span class="p">{</span>
       <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="nx">arr</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
           <span class="k">if</span> <span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="p">&gt;</span> <span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="p">{</span>
               <span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span> <span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="p">=</span> <span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span> <span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span>
           <span class="p">}</span>
       <span class="p">}</span>
   <span class="p">}</span>
   <span class="k">return</span> <span class="nx">arr</span>
<span class="p">}</span>
     
<span class="kd">func</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
   <span class="c1">//{3,22,1,55,33,76,32,22}
</span><span class="c1"></span>   <span class="kd">var</span> <span class="nx">b</span> <span class="p">=</span> <span class="p">[]</span><span class="kt">int</span><span class="p">{</span><span class="mi">3</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">55</span><span class="p">,</span> <span class="mi">33</span><span class="p">,</span> <span class="mi">76</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">22</span><span class="p">}</span>
   <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="nf">sort</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span>
     
<span class="p">}</span>
</code></pre></div></li>
<li>
<p><code>冒泡排序还是不太懂，需复习</code> <a href="https://www.bilibili.com/video/av68373450?p=58">https://www.bilibili.com/video/av68373450?p=58</a></p>
</li>
</ul>
</li>
</ol>
]]></content></item><item><title>Java 变量作用域</title><link>https://painso.com/posts/tech/2020/java-variable-scope/</link><pubDate>Sun, 23 Aug 2020 16:50:36 +0800</pubDate><guid>https://painso.com/posts/tech/2020/java-variable-scope/</guid><description>Java 变量分为: 类变量 实例变量 局部变量 类变量 需要在变量前添加修饰符static，可以在方法中直接调用
public class Hello { static int number = 10; // 定义类变量 public static void main(String[] args) { System.out.println(number); // 直接调用 } } 实例变量 定义格式为String &amp;lt;type&amp;gt; &amp;lt;name&amp;gt; = &amp;lt;value&amp;gt;;
实例变量从属于对象，使用时需要进行初始化
public class Hello { // 定义实例变量 String name = &amp;#34;Benjamin&amp;#34;; int age = 18; public static void main(String[] args) { Hello instance = new Hello() ; // new 一个当前的Hello对象 System.</description><content type="html"><![CDATA[<h3 id="java-变量分为">Java 变量分为:</h3>
<ol>
<li>类变量</li>
<li>实例变量</li>
<li>局部变量</li>
</ol>
<h4 id="类变量">类变量</h4>
<p>需要在变量前添加修饰符<code>static</code>，可以在方法中直接调用</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Hello</span> <span class="o">{</span>
    <span class="kd">static</span> <span class="kt">int</span> <span class="n">number</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span> <span class="c1">// 定义类变量
</span><span class="c1"></span>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">number</span><span class="o">);</span>  <span class="c1">// 直接调用
</span><span class="c1"></span>    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div><h4 id="实例变量">实例变量</h4>
<p>定义格式为<code>String &lt;type&gt; &lt;name&gt; = &lt;value&gt;;</code></p>
<p>实例变量从属于对象，使用时需要进行初始化</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Hello</span> <span class="o">{</span>
    <span class="c1">// 定义实例变量
</span><span class="c1"></span>    <span class="n">String</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#34;Benjamin&#34;</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">age</span> <span class="o">=</span> <span class="n">18</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Hello</span> <span class="n">instance</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Hello</span><span class="o">()</span> <span class="o">;</span> <span class="c1">// new 一个当前的Hello对象
</span><span class="c1"></span>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;name: %s, age: %s\n&#34;</span><span class="o">,</span><span class="n">instance</span><span class="o">.</span><span class="na">name</span><span class="o">,</span><span class="n">instance</span><span class="o">.</span><span class="na">age</span><span class="o">);</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;-------------------------------------------------&#34;</span><span class="o">);</span>
        <span class="c1">// 修改实例变量的值
</span><span class="c1"></span>        <span class="n">instance</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="s">&#34;Bob&#34;</span><span class="o">;</span>
        <span class="n">instance</span><span class="o">.</span><span class="na">age</span> <span class="o">=</span> <span class="n">24</span><span class="o">;</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;name: %s, age: %s\n&#34;</span><span class="o">,</span><span class="n">instance</span><span class="o">.</span><span class="na">name</span><span class="o">,</span><span class="n">instance</span><span class="o">.</span><span class="na">age</span><span class="o">);</span>

    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div><h4 id="局部变量">局部变量</h4>
<p>定义在方法内部的变量，该方法体使用完后跟随销毁，无法被其他方法直接调用</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Hello</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// 定义局部变量
</span><span class="c1"></span>        <span class="n">String</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#34;Benjamin&#34;</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">age</span> <span class="o">=</span> <span class="n">18</span><span class="o">;</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;name: %s, age: %s\n&#34;</span><span class="o">,</span><span class="n">name</span><span class="o">,</span><span class="n">age</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div>]]></content></item><item><title>Manjaro 添加自定义快捷方式</title><link>https://painso.com/posts/tech/2020/manjaro-custom-shortcut/</link><pubDate>Sat, 22 Aug 2020 21:19:42 +0800</pubDate><guid>https://painso.com/posts/tech/2020/manjaro-custom-shortcut/</guid><description>今天装了个Goland, 由于没有像Ubuntu那样的deb包导致每次启动都需shell进相应目录执行
./goland.sh 非常麻烦
稍微找了下资料
首先进入 &amp;ldquo;/usr/share/applications&amp;rdquo; 目录, 可以看到里面有很多的 .desktop 文件, 这就是快捷方式文件了
可以随便找一个复制出来, 如:
sudo cp idea.desktop goland.desktop 文件大概长这样, 怎么改一目了然了 路径按照自己实际目录修改就行.
goland.desktop
[Desktop Entry] Version=1.0 Type=Application Name=Goland Comment=Develop with pleasure! Exec=/home/ephz3nt/Downloads/GoLand-2020.2.2/bin/goland.sh %f Icon=/home/ephz3nt/Downloads/GoLand-2020.2.2/bin/goland.png Terminal=false StartupNotify=true StartupWMClass=jetbrains-goland Categories=Development;IDE;Go; 顺便贴一下Typora的配置吧, 正好今天在用
[Desktop Entry] Version=1.0 Type=Application Name=Typora Comment=Typora Markdown Editor Exec=/home/ephz3nt/Downloads/Typora-linux-x64/Typora %f Icon=/home/ephz3nt/Downloads/Typora-linux-x64/resources/app/asserts/icon/icon_128x128.png Terminal=false StartupNotify=true #StartupWMClass=jetbrains-goland Categories=Development;Markdown;Typora;</description><content type="html"><![CDATA[<p>今天装了个Goland, 由于没有像Ubuntu那样的deb包导致每次启动都需shell进相应目录执行</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">./goland.sh
</code></pre></div><p>非常麻烦</p>
<p>稍微找了下资料</p>
<p>首先进入 &ldquo;/usr/share/applications&rdquo; 目录, 可以看到里面有很多的 .desktop 文件, 这就是快捷方式文件了</p>
<p>可以随便找一个复制出来, 如:</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">sudo cp idea.desktop goland.desktop
</code></pre></div><p>文件大概长这样, 怎么改一目了然了 路径按照自己实际目录修改就行.</p>
<blockquote>
<p>goland.desktop</p>
</blockquote>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>Desktop Entry<span class="o">]</span>
<span class="nv">Version</span><span class="o">=</span>1.0
<span class="nv">Type</span><span class="o">=</span>Application
<span class="nv">Name</span><span class="o">=</span>Goland
<span class="nv">Comment</span><span class="o">=</span>Develop with pleasure!
<span class="nv">Exec</span><span class="o">=</span>/home/ephz3nt/Downloads/GoLand-2020.2.2/bin/goland.sh %f
<span class="nv">Icon</span><span class="o">=</span>/home/ephz3nt/Downloads/GoLand-2020.2.2/bin/goland.png
<span class="nv">Terminal</span><span class="o">=</span><span class="nb">false</span>
<span class="nv">StartupNotify</span><span class="o">=</span><span class="nb">true</span>
<span class="nv">StartupWMClass</span><span class="o">=</span>jetbrains-goland
<span class="nv">Categories</span><span class="o">=</span>Development<span class="p">;</span>IDE<span class="p">;</span>Go<span class="p">;</span>
</code></pre></div><p>顺便贴一下Typora的配置吧, 正好今天在用</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>Desktop Entry<span class="o">]</span>
<span class="nv">Version</span><span class="o">=</span>1.0
<span class="nv">Type</span><span class="o">=</span>Application
<span class="nv">Name</span><span class="o">=</span>Typora
<span class="nv">Comment</span><span class="o">=</span>Typora Markdown Editor
<span class="nv">Exec</span><span class="o">=</span>/home/ephz3nt/Downloads/Typora-linux-x64/Typora %f
<span class="nv">Icon</span><span class="o">=</span>/home/ephz3nt/Downloads/Typora-linux-x64/resources/app/asserts/icon/icon_128x128.png
<span class="nv">Terminal</span><span class="o">=</span><span class="nb">false</span>
<span class="nv">StartupNotify</span><span class="o">=</span><span class="nb">true</span>
<span class="c1">#StartupWMClass=jetbrains-goland</span>
<span class="nv">Categories</span><span class="o">=</span>Development<span class="p">;</span>Markdown<span class="p">;</span>Typora<span class="p">;</span>
</code></pre></div><p><img src="../../../../images/manjaro-custom-shortcut/goland.png" alt="goland"></p>
<p><img src="../../../../images/manjaro-custom-shortcut/typora.png" alt="typora"></p>
]]></content></item><item><title>snap 设置HTTP代理</title><link>https://painso.com/posts/tech/2020/snap-set-proxy/</link><pubDate>Sat, 22 Aug 2020 20:58:13 +0800</pubDate><guid>https://painso.com/posts/tech/2020/snap-set-proxy/</guid><description>这里由于我用的是V2RAY, 代理端口 &amp;ldquo;12333&amp;rdquo;
sudo snap set system proxy.http=&amp;#34;http://127.0.0.1:12333&amp;#34; sudo snap set system proxy.https=&amp;#34;http://127.0.0.1:12333&amp;#34; 酸爽！</description><content type="html"><![CDATA[<blockquote>
<p>这里由于我用的是V2RAY, 代理端口 &ldquo;12333&rdquo;</p>
</blockquote>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">sudo snap <span class="nb">set</span> system proxy.http<span class="o">=</span><span class="s2">&#34;http://127.0.0.1:12333&#34;</span>
sudo snap <span class="nb">set</span> system proxy.https<span class="o">=</span><span class="s2">&#34;http://127.0.0.1:12333&#34;</span>
</code></pre></div><p><img src="/images/snap-set-proxy/snap-install.png" alt=""></p>
<p>酸爽！</p>
]]></content></item><item><title>博客迁移至github &amp; hugo。</title><link>https://painso.com/posts/thinking/2020/migrated-to-hugo/</link><pubDate>Tue, 03 Mar 2020 18:32:00 +0000</pubDate><guid>https://painso.com/posts/thinking/2020/migrated-to-hugo/</guid><description>从wordpress到hexo，从hexo到hugo 搭配git-pages 实现白嫖 准备重拾博客</description><content type="html">&lt;p>从wordpress到hexo，从hexo到hugo
搭配git-pages 实现白嫖
准备重拾博客&lt;/p></content></item><item><title>使用acme签发&amp;续期 Let's Encrypt 证书。</title><link>https://painso.com/posts/tech/2017/acme-lets-encrypt-issue/</link><pubDate>Tue, 28 Feb 2017 14:57:48 +0000</pubDate><guid>https://painso.com/posts/tech/2017/acme-lets-encrypt-issue/</guid><description>acme.sh 实现了 acme 协议, 可以从 letsencrypt 生成免费的证书.
使用它的原因是 acme.sh 支持DNS API方式签发证书,这可方便太多了
支持的DNS服务商有: cloudflare, dnspod, cloudxns, godaddy 以及 ovh 等数十种解析商的自动集成.
[root@ROOT ~]# ls .acme.sh/dnsapi/ dns_ad.sh dns_cf.sh dns_do.sh dns_gd.sh dns_linode.sh dns_myapi.sh dns_pdns.sh dns_ali.sh dns_cx.sh dns_dp.sh dns_ispconfig.sh dns_lua.sh dns_nsupdate.sh README.md dns_aws.sh dns_cyon.sh dns_freedns.sh dns_lexicon.sh dns_me.sh dns_ovh.sh 获取acme.sh
curl https://get.acme.sh | sh 将安装acme.sh至你当前账户根目录下的 .acme.sh下
创建一个bash的alias, 方便直接使用acme.sh
vim ~/.bashrc 增加一行 alias acme.sh=~/.acme.sh/acme.sh
# .bashrc # User specific aliases and functions alias acme.sh=~/.acme.sh/acme.sh alias rm=&amp;#39;rm -i&amp;#39; alias cp=&amp;#39;cp -i&amp;#39; alias mv=&amp;#39;mv -i&amp;#39; 执行 source .</description><content type="html"><![CDATA[<p>acme.sh 实现了 acme 协议, 可以从 letsencrypt 生成免费的证书.</p>
<p>使用它的原因是 acme.sh 支持DNS API方式签发证书,这可方便太多了</p>
<p>支持的DNS服务商有: cloudflare, dnspod, cloudxns, godaddy 以及 ovh 等数十种解析商的自动集成.</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>root@ROOT ~<span class="o">]</span><span class="c1"># ls .acme.sh/dnsapi/</span>
dns_ad.sh         dns_cf.sh         dns_do.sh         dns_gd.sh         dns_linode.sh     dns_myapi.sh      dns_pdns.sh
dns_ali.sh        dns_cx.sh         dns_dp.sh         dns_ispconfig.sh  dns_lua.sh        dns_nsupdate.sh   README.md
dns_aws.sh        dns_cyon.sh       dns_freedns.sh    dns_lexicon.sh    dns_me.sh         dns_ovh.sh        
</code></pre></div><ol>
<li>
<p>获取acme.sh</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">curl  https://get.acme.sh <span class="p">|</span> sh
</code></pre></div><p>将安装acme.sh至你当前账户根目录下的 .acme.sh下</p>
<p>创建一个bash的alias, 方便直接使用acme.sh</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">vim ~/.bashrc
</code></pre></div><p>增加一行 <code>alias acme.sh=~/.acme.sh/acme.sh</code></p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="c1"># .bashrc</span>

<span class="c1"># User specific aliases and functions</span>
<span class="nb">alias</span> acme.sh<span class="o">=</span>~/.acme.sh/acme.sh
<span class="nb">alias</span> <span class="nv">rm</span><span class="o">=</span><span class="s1">&#39;rm -i&#39;</span>
<span class="nb">alias</span> <span class="nv">cp</span><span class="o">=</span><span class="s1">&#39;cp -i&#39;</span>
<span class="nb">alias</span> <span class="nv">mv</span><span class="o">=</span><span class="s1">&#39;mv -i&#39;</span>
</code></pre></div><p>执行 <code>source .bashrc</code></p>
<p>然后可直接执行 acme.sh 即可看到此工具的更多使用方法.</p>
</li>
<li>
<p>签发证书</p>
<p>我的域名DNS使用的是CloudXNS, 登录官网获取相关API参数即可</p>
<p>执行</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="nb">export</span> <span class="nv">CX_Key</span><span class="o">=</span><span class="s2">&#34;3739fb69fewfwefwe996b255f49dda&#34;</span>
<span class="nb">export</span> <span class="nv">CX_Secret</span><span class="o">=</span><span class="s2">&#34;7745fwefewfew4c62&#34;</span>
</code></pre></div><p>这里的 CX_Key &amp; CX_Secret 为CloudXNS脚本变量名, 如果你是其他DNS服务商如Cloudflare,可查看 ~/.acme.sh/dnsapi/dns_cf.sh 得知相应DNSAPI的变量名称</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="cp">#!/usr/bin/env bash
</span><span class="cp"></span>
#
<span class="c1">#CF_Key=&#34;sdfsdfsdfljlbjkljlkjsdfoiwje&#34;</span>
#
<span class="c1">#CF_Email=&#34;xxxx@sss.com&#34;</span>

<span class="nv">CF_Api</span><span class="o">=</span><span class="s2">&#34;https://api.cloudflare.com/client/v4&#34;</span>

</code></pre></div><p>执行签发证书命令</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">acme.sh --issue --dns dns_cx -d xx1.example.com
</code></pre></div><p>&ndash;issue 为签发</p>
<p>&ndash;dns 为使用dns验证,后面跟上域名所属DNS服务商,Cloudxns 为 dns_cx , Cloudflare 为 dns_cf 具体名称可以参考前面说的.</p>
<p>-d 申请签发域名, 可同时签发多个 如: -d a.example.com -d b.example.com -d c.example.com, 无需记录指向当前服务器, 所以你可以使用任何一台计算机签发</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>root@ROOT /<span class="o">]</span><span class="c1"># acme.sh --issue --dns dns_cx -d a.example.com -d b.example.com -d c.example.com</span>
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:23:36 CST 2017<span class="o">]</span> Multi <span class="nv">domain</span><span class="o">=</span><span class="s1">&#39;DNS:b.example.com,DNS:c.example.com&#39;</span>
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:23:36 CST 2017<span class="o">]</span> Getting domain auth token <span class="k">for</span> each domain
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:23:36 CST 2017<span class="o">]</span> Getting webroot <span class="k">for</span> <span class="nv">domain</span><span class="o">=</span><span class="s1">&#39;a.example.com&#39;</span>
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:23:36 CST 2017<span class="o">]</span> Getting new-authz <span class="k">for</span> <span class="nv">domain</span><span class="o">=</span><span class="s1">&#39;a.example.com&#39;</span>
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:23:39 CST 2017<span class="o">]</span> The new-authz request is ok.
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:23:39 CST 2017<span class="o">]</span> Getting webroot <span class="k">for</span> <span class="nv">domain</span><span class="o">=</span><span class="s1">&#39;b.example.com&#39;</span>
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:23:39 CST 2017<span class="o">]</span> Getting new-authz <span class="k">for</span> <span class="nv">domain</span><span class="o">=</span><span class="s1">&#39;b.example.com&#39;</span>
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:23:40 CST 2017<span class="o">]</span> The new-authz request is ok.
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:23:40 CST 2017<span class="o">]</span> Getting webroot <span class="k">for</span> <span class="nv">domain</span><span class="o">=</span><span class="s1">&#39;c.example.com&#39;</span>
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:23:40 CST 2017<span class="o">]</span> Getting new-authz <span class="k">for</span> <span class="nv">domain</span><span class="o">=</span><span class="s1">&#39;c.example.com&#39;</span>
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:23:42 CST 2017<span class="o">]</span> The new-authz request is ok.
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:23:42 CST 2017<span class="o">]</span> Found domain api file: /root/.acme.sh/dnsapi/dns_cx.sh
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:23:42 CST 2017<span class="o">]</span> Adding record
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:23:43 CST 2017<span class="o">]</span> Sleep <span class="m">120</span> seconds <span class="k">for</span> the txt records to take effect
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:25:44 CST 2017<span class="o">]</span> a.example.com is already verified, skip dns-01.
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:25:44 CST 2017<span class="o">]</span> Verifying:b.example.com
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:25:48 CST 2017<span class="o">]</span> Success
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:25:48 CST 2017<span class="o">]</span> c.example.com is already verified, skip dns-01.
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:25:50 CST 2017<span class="o">]</span> Deleted record _acme-challenge.b.example.com
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:25:50 CST 2017<span class="o">]</span> Verify finished, start to sign.
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:25:52 CST 2017<span class="o">]</span> Cert success.
-----BEGIN CERTIFICATE-----
MIIFHDCCBASgAwIBAgISA2P67Iuu/0deP//XwhZsoihcMA0GCSqGSIb3DQEBCwUA
MEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD
ExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xNzAyMjgwNjI3MDBaFw0x
NzA1MjkwNjI3MDBaMBgxFjAUBgNVBAMTDWEuZXBoemVudC5uZXQwggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQCtmZSiVu6f27C7mxDZ2EwOszAps/e4K06A
I9of7gkWCgT6T2Cvze9w0d8j+o9hHft+ppcgLLywmVH2XpadQ6h/+8VCJO1ZLHCH
zEkXGn9FvqfAfs2bDvJHhIhYy7579jljEr86zwO0PsO8bqaJgPEO8lDJ+KY9Tfq2
igsVZR79QtmTHimxI4t2liUnAt+pRn4z0mMWQvm247dlfI4h3TkqlSiyCo9Vn3dL
ULaGBJ7zpTKsffgon79WfraE0nseMNE0vt0ASQew4TztNfswbHOF7fzTQLa2K1QT
76thTc8FdmzkXeNqahncU0fWxK5eM+/HB0sHrFcmOFcckx97dEEBAgMBAAGjggIs
MIICKDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUF
BwMCMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYEFKsqhp5nOgaAkm8tIsHe3hQOUq/S
MB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe/zqOyhMHAGCCsGAQUFBwEBBGQw
r4Bc5gVW9hcTgyz8RYEGJFAuNbf6E4Iy7mMHkkTuS50E84X/CXP/cICvwA5aZszN
<span class="nv">W7RRqkwMeW9KbhNU0txCdA</span><span class="o">==</span>
-----END CERTIFICATE-----
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:25:52 CST 2017<span class="o">]</span> Your cert is in  /root/.acme.sh/a.example.com/a.example.com.cer 
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:25:52 CST 2017<span class="o">]</span> Your cert key is in  /root/.acme.sh/a.example.com/a.example.com.key 
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:25:52 CST 2017<span class="o">]</span> The intermediate CA cert is in  /root/.acme.sh/a.example.com/ca.cer 
<span class="o">[</span>Tue Feb <span class="m">28</span> 15:25:52 CST 2017<span class="o">]</span> And the full chain certs is there:  /root/.acme.sh/a.example.com/fullchain.cer 
</code></pre></div><p>签发完成</p>
<p>安装证书</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">acme.sh  --installcert  -d a.example.com -d b.example.com -d c.example.com <span class="se">\
</span><span class="se"></span>        --keypath   /data/auth/server-key.pem <span class="se">\
</span><span class="se"></span>        --fullchainpath /data/auth/server-cert.pem <span class="se">\
</span><span class="se"></span>        --reloadcmd  <span class="s2">&#34;service nginx restart&#34;</span>
</code></pre></div><p>上述路径&amp;域名按需修改</p>
</li>
<li>
<p>更新证书</p>
<p>目前证书在 60 天以后会自动更新, 你无需任何操作. 今后有可能会缩短这个时间, 不过都是自动的, 你不用关心.</p>
</li>
<li>
<p>更新 acme.sh</p>
<p>目前由于 acme 协议和 letsencrypt CA 都在频繁的更新, 因此 acme.sh 也经常更新以保持同步.</p>
<p>升级 acme.sh 到最新版 :</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">acme.sh --upgrade
</code></pre></div><p>如果你不想手动升级, 可以开启自动升级:</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">acme.sh  --upgrade  --auto-upgrade
</code></pre></div><p>之后, acme.sh 就会自动保持更新了.</p>
<p>你也可以随时关闭自动更新:</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">acme.sh --upgrade  --auto-upgrade  <span class="m">0</span>
</code></pre></div></li>
</ol>
]]></content></item><item><title>陈佩斯&amp;朱时茂 主角与配角</title><link>https://painso.com/posts/share/2017/chenpeisi-zhushimao-zhujueyupeijue/</link><pubDate>Fri, 13 Jan 2017 20:26:48 +0000</pubDate><guid>https://painso.com/posts/share/2017/chenpeisi-zhushimao-zhujueyupeijue/</guid><description/><content type="html"><![CDATA[<p><a href="http://www.youtube.com/watch?v=w_o8fOKZKX0" title=""><img src="http://img.youtube.com/vi/w_o8fOKZKX0/0.jpg" alt=""></a></p>
]]></content></item><item><title>博客迁移到hexo。</title><link>https://painso.com/posts/thinking/2017/migrate-to-hexo/</link><pubDate>Fri, 13 Jan 2017 12:17:00 +0000</pubDate><guid>https://painso.com/posts/thinking/2017/migrate-to-hexo/</guid><description>终于抛弃臃肿的WP了，这种静态页面博客貌似挺好用的。</description><content type="html">&lt;p>终于抛弃臃肿的WP了，这种静态页面博客貌似挺好用的。&lt;/p></content></item><item><title>ocserv 安装记录。</title><link>https://painso.com/posts/tech/2016/ocserv-install-usage/</link><pubDate>Fri, 03 Jun 2016 17:53:05 +0000</pubDate><guid>https://painso.com/posts/tech/2016/ocserv-install-usage/</guid><description>ocserv 全称是 OpenConnect VPN Server。实现了 AnyConnect SSL VPN 协议，兼容 OpenConnection VPN 客户端。特点是体积小、安全和可配置。依赖标准协议如 TLS 1.2 和数据报文 TLS。
它通过实现Cisco的AnyConnect协议，用DTLS作为主要的加密传输协议。
它的主要好处在于:
AnyConnect的VPN协议默认使用UDP DTLS作为数据传输，但如果有什么网络问题导致UDP传输出现问题，它会利用最初建立的TCP TLS通道作为备份通道，降低VPN断开的概率。 AnyConnect作为Cisco新一代的VPN解决方案，被用于许多大型企业，这些企业依赖它提供正常的商业运作，这些正常运作对应的经济效益（读作GDP），是我们最好的伙伴。 OpenConnet的架设足够麻烦，我的意思是，如果你不是大型企业，你会用AnyConnect的概率无限趋近于零。再者，如果它足够简单，我就不用写这篇文章了。(摘自比特客栈) 支持平台：Windows、Mac、Android、iOS、Windows Phone 基本是全平台支持, 我为什么会用他而不用Shadowsocks，因为我一个朋友用的iPhone，而且未越狱又想全局，所以才想到ocserv。
系统版本：CentOS release 6.7 x64
安装前置关联库：
yum -y install autoconf automake gcc libtasn1-devel zlib zlib-devel trousers trousers-devel gmp-devel gmp xz texinfo libnl-devel libnl tcp_wrappers-libs tcp_wrappers-devel tcp_wrappers dbus dbus-devel ncurses-devel pam-devel readline-devel bison bison-devel flex gcc automake autoconf wget expat-devel openssl-devel nettle
wget http://ftp.</description><content type="html"><![CDATA[<p>ocserv 全称是 OpenConnect VPN Server。实现了 AnyConnect SSL VPN 协议，兼容 OpenConnection VPN 客户端。特点是体积小、安全和可配置。依赖标准协议如 TLS 1.2 和数据报文 TLS。</p>
<p>它通过实现Cisco的AnyConnect协议，用DTLS作为主要的加密传输协议。</p>
<p>它的主要好处在于:</p>
<ul>
<li>AnyConnect的VPN协议默认使用UDP DTLS作为数据传输，但如果有什么网络问题导致UDP传输出现问题，它会利用最初建立的TCP TLS通道作为备份通道，降低VPN断开的概率。</li>
<li>AnyConnect作为Cisco新一代的VPN解决方案，被用于许多大型企业，这些企业依赖它提供正常的商业运作，这些正常运作对应的经济效益（读作GDP），是我们最好的伙伴。</li>
<li>OpenConnet的架设足够麻烦，我的意思是，如果你不是大型企业，你会用AnyConnect的概率无限趋近于零。再者，如果它足够简单，我就不用写这篇文章了。(摘自<a href="https://bitinn.net/11084/">比特客栈</a>)</li>
</ul>
<p>支持平台：Windows、Mac、Android、iOS、Windows Phone 基本是全平台支持, 我为什么会用他而不用Shadowsocks，因为我一个朋友用的iPhone，而且未越狱又想全局，所以才想到ocserv。</p>
<p>系统版本：CentOS release 6.7 x64</p>
<p>安装前置关联库：</p>
<pre><code>yum -y install autoconf automake gcc libtasn1-devel zlib zlib-devel trousers trousers-devel gmp-devel gmp xz texinfo libnl-devel libnl tcp_wrappers-libs tcp_wrappers-devel tcp_wrappers dbus dbus-devel ncurses-devel pam-devel readline-devel bison bison-devel flex gcc automake autoconf wget expat-devel openssl-devel
</code></pre><p>nettle</p>
<pre><code>wget http://ftp.gnu.org/gnu/nettle/nettle-2.7.1.tar.gz
tar zxf nettle-2.7.1.tar.gz &amp;&amp; cd nettle-2.7.1
./configure &amp;&amp; make &amp;&amp; make install
cd ..
</code></pre><p>unbound</p>
<pre><code>wget http://unbound.nlnetlabs.nl/downloads/unbound-1.4.22.tar.gz
tar zxf unbound-1.4.22.tar.gz &amp;&amp; cd unbound-1.4.22
./configure --prefix=/usr --sysconfdir=/etc &amp;&amp; make &amp;&amp; make install
cd ..
</code></pre><p>安装后执行程序将会出现动态库文件找不到的问题：</p>
<pre><code>unbound-anchor: error while loading shared libraries: libunbound.so.2: cannot open shared object file: No such file or directory
</code></pre><p>这是因为系统默认没有找/usr/local/lib目录下的库文件，为了一劳永逸，我们把将路径加入到配置文件中：</p>
<pre><code>echo '/usr/local/lib/' &gt; /etc/ld.so.conf.d/local-libraries.conf &amp;&amp; ldconfig
echo '/usr/local/lib64/' &gt;&gt; /etc/ld.so.conf.d/local-libraries.conf &amp;&amp; ldconfig

</code></pre><p>生成配置文件：</p>
<pre><code>mkdir /etc/unbound/ &amp;&amp; unbound-anchor -a &quot;/etc/unbound/root.key&quot;
</code></pre><p>这是为了消除之后编译gnutls时遇到的警告信息：</p>
<p><a href="/images/2016/06/gnutls-warning.png"><img src="/images/2016/06/gnutls-warning-300x62.png" alt="gnutls-warning"></a></p>
<p>添加环境变量(为安装gnutls)：</p>
<pre><code>32bit

export LD_LIBRARY_PATH=/usr/local/lib/:/usr/local/lib64/ NETTLE_CFLAGS=&quot;-I/usr/local/include/&quot; NETTLE_LIBS=&quot;-L/usr/local/lib64/ -lnettle&quot; HOGWEED_CFLAGS=&quot;-I/usr/local/include&quot; HOGWEED_LIBS=&quot;-L/usr/local/lib64/ -lhogweed&quot;

export LD_LIBRARY_PATH=/usr/local/lib/:/usr/local/lib64/ LIBGNUTLS_CFLAGS=&quot;-I/usr/local/include/&quot; LIBGNUTLS_LIBS=&quot;-L/usr/local/lib/ -lgnutls&quot; LIBNL3_CFLAGS=&quot;-I/usr/local/include&quot; LIBNL3_LIBS=&quot;-L/usr/local/lib/ -lnl-3 -lnl-route-3&quot;

64bit

export LD_LIBRARY_PATH=/usr/lib/:/usr/lib64/ NETTLE_CFLAGS=&quot;-I/usr/include/&quot; NETTLE_LIBS=&quot;-L/usr/lib64/ -lnettle&quot; HOGWEED_CFLAGS=&quot;-I/usr/include&quot; HOGWEED_LIBS=&quot;-L/usr/lib64/ -lhogweed&quot;

export LD_LIBRARY_PATH=/usr/lib/:/usr/lib64/ LIBGNUTLS_CFLAGS=&quot;-I/usr/include/&quot; LIBGNUTLS_LIBS=&quot;-L/usr/lib/ -lgnutls&quot; LIBNL3_CFLAGS=&quot;-I/usr/include&quot; LIBNL3_LIBS=&quot;-L/usr/lib/ -lnl-3 -lnl-route-3&quot;
</code></pre><pre><code>export PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig:$PKG_CONFIG_PATH
</code></pre><p>gnutls</p>
<pre><code>wget ftp://ftp.gnutls.org/gcrypt/gnutls/v3.2/gnutls-3.2.15.tar.xz
tar xvf gnutls-3.2.15.tar.xz
cd gnutls-3.2.15
./configure &amp;&amp; make &amp;&amp; make install
cd ..
</code></pre><p>LibNL</p>
<pre><code>wget http://www.carisma.slowglass.com/~tgr/libnl/files/libnl-3.2.24.tar.gz
tar xvf libnl-3.2.24.tar.gz
cd libnl-3.2.24
./configure &amp;&amp; make &amp;&amp; make install
cd ..
</code></pre><p>ocserv</p>
<pre><code>wget ftp://ftp.infradead.org/pub/ocserv/ocserv-0.8.1.tar.xz
tar xvf ocserv-0.8.1.tar.xz &amp;&amp; cd ocserv-0.8.1
./configure --prefix=/usr --sysconfdir=/etc &amp;&amp; make &amp;&amp; make install
cd ..
</code></pre><p>至此安装完毕，下面配置
创建CA证书和服务器证书</p>
<pre><code>certtool --generate-privkey --outfile ca-key.pem
cat &lt;&lt; _EOF_ &gt; ca.tmpl
cn = &quot;example VPN&quot;
organization = &quot;example.com&quot;
serial = 1
expiration_days = 3650
ca
signing_key
cert_signing_key
crl_signing_key
_EOF_
certtool --generate-self-signed --load-privkey ca-key.pem --template ca.tmpl --outfile ca-cert.pem
certtool --generate-privkey --outfile server-key.pem
cat &lt;&lt; _EOF_ &gt; server.tmpl
cn = &quot;example VPN&quot;
o = &quot;example&quot;
serial = 2
expiration_days = 3650
signing_key
encryption_key #only if the generated key is an RSA one
tls_www_server
_EOF_
certtool --generate-certificate --load-privkey server-key.pem --load-ca-certificate ca-cert.pem --load-ca-privkey ca-key.pem --template server.tmpl --outfile server-cert.pem
</code></pre><p>把证书复制到ocserv的配置目录</p>
<pre><code>mkdir -p /etc/ocserv/;cp server-cert.pem /etc/ocserv/ &amp;&amp; cp server-key.pem /etc/ocserv/
</code></pre><p>编辑配置文件</p>
<pre><code>vim /etc/ocserv/ocserv.conf
</code></pre><pre><code>#认证方式,这里选择的是帐号密码认证
auth = &quot;plain[/etc/ocserv/ocpasswd]&quot;

#允许同时连接的客户端数量
max-clients = 100
#限制同一客户端的并行登陆数量
max-same-clients = 4
#服务监听的TCP/UDP端口
tcp-port = 443
udp-port = 443
#自动优化VPN的网络性能
try-mtu-discovery = true
#服务器证书与密钥
server-cert = /etc/ocserv/server-cert.pem
server-key = /etc/ocserv/server-key.pem
#客户端连上vpn后使用的dns
dns = 8.8.8.8
dns = 8.8.4.4
#注释掉所有的route,让服务器成为gateway
#route = 192.168.1.0/255.255.255.0
#启用cisco客户端兼容性支持
cisco-client-compat = true
pid-file = /var/run/ocserv.pid
socket-file = /var/run/ocserv-socket
run-as-user = ocserv
run-as-group = ocserv
device = vpns
#分配内网IP地址段
ipv4-network = 172.16.200.0
ipv4-netmask = 255.255.255.0
</code></pre><p>添加帐号</p>
<pre><code>ocpasswd -c /etc/ocserv/ocpasswd your-username
</code></pre><p>开启内核ipv4转发</p>
<pre><code>vim /etc/sysctl.conf
</code></pre><p>将net.ipv4.ip_forward 设置为1</p>
<pre><code>net.ipv4.ip_forward = 1
</code></pre><p>保存执行 sysctl -p</p>
<p>添加防火墙流量转发(网卡名称以实际情况为准)</p>
<pre><code>iptables -t nat -A POSTROUTING -s 172.16.200.0/24 -o eth0 -j MASQUERADE
iptables -A FORWARD -s 172.16.200.0/24 -j ACCEPT
service iptables save
</code></pre>]]></content></item><item><title>Let's Encrypt 免费SSL证书安装小记。</title><link>https://painso.com/posts/tech/2015/lets-encrypt-freessl-install/</link><pubDate>Thu, 10 Dec 2015 16:08:58 +0000</pubDate><guid>https://painso.com/posts/tech/2015/lets-encrypt-freessl-install/</guid><description>从去年就开始关注Let&amp;rsquo;s Encrypt 了， 就在不久前它宣布公测。所有人都可以使用由此机构签发的免费SSL证书。
下面来分享一下本屌的安装过程。
系统：CentOS 6.4 x64 环境：军哥LNMP 签发的域名：本博客 使用的签发工具：acme-tiny (这里不使用官方提供的工具原因为太过臃肿，acme-tiny仅200+行代码，小巧简单)
2015-12-27 22:06:57 update: CloudXNS已支持Let&amp;rsquo;s Encrypt的验证, See https://www.cloudxns.net/Support/detail/id/1062.html 注意： 1、确保需要签发的域名使用的DNS为国外DNS服务(如cloudflare,linode等，否则到签发步骤可能会报错) 2、确保需要签发的域名已指向A记录到你的网站服务器，不要用CNAME等记录，一定要A记录！(否则到签发步骤可能会报错) 3、最好用ROOT帐号操作(我使用普通帐号操作会报key values mismatch)
安装git
yum -y install git 如果你已经有了git则执行(注意：存放目录最好不要在home目录下，我存放在/web/acme-tiny)
git clone https://github.com/diafygi/acme-tiny.git 生成帐号KEY
openssl genrsa 4096 &amp;amp;gt; account.key 生成域名KEY
openssl genrsa 4096 &amp;amp;gt; painso.key 生成CSR文件(如果你是以根域名来访问的话使用单域名即可，签发的主机头越多越麻烦哦)
单域名(不包含其他域如www)： openssl req -new -sha256 -key painso.key -subj &amp;quot;/CN=painso.com&amp;quot; &amp;amp;gt; painso.csr 多域名： openssl req -new -sha256 -key painso.key -subj &amp;quot;/&amp;quot; -reqexts SAN -config &amp;amp;lt;(cat /etc/ssl/openssl.</description><content type="html"><![CDATA[<p>从去年就开始关注Let&rsquo;s Encrypt 了， 就在不久前它宣布公测。所有人都可以使用由此机构签发的免费SSL证书。</p>
<p>下面来分享一下本屌的安装过程。</p>
<p>系统：CentOS 6.4 x64
环境：军哥LNMP
签发的域名：本博客
使用的签发工具：<a href="https://github.com/diafygi/acme-tiny">acme-tiny</a> (这里不使用官方提供的工具原因为太过臃肿，acme-tiny仅200+行代码，小巧简单)</p>
<p>2015-12-27 22:06:57 update:
CloudXNS已支持Let&rsquo;s Encrypt的验证, See <a href="https://www.cloudxns.net/Support/detail/id/1062.html">https://www.cloudxns.net/Support/detail/id/1062.html</a>
注意：
1、确保需要签发的域名使用的DNS为国外DNS服务(如cloudflare,linode等，否则到签发步骤可能会报错)
2、确保需要签发的域名已指向A记录到你的网站服务器，不要用CNAME等记录，一定要A记录！(否则到签发步骤可能会报错)
3、最好用ROOT帐号操作(我使用普通帐号操作会报key values mismatch)</p>
<p>安装git</p>
<pre><code>yum -y install git
</code></pre><p>如果你已经有了git则执行(注意：存放目录最好不要在home目录下，我存放在/web/acme-tiny)</p>
<pre><code>git clone https://github.com/diafygi/acme-tiny.git
</code></pre><p>生成帐号KEY</p>
<pre><code>openssl genrsa 4096 &amp;gt; account.key
</code></pre><p>生成域名KEY</p>
<pre><code>openssl genrsa 4096 &amp;gt; painso.key
</code></pre><p>生成CSR文件(如果你是以根域名来访问的话使用单域名即可，签发的主机头越多越麻烦哦)</p>
<pre><code>单域名(不包含其他域如www)：
openssl req -new -sha256 -key painso.key -subj &quot;/CN=painso.com&quot; &amp;gt; painso.csr

多域名：
openssl req -new -sha256 -key painso.key -subj &quot;/&quot; -reqexts SAN -config &amp;lt;(cat /etc/ssl/openssl.cnf &amp;lt;(printf &quot;[SAN]\nsubjectAltName=DNS:painso.com,DNS:www.painso.com&quot;)) &amp;gt; painso.csr
</code></pre><p>如果你使用多域名这行命令可能会报找不到openssl.cnf，别慌，直接访问<a href="http://web.mit.edu/crypto/openssl.cnf">http://web.mit.edu/crypto/openssl.cnf</a> 全选复制到你系统下的/etc/ssl/openssl/cnf。</p>
<p>然后打开你的Nginx虚拟主机配置文件，在80端口处添加</p>
<pre><code>location /.well-known/acme-challenge/ {
        alias /web/acme-tiny/; #这里填你的acme-tiny所在目录
        try_files $uri =404;
    }
</code></pre><p>如下图中我的配置
<a href="/images/2015/12/lse-nginx.png"><img src="/images/2015/12/lse-nginx-300x156.png" alt="lse-nginx"></a>
如果你有自动跳转到443端口的配置请记得把他注释掉。
重启Nginx</p>
<pre><code>nginx -s reload (以实际路径为准，我已经做过软连接ln -s /usr/local/nginx/sbin/nginx /usr/bin/nginx)
</code></pre><p>在Let&rsquo;s Encrypt 服务器提交签发证书(程序大致操作：acme-tiny.py会生成一个密钥文件到acme-tiny目录下，然后Let&rsquo;s Encrypt 证书签发服务器会访问需签发域名/.well-known/acme-challenge/路径下acme-tiny.py生成的密钥文件)</p>
<pre><code>python acme_tiny.py --account-key account.key --csr painso.csr --acme-dir /web/acme-tiny/ &amp;gt; painso.crt
</code></pre><p>这上面应该都能看明白哦?
&ndash;account-key
之前生成的account-key路径
&ndash;csr
同上
&ndash;acme-dir
acme-tiny路径
顺利的话会生成一个.crt文件，也就是服务器签发下来的证书文件
然后下载根证书</p>
<pre><code>wget -O - https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.pem &amp;gt; intermediate.pem
</code></pre><p>合并证书(不执行下面操作的话firefox会提示不信任，chrome则无碍)</p>
<pre><code>cat intermediate.pem &amp;gt; painso.crt
</code></pre><p>然后在nginx虚拟主机配置中修改原来的证书路径为现在新的证书路径即可</p>
<pre><code>nginx -t
nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok
nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful

</code></pre><p>测试OK后记得把之前的</p>
<pre><code>location /.well-known/acme-challenge/ {
        alias /web/acme-tiny/;;
        try_files $uri =404;
    }
    ```
注释掉。

然后访问你的网站，是否可以看到 Let's Encrypt 啦。

总的来说，证书的安装签发是非常蛋疼的，比如我用cloudxns就不能执行签发步骤，需要换到cloudflare，签发完了再换回cloudxns，且证书期限只有90天，希望Let's Encrypt越搞越好:)

[![Let](/images/2015/12/Lets-Encrypt-236x300.png)](/images/2015/12/Lets-Encrypt.png)</code></pre>]]></content></item><item><title>Android L 网络图标感叹号去除方法</title><link>https://painso.com/posts/tech/2015/android-l-exclamation-mark/</link><pubDate>Thu, 05 Feb 2015 11:16:04 +0000</pubDate><guid>https://painso.com/posts/tech/2015/android-l-exclamation-mark/</guid><description>大致意思是Android 5.0连上WIFI后会访问 clients3.google.com/generate_204 这个网址
如果能正常访问, 则不会在通知栏出现 &amp;ldquo;此WIFI需要登录才能使用&amp;rdquo;
而你也知道, 谷歌在国内基本是不能访问的
所以找一个替换一下就OK了
clients3.google.com/generate_204 会给你返回一个204状态, 你也可以自己搭建一个这样的服务
解决方法(无需root):
完全屏蔽网络检查功能, 最简单快速, 但是就没有办法提示wifi登录: adb shell &amp;quot;settings put global captive_portal_detection_enabled 0&amp;quot; 使用g.cn替换掉被墙的google服务器: adb shell &amp;quot;settings put global captive_portal_server g.cn&amp;quot; 上面的方法需要电脑执行adb命令, 当然你也可以在手机上安装类似本地Shell的APP执行: settings put global captive_portal_server g.cn btw: g.cn中的g.cn/generate_204也同样会返回204状态所以建议使用</description><content type="html"><![CDATA[<p>大致意思是Android 5.0连上WIFI后会访问 <code>clients3.google.com/generate_204</code> 这个网址</p>
<p>如果能正常访问, 则不会在通知栏出现 &ldquo;此WIFI需要登录才能使用&rdquo;</p>
<p>而你也知道, 谷歌在国内基本是不能访问的</p>
<p>所以找一个替换一下就OK了</p>
<p><code>clients3.google.com/generate_204</code> 会给你返回一个204状态, 你也可以自己搭建一个这样的服务</p>
<p>解决方法(无需root):</p>
<ol>
<li>完全屏蔽网络检查功能, 最简单快速, 但是就没有办法提示wifi登录:
<code>adb shell &quot;settings put global captive_portal_detection_enabled 0&quot;</code></li>
<li>使用g.cn替换掉被墙的google服务器:
<code>adb shell &quot;settings put global captive_portal_server g.cn&quot;</code>
上面的方法需要电脑执行adb命令, 当然你也可以在手机上安装类似本地Shell的APP执行:
<code>settings put global captive_portal_server g.cn</code></li>
</ol>
<p>btw: g.cn中的g.cn/generate_204也同样会返回204状态所以建议使用</p>
]]></content></item><item><title>Dropbox被墙解决方案。</title><link>https://painso.com/posts/tech/2014/dropbox-can-not-connect/</link><pubDate>Wed, 12 Nov 2014 15:16:02 +0000</pubDate><guid>https://painso.com/posts/tech/2014/dropbox-can-not-connect/</guid><description>&lt;p>Dropbox被墙已经有好几个月了，无论是网页版还是客户端都无法正常工作，之前一直用的SS来访问，但是如果是用别人电脑的时候还是有些麻烦的。
现在使用了@&lt;a href="http://github.com/clowwindy">clowwindy&lt;/a>的ChinaDNS
使用方法：
下载地址：
&lt;a href="https://github.com/clowwindy/ChinaDNS/blob/master/README.md#install">https://github.com/clowwindy/ChinaDNS/blob/master/README.md#install&lt;/a>
解压后运行dnsrelay.exe启动本地DNS服务器&lt;/p></description><content type="html"><![CDATA[<p>Dropbox被墙已经有好几个月了，无论是网页版还是客户端都无法正常工作，之前一直用的SS来访问，但是如果是用别人电脑的时候还是有些麻烦的。
现在使用了@<a href="http://github.com/clowwindy">clowwindy</a>的ChinaDNS
使用方法：
下载地址：
<a href="https://github.com/clowwindy/ChinaDNS/blob/master/README.md#install">https://github.com/clowwindy/ChinaDNS/blob/master/README.md#install</a>
解压后运行dnsrelay.exe启动本地DNS服务器</p>
<p>然后把你的网卡DNS设置成127.0.0.1即可使用啦～
其原理为(原文@<a href="http://examplecode.github.io/tools/2014/06/20/the-tools-prevent-dns-cache-pollution/">chengkai</a>)：
GFW对域名进行DNS污染的原理实际上是在正常的DNS服务器返回请求包之前，返回请求者错误的IP地址。而GFW返回的这些错误地址也是有规律可循，根据这个原理就不难写出对抗GFW DNS污染的程序了。所以程序核心内容就有两点：
提供GFW返回IP的一个黑名单列表。
如果服务端返回的DNS响应IP地址在黑名单列表中，则进行忽略并尝试等待真实的ip地址返回。</p>
<p>这样Dropbox就不用走代理，也省了不少流量。
经过测试还可以上FB，推特貌似是直接把IP给墙了。
如果你需要一个Dropbox，请使用该链接注册，<a href="http://db.tt/0xSK4uIc">http://db.tt/0xSK4uIc</a> 我和你都会额外获得512M的空间。</p>]]></content></item><item><title>Discuz显示音乐以及除图片外文件的真实链接。</title><link>https://painso.com/posts/tech/2014/discuz-true-attachment-links/</link><pubDate>Fri, 25 Jul 2014 22:04:36 +0000</pubDate><guid>https://painso.com/posts/tech/2014/discuz-true-attachment-links/</guid><description>由于自己的音乐论坛一直找不到好的外链，所以干脆自己搭个算了 想找一个支持直链的开源站点小程序用，但是一直都没有找到 于是开始了Discuz远程附件折腾之旅。
都知道Discuz远程附件的机制蛋疼至极，图片可以直接显示链接，其他文件不行 折腾了一天，终于搞定 打开
\source\function\function_discuzcode.php 找到
function parseattachurl($aid, $ext, $ignoretid = 0) 将
function parseattachurl($aid, $ext, $ignoretid = 0) { global $_G; $_G['forum_skipaidlist'][] = $aid; return $_G['siteurl'].'forum.php?mod=attachment&amp;amp;amp;aid='.aidencode($aid, $ext, $ignoretid ? '' : $_G['tid']).($ext ? '&amp;amp;amp;request=yes&amp;amp;amp;_f=.'.$ext : ''); } 替换为
function parseattachurl($aid, $ext, $ignoretid = 0) { global $_G; $_G['forum_skipaidlist'][] = $aid; $aid = intval($aid); $attach = DB::fetch_first(&amp;quot;SELECT * FROM &amp;quot;.DB::table('forum_attachment').&amp;quot; WHERE aid='$aid'&amp;quot;); $tid = $attach['tableid']; $attach = DB::fetch_first(&amp;quot;SELECT * FROM &amp;quot;.</description><content type="html"><![CDATA[<p>由于自己的音乐论坛一直找不到好的外链，所以干脆自己搭个算了
想找一个支持直链的开源站点小程序用，但是一直都没有找到
于是开始了Discuz远程附件折腾之旅。</p>
<p>都知道Discuz远程附件的机制蛋疼至极，图片可以直接显示链接，其他文件不行
折腾了一天，终于搞定
打开</p>
<pre><code>\source\function\function_discuzcode.php
</code></pre><p>找到</p>
<pre><code>function parseattachurl($aid, $ext, $ignoretid = 0)
</code></pre><p>将</p>
<pre><code>function parseattachurl($aid, $ext, $ignoretid = 0) {
	global $_G;
	$_G['forum_skipaidlist'][] = $aid;
	return $_G['siteurl'].'forum.php?mod=attachment&amp;amp;aid='.aidencode($aid, $ext, $ignoretid ? '' : $_G['tid']).($ext ? '&amp;amp;request=yes&amp;amp;_f=.'.$ext : '');
}
</code></pre><p>替换为</p>
<pre><code>function parseattachurl($aid, $ext, $ignoretid = 0) {
    global $_G;
    $_G['forum_skipaidlist'][] = $aid;
	$aid = intval($aid);

	$attach = DB::fetch_first(&quot;SELECT * FROM &quot;.DB::table('forum_attachment').&quot; WHERE aid='$aid'&quot;);
	$tid = $attach['tableid'];
	$attach = DB::fetch_first(&quot;SELECT * FROM &quot;.DB::table('forum_attachment_').$tid.&quot; WHERE aid='$aid'&quot;);
	$attachfile = $attach['attachment'];
    return &quot;http://127.0.0.1/ftp/music/forum/&quot;.$attachfile;
}
</code></pre><p>其中这个&quot;http://127.0.0.1/ftp/music/forum/&rdquo; 需要按自己实际情况改改
、数据库查询语句是本人写的，如有不正之处请指出，谢谢。</p>
]]></content></item><item><title>The Future。</title><link>https://painso.com/posts/thinking/2014/the-future/</link><pubDate>Sun, 11 May 2014 02:02:44 +0000</pubDate><guid>https://painso.com/posts/thinking/2014/the-future/</guid><description>来上海第5天，意识消沉。
从开始的充满信心和希望没考虑什么后果就冲过来了到现在。
来这边后经历种种，朋友们告诉我初中学历想混进互联网公司很难的，大学本科生比我优秀的因有尽有。
我早想过，我愿意试，我对互联网充满了好奇。
但是，没用。
我想了很多，脑子感觉从没放松过，前所未有的迷茫。
投出去了将近百封的简历，邮箱看到清一色的 ”不匹配“ 或者石沉大海，手机没有一个陌生来电。
OK，我想应该放慢前进的脚步，告诉自己慢慢来，一步不可登天，我现在要做的就是做好现在的事。
I can do it!</description><content type="html"><![CDATA[<p>来上海第5天，意识消沉。</p>
<p>从开始的充满信心和希望没考虑什么后果就冲过来了到现在。</p>
<p>来这边后经历种种，朋友们告诉我初中学历想混进互联网公司很难的，大学本科生比我优秀的因有尽有。</p>
<p>我早想过，我愿意试，我对互联网充满了好奇。</p>
<p>但是，没用。</p>
<p>我想了很多，脑子感觉从没放松过，前所未有的迷茫。</p>
<p>投出去了将近百封的简历，邮箱看到清一色的 ”不匹配“ 或者石沉大海，手机没有一个陌生来电。</p>
<p>OK，我想应该放慢前进的脚步，告诉自己慢慢来，一步不可登天，我现在要做的就是做好现在的事。</p>
<p>I can do it!</p>
<p><a href="/images/2014/05/2014-05-08-21.59.58.jpg"><img src="/images/2014/05/2014-05-08-21.59.58-300x225.jpg" alt="2014-05-08 21.59.58"></a></p>
]]></content></item><item><title>CloudStack 4.2.1+KVM部署实战。</title><link>https://painso.com/posts/tech/2014/cloudstack-kvm-install/</link><pubDate>Thu, 20 Mar 2014 16:16:44 +0000</pubDate><guid>https://painso.com/posts/tech/2014/cloudstack-kvm-install/</guid><description>&lt;p>拓扑图：&lt;/p>
&lt;p>&lt;a href="https://painso.com/images/2014/Topology.png"> &lt;img src="https://painso.com/images/2014/Topology.png" alt="Topology">&lt;/a>&lt;/p>
&lt;p>相关说明：&lt;/p>
&lt;p>系统都为CentOS6.4 x64&lt;/p>
&lt;p>Management端不需要任何虚拟化的支持，只是做WEB控制台和管理用，任意机器即可&lt;/p>
&lt;p>Agent端的CPU需要虚拟化支持，我这里用的是R710，已开启VT并且cpu支持flag:vmx&lt;/p>
&lt;p>主存储和二级存储都放在Agent端&lt;/p></description><content type="html"><![CDATA[<p>拓扑图：</p>
<p><a href="/images/2014/Topology.png"> <img src="/images/2014/Topology.png" alt="Topology"></a></p>
<p>相关说明：</p>
<p>系统都为CentOS6.4 x64</p>
<p>Management端不需要任何虚拟化的支持，只是做WEB控制台和管理用，任意机器即可</p>
<p>Agent端的CPU需要虚拟化支持，我这里用的是R710，已开启VT并且cpu支持flag:vmx</p>
<p>主存储和二级存储都放在Agent端</p>
<p>配置网络：</p>
<pre><code>[root@management ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth1
DEVICE=eth1
BOOTPROTO=static
ONBOOT=yes
IPADDR=10.10.16.250
NETMASK=255.255.255.0
GATEWAY=10.10.16.254
DNS1=8.8.4.4
</code></pre><pre><code>[root@management ~]# ifconfig
eth1      Link encap:Ethernet  HWaddr 00:1D:60:E4:01:F2  
          inet addr:10.10.16.250  Bcast:10.10.16.255  Mask:255.255.255.0
          inet6 addr: fe80::21d:60ff:fee4:1f2/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:31460 errors:0 dropped:0 overruns:0 frame:0
          TX packets:9113 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:25547046 (24.3 MiB)  TX bytes:704232 (687.7 KiB)
          Interrupt:18 

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:16436  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)```
</code></pre><pre><code>[root@agent ~]# cat /etc/sysconfig/network-scripts/ifcfg-em2
DEVICE=em2
BOOTPROTO=static
ONBOOT=yes
IPADDR=10.10.16.253
NETMASK=255.255.255.0
GATEWAY=10.10.16.254
DNS1=8.8.4.4
</code></pre><pre><code>[root@agent ~]# ifconfig
em2       Link encap:Ethernet  HWaddr 78:2B:CB:64:B7:A2  
          inet addr:10.10.16.253  Bcast:10.10.16.255  Mask:255.255.255.0
          inet6 addr: fe80::7a2b:cbff:fe64:b7a2/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:189 errors:0 dropped:0 overruns:0 frame:0
          TX packets:58 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:19800 (19.3 KiB)  TX bytes:6460 (6.3 KiB)

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:16436  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
</code></pre><p>清空防火墙（两台都需要）：</p>
<pre><code>[root@management ~]# iptables  -F
[root@management ~]# service  iptables  save
iptables: Saving firewall rules to /etc/sysconfig/iptables: [  OK  ]
</code></pre><p>配置NTP：</p>
<p>management：</p>
<pre><code>[root@management ~]# yum -y install ntp
</code></pre><p>编辑/etc/ntp.conf，找到server部分，修改如下（把management做NTP服务器，不从互联网更新，也可参考其他配置或者事先从网络更新一下）：</p>
<pre><code>#server 0.rhel.pool.ntp.org iburst
#server 1.rhel.pool.ntp.org iburst
#server 2.rhel.pool.ntp.org iburst
#server 3.rhel.pool.ntp.org iburst
server 127.127.1.0
fudge 127.127.1.0 stratum 10
</code></pre><pre><code>[root@management ~]# service ntpd restart
Shutting down ntpd:                                        [  OK  ]
Starting ntpd:                                             [  OK  ]
[root@management ~]# chkconfig ntpd on
</code></pre><p>agent：</p>
<pre><code>[root@agent ~]# yum -y install ntp
</code></pre><p>编辑/etc/ntp.conf，找到server部分，修改如下：</p>
<pre><code>#server 0.rhel.pool.ntp.org iburst
#server 1.rhel.pool.ntp.org iburst
#server 2.rhel.pool.ntp.org iburst
#server 3.rhel.pool.ntp.org iburst
server 10.10.16.250
</code></pre><pre><code>[root@management ~]# service ntpd restart
Shutting down ntpd:                                        [  OK  ]
Starting ntpd:                                             [  OK  ]
[root@management ~]# chkconfig ntpd on
</code></pre><p>重启网络和关闭SELINUX、hosts文件添加住被控IP和主机名（2台都需要）</p>
<pre><code>[root@management ~]# service network restart
Shutting down interface eth1:                              [  OK  ]
Shutting down loopback interface:                          [  OK  ]
Bringing up loopback interface:                            [  OK  ]
Bringing up interface eth1:                                [  OK  ]

[root@agent ~]# service network restart
Shutting down interface em2:                               [  OK  ]
Shutting down loopback interface:                          [  OK  ]
Bringing up loopback interface:                            [  OK  ]
Bringing up interface em2:                                 [  OK  ]

[root@agent ~]# cat /etc/selinux/config 
# This file controls the state of SELinux on the system.
# SELINUX= can take one of these three values:
#	enforcing - SELinux security policy is enforced.
#	permissive - SELinux prints warnings instead of enforcing.
#	disabled - SELinux is fully disabled.
SELINUX=disabled
# SELINUXTYPE= type of policy in use. Possible values are:
#	targeted - Only targeted network daemons are protected.
#	strict - Full SELinux protection.
SELINUXTYPE=targeted

[root@management ~]# hostname --fqdn
management
[root@management ~]# cat /etc/hosts
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
10.10.16.250    management
10.10.16.253    agent
</code></pre><p>添加源：</p>
<p>只需要默认源和cloudstack源即可，由于网速太慢，我事先准备了另外一台服务器做本地源</p>
<p><a href="/images/2014/repo.png"><img src="/images/2014/repo.png" alt="repo"></a></p>
<pre><code>[root@management ~]# cat /etc/yum.repos.d/1.repo 
[rhel]
name=rhel
baseurl=http://10.10.16.100/repo/rhel
enable=1
gpgcheck=0
[cloudstack]
name=cloudstack
baseurl=http://10.10.16.100/repo/cloudstack
enable=1
gpgcheck=0
</code></pre><p>更新重启：</p>
<pre><code>[root@management ~]# yum -y update;reboot
[root@agent ~]# yum -y update;reboot
</code></pre><p>配置management端：</p>
<p>安装MYSQL：</p>
<pre><code>[root@management ~]# yum -y install mysql-server
[root@management ~]# service mysqld start
[root@management ~]# chkconfig mysqld on
</code></pre><p>设置MYSQL密码：</p>
<pre><code>[root@management ~]# mysql_secure_installation
</code></pre><p>这里我的mysql密码为：cloudstack</p>
<p>安装management：</p>
<pre><code>[root@management ~]# yum -y install cloudstack-management
</code></pre><p>等待ing：</p>
<p><a href="/images/2014/install-management.png"><img src="/images/2014/install-management.png" alt="install-management"></a></p>
<p>导入数据库：</p>
<pre><code>[root@management ~]# cloudstack-setup-databases 新建的数据库帐号:密码@主机名 --deploy-as=root:mysql管理员密码
</code></pre><p><a href="/images/2014/setup-database.png"><img src="/images/2014/setup-database.png" alt="setup-database"></a></p>
<p>设置cloudstack用户对/var/log/cloudstack*日志目录的访问权限（不然会无法启动）：</p>
<pre><code>[root@management ~]# chown -R cloud:cloud /var/log/cloudstack*
</code></pre><p>cloud账户为安装management时自动创建的，用于运行相关服务 。</p>
<p>初始化management服务：</p>
<pre><code>[root@management ~]# cloudstack-setup-management 
Starting to configure CloudStack Management Server:
Configure sudoers ...         [OK]
Configure Firewall ...        [OK]
Configure CloudStack Management Server ...[OK]
CloudStack Management Server setup is Done!
[root@management ~]# netstat -antp
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address               Foreign Address             State       PID/Program name   
tcp        0      0 0.0.0.0:22                  0.0.0.0:*                   LISTEN      941/sshd            
tcp        0      0 127.0.0.1:25                0.0.0.0:*                   LISTEN      1018/master         
tcp        0      0 0.0.0.0:3306                0.0.0.0:*                   LISTEN      1272/mysqld         
tcp        0     52 10.10.16.250:22             10.10.16.220:57436          ESTABLISHED 1052/sshd           
tcp        0      0 :::51022                    :::*                        LISTEN      2193/java           
tcp        0      0 :::48686                    :::*                        LISTEN      2193/java           
tcp        0      0 :::8080                     :::*                        LISTEN      2193/java           
tcp        0      0 :::22                       :::*                        LISTEN      941/sshd            
tcp        0      0 ::1:25                      :::*                        LISTEN      1018/master         
tcp        0      0 :::45219                    :::*                        LISTEN      2193/java           
tcp        0      0 :::7080                     :::*                        LISTEN      2193/java           
tcp        0      0 ::1:55059                   ::1:34910                   TIME_WAIT   -
</code></pre><p>如上，8080 WEB控制台已经正常启动，</p>
<p>访问<code>http://10.10.16.250:8080/client</code> 默认帐号：admin 密码：password</p>
<p><a href="/images/2014/dashboard.png"><img src="/images/2014/dashboard.png" alt="dashboard"></a></p>
<p>配置NFS服务：</p>
<p>之前说了，我准备把主存储和二级存储都放agent，所以在agent上安装NFS</p>
<pre><code>[root@agent ~]# yum -y install nfs-utils
</code></pre><p>挂载磁盘：</p>
<pre><code>[root@agent ~]# mkdir -p /storage/{primary,secondary}
[root@agent ~]# mount /dev/sdb /storage/secondary/
[root@agent ~]# mount /dev/sdc /storage/primary/
</code></pre><pre><code>[root@agent ~]# df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/sda1        20G 1003M   18G   6% /
tmpfs            56G     0   56G   0% /dev/shm
/dev/sdb        135G  188M  128G   1% /storage/secondary
/dev/sdc        3.6T  197M  3.4T   1% /storage/primary
</code></pre><p>我对cloudstack存储的理解：</p>
<p>主存储存放VM文件和磁盘文件</p>
<p>辅助存储存放ISO镜像和系统模板</p>
<p>记得添加开机自动挂载</p>
<p><a href="/images/2014/fstab.png"><img src="/images/2014/fstab.png" alt="fstab"></a></p>
<p>编辑/etc/exports 添加NFS共享信息：</p>
<pre><code>[root@agent ~]# vim /etc/exports 
/storage/primary        *(rw,async,no_root_squash)
/storage/secondary      *(rw,async,no_root_squash)
</code></pre><p>启动NFS服务：</p>
<pre><code>[root@agent ~]# service rpcbind start
Starting rpcbind:                                          [  OK  ]
[root@agent ~]# chkconfig rpcbind on
[root@agent ~]# service nfs start
Starting NFS services:                                     [  OK  ]
Starting NFS mountd:                                       [  OK  ]
Starting NFS daemon:                                       [  OK  ]
Starting RPC idmapd:                                       [  OK  ]
[root@agent ~]# chkconfig nfs on
</code></pre><p>在management测试nfs是否工作正常：</p>
<pre><code>[root@management ~]# showmount -e 10.10.16.253
Export list for 10.10.16.253:
/storage/secondary *
/storage/primary   *
</code></pre><p>能正常显示则OK；</p>
<p>management端导入KVM系统模板(用于cloudstack系统VM)：</p>
<p>我之前用官方的一直不正常，推荐使用下方地址的模板</p>
<p>可以在<a href="http://jenkins.buildacloud.org/job/build-systemvm64-master/">http://jenkins.buildacloud.org/job/build-systemvm64-master/</a> 这里下载</p>
<p><a href="/images/2014/systemvm-template.png"><img src="/images/2014/systemvm-template.png" alt="systemvm-template"></a></p>
<p>挂载NFS二级存储（之前讲过是放系统模板和ISO用）：</p>
<pre><code>[root@management ~]# mount 10.10.16.253:/storage/secondary /opt
</code></pre><p>导入系统VM模板：</p>
<pre><code>[root@management ~]# /usr/share/cloudstack-common/scripts/storage/secondary/cloud-install-sys-tmplt -m NFS挂载二级存储的路径 -f 系统模板文件路径 -h 虚拟化平台名称 -F
</code></pre><p><a href="/images/2014/import-systemvm-template.png"><img src="/images/2014/import-systemvm-template.png" alt="import-systemvm-template"></a></p>
<p>等待。。。</p>
<p>导入完毕后卸载二级存储：</p>
<pre><code>[root@management ~]# umount /opt
</code></pre><p>进入WEB管理界面点击”我以前使用过 CloudStack，跳过此指南“，进入全局设置选项</p>
<p>设置存储所在网段：</p>
<p><a href="/images/2014/secstorage.png"><img src="/images/2014/secstorage.png" alt="secstorage"></a></p>
<p>设置延时时间（删除VM等等操作的延时）：</p>
<p><a href="/images/2014/expunge.png"><img src="/images/2014/expunge.png" alt="expunge"></a></p>
<p>重启management：</p>
<pre><code>[root@management ~]# service cloudstack-management restart
Stopping cloudstack-management:                            [  OK  ]
Starting cloudstack-management:                            [  OK  ]
</code></pre><p>配置Agent：</p>
<p>安装qemu等组件支持，不然待会添加主机会加不上；</p>
<pre><code>[root@agent ~]# yum -y install qemu* virt* libvirt*
</code></pre><p><a href="/images/2014/install-qemu.png"><img src="/images/2014/install-qemu.png" alt="install-qemu"></a></p>
<pre><code>[root@agent ~]# yum -y install cloudstack-agent
</code></pre><p>编辑/etc/libvirt/qemu.conf找到vnc_listen = &ldquo;0.0.0.0&quot;取消注释</p>
<p><a href="/images/2014/qemu.png"><img src="/images/2014/qemu.png" alt="qemu"></a></p>
<p>编辑/etc/cgconfig.conf添加：</p>
<pre><code>group virt {
cpu {
cpu.shares = 9216;
}
}
</code></pre><p><a href="/images/2014/cgconfig.png"><img src="/images/2014/cgconfig.png" alt="cgconfig"></a></p>
<p>启动服务：</p>
<pre><code>[root@agent ~]# service cgconfig start
Starting cgconfig service:                                 [  OK  ]
[root@agent ~]# service libvirtd restart
Stopping libvirtd daemon:                                  [  OK  ]
Starting libvirtd daemon:                                  [  OK  ]
[root@agent ~]# chkconfig cgconfig on
[root@agent ~]# chkconfig libvirtd on
</code></pre><p>注意：此时cloudstack-agent服务不需要启动，management添加该主机时会自动启动</p>
<p>访问http://10.10.16.250:8080/client management端开始配置cloudstack：</p>
<p><a href="/images/2014/cloudstack-1.png"><img src="/images/2014/cloudstack-1.png" alt="cloudstack-1"></a></p>
<p>修改新密码继续：</p>
<p><a href="/images/2014/cloudstack-pass.png"><img src="/images/2014/cloudstack-pass.png" alt="cloudstack-pass"></a></p>
<p>区域类似一个数据中心；</p>
<p><a href="/images/2014/add-area.png"><img src="/images/2014/add-area.png" alt="add-area"></a></p>
<p>添加提供点：我的理解是给CloudStack内部系统用的IP，如系统VM</p>
<p><a href="/images/2014/add-offer.png"><img src="/images/2014/add-offer.png" alt="add-offer"></a></p>
<p>来宾网络：我的理解是给我们创建的VM用的IP</p>
<p><a href="/images/2014/add-guest-network.png"><img src="/images/2014/add-guest-network.png" alt="add-guest-network"></a></p>
<p><a href="/images/2014/add-cluster.png"><img src="/images/2014/add-cluster.png" alt="add-cluster"></a></p>
<p>添加主机：就是添加agent端，输入IP、用户名和密码即可</p>
<p><a href="/images/2014/add-host.png"><img src="/images/2014/add-host.png" alt="add-host"></a></p>
<p><a href="/images/2014/add-primary.png"><img src="/images/2014/add-primary.png" alt="add-primary"></a></p>
<p><a href="/images/2014/add-secondary.png"><img src="/images/2014/add-secondary.png" alt="add-secondary"></a></p>
<p>最后点击启动，等待数分钟</p>
<p><a href="/images/2014/cs-successfully.png"><img src="/images/2014/cs-successfully.png" alt="cs-successfully"></a></p>
<p>点击启动后可进入主面板，可查看agent配置信息和相关资源使用信息</p>
<p><a href="/images/2014/cs-dashboard.png"><img src="/images/2014/cs-dashboard.png" alt="cs-dashboard"></a></p>
<p>点击“基本架构”，可查看相关信息</p>
<p><a href="/images/2014/cs-base.png"><img src="/images/2014/cs-base.png" alt="cs-base"></a></p>
<p>点击系统VM下的“查看全部”可看到系统VM的状态，都为running+up则表示正常</p>
<p><a href="/images/2014/systemvm-satate.png"><img src="/images/2014/systemvm-satate.png" alt="systemvm-satate"></a></p>
<p>至此CloudStack Management Agent分离安装完毕，如果有任何批评和疑问请在此提出。</p>]]></content></item><item><title>Python3方向键乱码问题。</title><link>https://painso.com/posts/tech/2014/python3-garbled/</link><pubDate>Sun, 16 Feb 2014 14:01:15 +0000</pubDate><guid>https://painso.com/posts/tech/2014/python3-garbled/</guid><description>最近开始学习python,由于书中版本为3,所以重新安装了个3版本后发现运行后不管是方向键还是Backspace（退格键）都无法正常使用
 查阅资料后发现原因是readline的问题
做下软连接重新启动正常
ln -s /lib64/libreadline.so.6 /usr/lib64/ ln -s /lib64/libreadline.so.6.0 /usr/lib/ ln -s /lib64/libreadline.so.6.0 /usr/lib64/ 如果还是不行就需要重新编译安装py了</description><content type="html"><![CDATA[<p>最近开始学习python,由于书中版本为3,所以重新安装了个3版本后发现运行后不管是方向键还是Backspace（退格键）都无法正常使用</p>
<p><a href="/images/2014/02/python3.png"><img src="/images/2014/02/python3-300x80.png" alt="python3"></a></p>
<p> </p>
<p>查阅资料后发现原因是readline的问题</p>
<p>做下软连接重新启动正常</p>
<pre><code>ln -s  /lib64/libreadline.so.6 /usr/lib64/
ln -s  /lib64/libreadline.so.6.0 /usr/lib/
ln -s  /lib64/libreadline.so.6.0 /usr/lib64/
</code></pre><p>如果还是不行就需要重新编译安装py了</p>
]]></content></item><item><title>Open vSwitch 错误记录。</title><link>https://painso.com/posts/tech/2014/openvswitch-errors/</link><pubDate>Mon, 06 Jan 2014 13:24:06 +0000</pubDate><guid>https://painso.com/posts/tech/2014/openvswitch-errors/</guid><description> rpmbuild -bb rhel/openvswitch-kmod-rhel6.spec produces warning: Installed (but unpackaged) file(s) found: /etc/depmod.d/openvswitch.conf 解决方法:
在openvswitch-kmod-rhel6.spec末尾出添加
%files %defattr(-,root,root,-) /etc/depmod.d/openvswitch.conf</description><content type="html"><![CDATA[<ol>
<li></li>
</ol>
<pre><code>rpmbuild -bb rhel/openvswitch-kmod-rhel6.spec

produces warning:
Installed (but unpackaged) file(s) found:
/etc/depmod.d/openvswitch.conf
</code></pre><p>解决方法:</p>
<p>在openvswitch-kmod-rhel6.spec末尾出添加</p>
<pre><code>%files
%defattr(-,root,root,-)
/etc/depmod.d/openvswitch.conf
</code></pre>]]></content></item><item><title>新年快乐。</title><link>https://painso.com/posts/thinking/2014/2014-new-year/</link><pubDate>Wed, 01 Jan 2014 17:57:23 +0000</pubDate><guid>https://painso.com/posts/thinking/2014/2014-new-year/</guid><description>又一年过去了,2013年是我最工作最踏实的一年.在新的环境学到很多,希望朋友们在新的一年里工作生活顺顺利利,身体健康.也希望自己在新的一年里做自己,学会为人处事,找到目标.新年快乐!</description><content type="html"><![CDATA[<p>又一年过去了,2013年是我最工作最踏实的一年.在新的环境学到很多,希望朋友们在新的一年里工作生活顺顺利利,身体健康.也希望自己在新的一年里做自己,学会为人处事,找到目标.新年快乐!
<a href="/images/2014/01/2014.png"><img src="/images/2014/01/2014-300x244.png" alt="2014"></a></p>
]]></content></item><item><title>IP网络存储iSCSI小试。</title><link>https://painso.com/posts/tech/2013/iscsi-experiment/</link><pubDate>Mon, 28 Oct 2013 02:41:16 +0000</pubDate><guid>https://painso.com/posts/tech/2013/iscsi-experiment/</guid><description>iSCSI技术是一种由IBM公司研究开发的，是一个供硬件设备使用的可以在IP协议的上层运行的SCSI指令集，这种指令集合可以实现在IP网络上运行SCSI协议，使其能够在诸如高速千兆以太网上进行路由选择。iSCSI技术是一种新储存技术，该技术是将现有SCSI接口与以太网络(Ethernet)技术结合，使服务器可与使用IP网络的储存装置互相交换资料。(详见百科)
搭建环境：
177.208.11.199 iSCSI-Enterprise-Target - CentOS6.4 - 32 177.208.11.234 iSCSI-initiator-utils - CentOS6.4 - 32 177.208.11.103 iSCSI-Initiator - Windows Server 2003 Enterprise Edition SP2
以下以IP后3位为简称吧
199为iSCSI服务端，其他2台分别为客户端，我这里的服务端只是测试用所以只有一块普通的硬盘，如果用户生产环境的话可能需要做一些集群或者RAID之类的，现在开始吧。
首先在199(Target端)安装服务端软件：
你可以在官方网站获取：http://iscsitarget.sf.net
[root@localhost ~]# tar zxvf iscsitarget-1.4.20.2.tar.gz [root@localhost ~]# cd iscsitarget-1.4.20.2 [root@localhost iscsitarget-1.4.20.2]# make 这里我编译报错：
make[1]: Leaving directory `/root/iscsitarget-1.4.20.2/usr' make -C /lib/modules/2.6.32-358.14.1.el6.i686/build SUBDIRS=/root/iscsitarget-1.4.20.2/kernel modules make: *** /lib/modules/2.6.32-358.14.1.el6.i686/build: No such file or directory. Stop. make: *** [kernel] Error 2 安装kernel-devel和patch
[root@localhost iscsitarget-1.4.20.2]# yum -y install kernel kernel-devel patch [root@localhost iscsitarget-1.</description><content type="html"><![CDATA[<p>iSCSI技术是一种由IBM公司研究开发的，是一个供硬件设备使用的可以在IP协议的上层运行的SCSI指令集，这种指令集合可以实现在IP网络上运行SCSI协议，使其能够在诸如高速千兆以太网上进行路由选择。iSCSI技术是一种新储存技术，该技术是将现有SCSI接口与以太网络(Ethernet)技术结合，使服务器可与使用IP网络的储存装置互相交换资料。(详见百科)</p>
<p>搭建环境：</p>
<p>177.208.11.199 iSCSI-Enterprise-Target - CentOS6.4 - 32
177.208.11.234 iSCSI-initiator-utils - CentOS6.4 - 32
177.208.11.103 iSCSI-Initiator - Windows Server 2003 Enterprise Edition SP2</p>
<p>以下以IP后3位为简称吧</p>
<p>199为iSCSI服务端，其他2台分别为客户端，我这里的服务端只是测试用所以只有一块普通的硬盘，如果用户生产环境的话可能需要做一些集群或者RAID之类的，现在开始吧。</p>
<p>首先在199(Target端)安装服务端软件：</p>
<p>你可以在官方网站获取：<a href="http://iscsitarget.sf.net/">http://iscsitarget.sf.net</a></p>
<pre><code>[root@localhost ~]# tar zxvf iscsitarget-1.4.20.2.tar.gz
[root@localhost ~]# cd iscsitarget-1.4.20.2
[root@localhost iscsitarget-1.4.20.2]# make
</code></pre><p>这里我编译报错：</p>
<pre><code>make[1]: Leaving directory `/root/iscsitarget-1.4.20.2/usr'
make -C /lib/modules/2.6.32-358.14.1.el6.i686/build SUBDIRS=/root/iscsitarget-1.4.20.2/kernel modules
make: *** /lib/modules/2.6.32-358.14.1.el6.i686/build: No such file or directory.  Stop.
make: *** [kernel] Error 2
</code></pre><p>安装kernel-devel和patch</p>
<pre><code>[root@localhost iscsitarget-1.4.20.2]# yum -y install kernel kernel-devel patch
[root@localhost iscsitarget-1.4.20.2]# reboot
</code></pre><pre><code>[root@localhost iscsitarget-1.4.20.2]# rm -rf /lib/modules/`uname -r`/build
[root@localhost iscsitarget-1.4.20.2]# ln -s /usr/src/kernels/2.6.32-358.23.2.el6.i686/ /lib/modules/`uname -r`/build
[root@localhost iscsitarget-1.4.20.2]# make clean
[root@localhost iscsitarget-1.4.20.2]# make
[root@localhost iscsitarget-1.4.20.2]# make install
</code></pre><p>现在iscsitarget就已经安装好了，配置文件位置在: /etc/iet/ietd.conf
编辑该配置文件找到类似 Target iqn.2001-04.com.example:storage.disk2.sys1.xyz 行取消注释</p>
<p><img src="/images/2013/10/iscsi-conf1.jpg" alt="iscsi-conf1"></p>
<p>命名格式：<code>iqn.yyyy-mm.&lt;recversed domain name(倒过来写的域名)&gt;[:identifier]</code>
如：<code>Target iqn.2013-10.net.hacache.iscsi:storage.disk2.sys1.xyz</code>
找到类似<code> Lun 0 Path=/dev/sdc,Type=fileio,ScsiId=xyz,ScsiSN=xyz </code>行取消注释
<code>Lun 0 Path=/dev/sdc</code>，表示块设备0，映射的磁盘为/dev/sdc ，简单来说把/dev/sdc修改成你自己需要共享出去的磁盘路径就好了。
如：<code>Lun 0 Path=/dev/xvde,Type=fileio,ScsiId=xyz,ScsiSN=xyz</code></p>
<pre><code>[root@localhost iscsitarget-1.4.20.2]# service iscsi-target restart

Stopping iSCSI Target: Connection refused.
ietd: no process killed
                                                           [FAILED]
Starting iSCSI Target:                                     [  OK  ]
</code></pre><p>iSCSI-Target服务默认端口3260</p>
<p>这样一台简单的iSCSI服务器就已经搭建好了，现在我们来分别在windows和linux上添加target端(199)的磁盘</p>
<p>Windows：</p>
<p>需要安装iSCSI Initiator</p>
<p>可以在这里获取：<a href="http://www.microsoft.com/en-us/download/details.aspx?id=18986">http://www.microsoft.com/en-us/download/details.aspx?id=18986</a></p>
<p>选择相应的版本下载和安装完毕打开桌面上的Microsoft iSCSI Initiator</p>
<p><a href="/images/2013/10/iscsi-win.jpg"><img src="/images/2013/10/iscsi-win-300x263.jpg" alt="iscsi-win"></a>
如图，选择Discovery选项在Target Portals部分单击add按钮，输入iSCSI Target端的IP地址再单击OK即可</p>
<p>然后在Targets选项卡已经可以看到检测出的iSCSI Target的名称了但是还是inactive的状态</p>
<p><a href="/images/2013/10/iscsi-win2.jpg"><img src="/images/2013/10/iscsi-win2-300x285.jpg" alt="iscsi-win2"></a>
点击Log On按钮再次点击确定，现在已经变成Connected状态了</p>
<p><a href="/images/2013/10/iscsi-win3.jpg"><img src="/images/2013/10/iscsi-win3-251x300.jpg" alt="iscsi-win3"></a></p>
<p>现在你已经可以在windows的磁盘管理器中对新添加的共享磁盘进行分区、格式化等操作了。</p>
<p><a href="/images/2013/10/iscsi-win4.jpg"><img src="/images/2013/10/iscsi-win4-300x209.jpg" alt="iscsi-win4"></a></p>
<p>Linux：</p>
<p>Linux中也同样需要安装客户端软件，在CentOS中可使用yum进行安装</p>
<pre><code>[root@centos5 ~]# yum -y install iscsi-initiator-utils*
</code></pre><p>可以使用 rpm -ql iscsi-initiator-utils 来查看它安装了哪些程序</p>
<p>iscsi-initiator-utils使用比较多的就是iscsiadm命令了</p>
<p>现在开始挂载Target端的共享磁盘</p>
<p>使用 iscsiadm -m discovery &ndash;type sendtargets &ndash;portal IP地址 来搜索iSCSI Target主机划分了哪些lun</p>
<p><a href="/images/2013/10/iscsiadm.jpg"><img src="/images/2013/10/iscsiadm-300x77.jpg" alt="iscsiadm"></a></p>
<p>如图，已经搜索出来了我在199上共享出来的磁盘，现在开始连接它</p>
<p>可以使用  iscsiadm -m node -T [target-name] -p [ip-address] -l 格式连接</p>
<p>如：iscsiadm -m node -T iqn.2013-10.net.hacache.iscsi:storage.disk2.sys1.xyz -p 177.208.11.199 -l</p>
<p><a href="/images/2013/10/iscsiadm1.jpg"><img src="/images/2013/10/iscsiadm1-300x69.jpg" alt="iscsiadm1"></a></p>
<p>可以看到图中我已经连接成功了，</p>
<p><a href="/images/2013/10/iscsiadm2.jpg"><img src="/images/2013/10/iscsiadm2-300x190.jpg" alt="iscsiadm2"></a></p>
<p>使用fdisk -l 可以看到我已经多出了一块名为sdb的64G的磁盘</p>
<p>其他配置：</p>
<p>iSCSI-Target主机以IP认证方式获取资源</p>
<p>编辑/etc/iet/ietd.conf</p>
<pre><code>Target iqn.2013-10.net.hacache.iscsi:xvde1
Lun 0 Path=/dev/xvde1,Type=fileio
Target iqn.2013-10.net.hacache.iscsi:xvde2
Lun 0 Path=/dev/xvde2,Type=fileio
Target iqn.2013-10.net.hacache.iscsi:xvde3
Lun 0 Path=/dev/xvde3,Type=fileio
</code></pre><p>编辑/etc/iet/initiator.allow</p>
<p>注释掉ALL.ALL</p>
<p>添加如下格式的配置重启服务即可完成基于IP的资源验证</p>
<pre><code>iqn.2013-10.net.hacache.iscsi:xvde1 192.168.0.11
iqn.2013-10.net.hacache.iscsi:xvde2 192.168.0.12
iqn.2013-10.net.hacache.iscsi:xvde3 177.208.11.68
</code></pre>]]></content></item><item><title>CentOS桌面环境安装</title><link>https://painso.com/posts/tech/2013/centos-install-desktop/</link><pubDate>Mon, 30 Sep 2013 12:41:48 +0000</pubDate><guid>https://painso.com/posts/tech/2013/centos-install-desktop/</guid><description>由于历史悠久，本篇文章图片已失效
测试环境 CentOS6.4 64位 首先需要安装桌面环境包 yum -y groupinstall &amp;quot;KDE Desktop&amp;quot; yum -y groupinstall &amp;quot;X Window System&amp;quot; 默认源里好像只有KDE需要GNOME的可自行GOOGLE 等待安装完毕 安装完毕后再安装一下语言支持 yum -y groupinstall &amp;quot;Chinese Support&amp;quot;
装VNC yum -y install tigervnc-server
编辑一下配置文件 vim /etc/sysconfig/vncservers 修改如图
输入vncpasswd设置管理密码
启动服务
现在你已经可以使用vnc client来连接你的服务器了
这里使用的是TigerVNC,你可以去官方下载：http://www.tightvnc.com/download.php
官方默认是安装包（服务端和客户端一起的）
设置桌面语言
选择左下CENTOS图标-点击System Settings
进入面板后选择 Regional Language
点击Add Lanuage下拉菜单的Simplified Chinese(简体中文)
然后点击右下的Apply按钮应用，这时候系统会提示你需要重启 按照它说的办吧！
OK现在已经全部显示成中文了，高端大气上档次！</description><content type="html"><![CDATA[<p>由于历史悠久，本篇文章图片已失效</p>
<hr>
<h4 id="测试环境-centos64-64位">测试环境 CentOS6.4 64位</h4>
<h4 id="首先需要安装桌面环境包">首先需要安装桌面环境包</h4>
<pre><code>yum -y groupinstall &quot;KDE Desktop&quot;
yum -y groupinstall &quot;X Window System&quot;
</code></pre><h4 id="默认源里好像只有kde需要gnome的可自行google">默认源里好像只有KDE需要GNOME的可自行GOOGLE</h4>
<h4 id="等待安装完毕">等待安装完毕</h4>
<p>安装完毕后再安装一下语言支持
<code>yum -y groupinstall &quot;Chinese Support&quot;</code></p>
<p>装VNC
<code>yum -y install tigervnc-server</code></p>
<p>编辑一下配置文件
<code>vim /etc/sysconfig/vncservers</code>
修改如图</p>
<p>输入vncpasswd设置管理密码</p>
<p>启动服务</p>
<p>现在你已经可以使用vnc client来连接你的服务器了</p>
<p>这里使用的是TigerVNC,你可以去官方下载：<a href="http://www.tightvnc.com/download.php">http://www.tightvnc.com/download.php</a></p>
<p>官方默认是安装包（服务端和客户端一起的）</p>
<p>设置桌面语言</p>
<p>选择左下CENTOS图标-点击<code>System Settings</code></p>
<p>进入面板后选择 <code>Regional Language</code></p>
<p>点击<code>Add Lanuage</code>下拉菜单的<code>Simplified Chinese(简体中文)</code></p>
<p>然后点击右下的<code>Apply</code>按钮应用，这时候系统会提示你需要重启 按照它说的办吧！</p>
<p>OK现在已经全部显示成中文了，高端大气上档次！</p>
]]></content></item><item><title>Linux Xen和OpenVZ架构安装PPTP VPN。</title><link>https://painso.com/posts/tech/2013/linux-xen-openvz-pptp-services/</link><pubDate>Wed, 14 Aug 2013 14:25:05 +0000</pubDate><guid>https://painso.com/posts/tech/2013/linux-xen-openvz-pptp-services/</guid><description>之前有好几次安装VPN服务都失败了，最近再次有安装几次发现非常的简单，特写此文章供参考。
Xen系统环境：CentOS release 6.4 (Final) 64位 首先检查是否支持PPP（一般都支持的） 执行modprobe ppp-compress-18 无返回结果则OK
[root@localhost ~]# modprobe ppp-compress-18 [root@localhost ~]# 下载pptp安装包
官方: (http://poptop.sourceforge.net/yum/stable/packages/) （需翻X）
[root@localhost ~]# ls pptpd-1.3.4-2.el6.x86_64.rpm [root@localhost ~]# rpm -ivh pptpd-1.3.4-2.el6.x86_64.rpm warning: pptpd-1.3.4-2.el6.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 862acc42: NOKEY error: Failed dependencies: /usr/bin/perl is needed by pptpd-1.3.4-2.el6.x86_64 perl(strict) is needed by pptpd-1.3.4-2.el6.x86_64 执行安装的时候出现如上错误，原因是没有安装perl
yum -y install perl
编辑ppp配置文件：vim /etc/ppp/options.pptpd
先按键盘上的 dG 清空默认配置添加下面的配置上去保存退出。
name pptpd refuse-pap refuse-chap refuse-mschap require-mschap-v2 require-mppe-128 proxyarp lock nobsdcomp novj novjccomp nologfd ms-dns 8.</description><content type="html"><![CDATA[<p>之前有好几次安装VPN服务都失败了，最近再次有安装几次发现非常的简单，特写此文章供参考。</p>
<p>Xen系统环境：CentOS release 6.4 (Final) 64位
首先检查是否支持PPP（一般都支持的）
执行modprobe ppp-compress-18 无返回结果则OK</p>
<pre><code>[root@localhost ~]# modprobe ppp-compress-18
[root@localhost ~]#
</code></pre><p>下载pptp安装包</p>
<p>官方: (<a href="http://poptop.sourceforge.net/yum/stable/packages/">http://poptop.sourceforge.net/yum/stable/packages/</a>) （需翻X）</p>
<pre><code>[root@localhost ~]# ls
pptpd-1.3.4-2.el6.x86_64.rpm
[root@localhost ~]# rpm -ivh pptpd-1.3.4-2.el6.x86_64.rpm 
warning: pptpd-1.3.4-2.el6.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 862acc42: NOKEY
error: Failed dependencies:
/usr/bin/perl is needed by pptpd-1.3.4-2.el6.x86_64
perl(strict) is needed by pptpd-1.3.4-2.el6.x86_64
</code></pre><p>执行安装的时候出现如上错误，原因是没有安装perl</p>
<pre><code>yum -y install perl
</code></pre><p><a href="/images/2013/08/install-perl.png"><img src="/images/2013/08/install-perl-300x201.png" alt="install-perl"></a></p>
<p>编辑ppp配置文件：vim /etc/ppp/options.pptpd</p>
<p>先按键盘上的 dG 清空默认配置添加下面的配置上去保存退出。</p>
<pre><code>name pptpd 
refuse-pap 
refuse-chap 
refuse-mschap 
require-mschap-v2 
require-mppe-128 
proxyarp 
lock 
nobsdcomp 
novj 
novjccomp 
nologfd 
ms-dns 8.8.8.8
ms-dns 8.8.4.4
</code></pre><p>编辑IP地址池等信息：vim /etc/pptpd.conf</p>
<p>同样键入dG清空默认配置添加下方配置保存退出。（localip和remoteip可根据自己的需要配置）</p>
<pre><code>option /etc/ppp/options.pptpd 
logwtmp 
localip 172.16.0.1 
remoteip 172.16.0.2-254
</code></pre><p>localip：本机PPP网卡IP（作为客户端连接时的网关）</p>
<p>remoteip：客户端获取IP的范围（从2到254个IP顺序获取）</p>
<p>编辑VPN帐号密码信息：vim /etc/ppp/chap-secrets</p>
<p>格式为：登录帐号 协议 登录密码 指定客户端获取的IP</p>
<p>如：vpn pptpd vpn *  - 这样为帐号密码是vpn 获取的ip会从/etc/pptpd.conf配置的地址池中获取</p>
<p>vpn pptpd vpn 172.16.0.55 - 这样我就为该帐号设置了一个固定的IP，请不要设置123.3.4.5这样的IP 否则上不了网。</p>
<p>开启ipv4内核转发：vim /etc/sysctl.conf</p>
<p>把 net.ipv4.ip_forward = 0 修改为 net.ipv4.ip_forward = 1</p>
<p>执行 sysctl -p</p>
<p><a href="/images/2013/08/ipv4-forward.png"><img src="/images/2013/08/ipv4-forward-300x201.png" alt="ipv4-forward"></a></p>
<p>现在我们的VPN服务基本已经配置完毕了，现在执行最后的操作</p>
<p>添加iptables NAT转发规则</p>
<pre><code>iptables -A INPUT -p tcp --dport 1723 -j ACCEPT

iptables -A INPUT -p tcp --dport 47 -j ACCEPT

iptables -A INPUT -p gre -j ACCEPT

iptables -t nat -A POSTROUTING -s 172.16.0.0/24 -o eth0 -j MASQUERADE
</code></pre><p>如果你的iptables策略并不需要如此严格其实添加下面这1条就可以了</p>
<pre><code>iptables -t nat -A POSTROUTING -s 172.16.0.0/24 -o eth0 -j MASQUERADE
</code></pre><p>保存iptables规则和启动pptp服务并设置开机启动</p>
<pre><code>service iptables save

service iptables restart

service pptpd start

chkconfig pptpd on
</code></pre><p>现在你就可以使用你的客户端连接到你的VPN服务开始翻X之旅啦！</p>
<p><a href="/images/2013/08/xen-pptp.png"><img src="/images/2013/08/xen-pptp-266x300.png" alt="xen-pptp"></a></p>
<p>OpenVZ系统环境：CentOS release 6.2 (Final) 32位</p>
<p>安装ppp和pptp</p>
<pre><code>yum -y install ppp

rpm -ivh http://soft.painso.com/Linux/pptpd/pptpd-1.3.4-2.el6.i686.rpm
</code></pre><p>同样开始编辑配置文件：</p>
<pre><code>vim /etc/ppp/options.pptpd
</code></pre><p>清空粘帖下方配置</p>
<pre><code>name pptpd 
refuse-pap 
refuse-chap 
refuse-mschap 
require-mschap-v2 
require-mppe-128 
proxyarp 
lock 
nobsdcomp 
novj 
novjccomp 
nologfd 
ms-dns 8.8.8.8
ms-dns 8.8.4.4
</code></pre><pre><code>vim /etc/pptpd.conf
</code></pre><p>清空粘帖下方配置</p>
<pre><code>option /etc/ppp/options.pptpd
logwtmp
localip 172.16.0.1
remoteip 172.16.0.2-254
</code></pre><pre><code>vim /etc/ppp/chap-secrets
</code></pre><p>添加你的pptp服务帐号</p>
<p><a href="/images/2013/08/pptp.png"><img src="/images/2013/08/pptp-300x55.png" alt="pptp"></a></p>
<p>同样修改内核配置开启ipv4转发</p>
<pre><code>vim /etc/sysctl.conf
</code></pre><p>里面的 net.ipv4.ip_forward=0 修改为 net.ipv4.ip_forward=1</p>
<pre><code>sysctl -p
</code></pre><p>添加iptables转发规则</p>
<pre><code>iptables -t nat -A POSTROUTING -s 172.16.0.0/24 -j SNAT --to-source 67.117.22.35
</code></pre><p>这里的 67.117.22.35 修改为服务器的公网IP</p>
<p>开启相关服务并开机启动</p>
<pre><code>service iptables save

service iptables restart

service pptpd start

chkconfig pptpd on
</code></pre><p>大功告成！</p>
<p><a href="/images/2013/08/openvz.png"><img src="/images/2013/08/openvz-300x141.png" alt="openvz"></a></p>
<p>注：</p>
<p>错误1：如果出现错误619则输入命令：</p>
<pre><code>rm -r /dev/ppp
mknod /dev/ppp c 108 0
</code></pre><p>然后 reboot 重启。</p>
<p>错误2：如果出现错误800，这是因为虚拟机内核不支持mpPE，无法使用加密，用WINDOWS默认VPN连接会显示“证书信任错误”。解决方法：修改/etc/ppp/options.pptpd文件，在require-mppe-128字段前面加#即可，注释掉require-mppe-128这行就成功了</p>
<p>本地的windows系统的vpn属性改为可选加密，如下图：</p>
<p><a href="/images/2013/08/error.png"><img src="/images/2013/08/error-300x227.png" alt="error"></a></p>
<p>其实到最后你会发现2种虚拟架构配置VPN只是添加到iptables的转发规则不同。</p>
<p><del>我操！浪费老子这么多时间，这Linux还怎么玩。。。</del></p>
]]></content></item><item><title>修改mysql用户密码</title><link>https://painso.com/posts/tech/2013/change-mysql-password/</link><pubDate>Mon, 05 Aug 2013 13:08:39 +0000</pubDate><guid>https://painso.com/posts/tech/2013/change-mysql-password/</guid><description>mysqladmin命令（回目录） 格式如下（其中，USER为用户名，PASSWORD为新密码）： mysqladmin -u USER -p password PASSWORD 该命令之后会提示输入原密码，输入正确后即可修改。 例如，设置root用户的密码为123456，则
mysqladmin -u root -p password 123456 UPDATE user 语句（回目录） 这种方式必须是先用root帐户登入mysql，然后执行： UPDATE user SET password=PASSWORD('123456') WHERE user='root'; FLUSH PRIVILEGES; SET PASSWORD 语句（回目录） 这种方式也需要先用root命令登入mysql，然后执行： SET PASSWORD FOR root=PASSWORD('123456'); 忘记mysql密码（回目录） windows：在bin目录下执行 mysqld --skip-grant-tables 回车。如果没有出现提示信息，那就对了。 再开一个DOS窗口(因为刚才那个DOS窗口已经不能动了)，转到mysql\bin目录。 输入mysql回车，如果成功，将出现MySQL提示符
use mysql; update user set password=password(&amp;quot;newpassword&amp;quot;) where user=&amp;quot;root&amp;quot;; flush privileges; 注销系统，再进入，开MySQL，使用用户名root和刚才设置的新密码123456登陆。 linux：
vi /etc/my.cnf 在[mysqld]的段中加上一句：skip-grant-tables 例如：
[mysqld] datadir=/var/lib/mysql socket=/var/lib/mysql/mysql.sock skip-grant-tables 保存并且退出vi。 重新启动mysqld</description><content type="html"><![CDATA[<ol>
<li>mysqladmin命令（回目录）
格式如下（其中，USER为用户名，PASSWORD为新密码）：</li>
</ol>
<pre><code>mysqladmin -u USER -p password PASSWORD
</code></pre><p>该命令之后会提示输入原密码，输入正确后即可修改。
例如，设置root用户的密码为123456，则</p>
<pre><code>mysqladmin -u root -p password 123456
</code></pre><ol start="2">
<li>UPDATE user 语句（回目录）
这种方式必须是先用root帐户登入mysql，然后执行：</li>
</ol>
<pre><code>UPDATE user SET password=PASSWORD('123456') WHERE user='root';
FLUSH PRIVILEGES;
</code></pre><ol start="3">
<li>SET PASSWORD 语句（回目录）
这种方式也需要先用root命令登入mysql，然后执行：</li>
</ol>
<pre><code>SET PASSWORD FOR root=PASSWORD('123456');
</code></pre><ol start="4">
<li>忘记mysql密码（回目录）
windows：在bin目录下执行</li>
</ol>
<pre><code>mysqld --skip-grant-tables
</code></pre><p>回车。如果没有出现提示信息，那就对了。
再开一个DOS窗口(因为刚才那个DOS窗口已经不能动了)，转到mysql\bin目录。
输入mysql回车，如果成功，将出现MySQL提示符</p>
<pre><code>use mysql;
update user set password=password(&quot;newpassword&quot;) where user=&quot;root&quot;;
flush privileges;
</code></pre><p>注销系统，再进入，开MySQL，使用用户名root和刚才设置的新密码123456登陆。
linux：</p>
<pre><code>vi /etc/my.cnf
</code></pre><p>在[mysqld]的段中加上一句：skip-grant-tables
例如：</p>
<pre><code>[mysqld] 
datadir=/var/lib/mysql 
socket=/var/lib/mysql/mysql.sock 
skip-grant-tables
</code></pre><p>保存并且退出vi。
重新启动mysqld</p>
<pre><code>/etc/init.d/mysqld restart 
Stopping MySQL: [ OK ] 
Starting MySQL: [ OK ]
</code></pre><p>登录并修改MySQL的root密码</p>
<pre><code>/usr/bin/mysql #根据自己的安装目录而定
Welcome to the MySQL monitor. Commands end with ; or \g. 
Your MySQL connection id is 3 to server version: 3.23.56 
Type 'help;' or '\h' for help. Type '\c' to clear the buffer. 
mysql&gt; USE mysql ; 
Reading table information for completion of table and column names 
You can turn off this feature to get a quicker startup with -A 
Database changed 
mysql&gt; UPDATE user SET Password = password ( 'new-password' ) WHERE User = 'root' ; 
Query OK, 0 rows affected (0.00 sec) 
Rows matched: 2 Changed: 0 Warnings: 0 
mysql&gt; flush privileges ; 
Query OK, 0 rows affected (0.01 sec) 
mysql&gt; quit
</code></pre><p>Bye
5. 将MySQL的登录设置修改回来
<code>vi /etc/my.cnf</code>
将刚才在[mysqld]的段中加上的skip-grant-tables删除
保存并且退出vi。
6. 重新启动mysqld</p>
<pre><code>/etc/init.d/mysqld restart 
Stopping MySQL: [ OK ] 
Starting MySQL: [ OK ]
</code></pre>]]></content></item><item><title>[转]PHP连接MySQL主机127.0.0.1与localhost的区别</title><link>https://painso.com/posts/tech/2013/php-connect-mysql-localhost/</link><pubDate>Fri, 12 Jul 2013 23:45:53 +0000</pubDate><guid>https://painso.com/posts/tech/2013/php-connect-mysql-localhost/</guid><description>发现问题
昨天在帮同事编译安装Linux环境时，遇到一个问题： WEB服务器是apache，数据库是MySQL。 于是写了一个测试连接数据库的PHP页面： $mysql = mysql_connect('localhost','root',''); 打开 http://localhost/test.php 测试 提示：Can’t connect to local MySQL server through socket... 检查环境正常 以为是数据库没有启动，于是查看一下进程，MySQL在进程里，重启了一下MySQL. 使用mysql -u root -p 可以进入MySQL操作界面 直接使用/usr/local/php5/bin/php /web/test.php执行可以连上数据库 apache也重启了，一样无效 疑点：为何网页执行失败，命令执行却成功 这下就郁闷了，使用php命令直接执行就成功，通过网页执行就失败。难道是apache导致？网上搜索了大堆资料也没找到解决方案，重新编译安装apache问题依旧。 把localhost改成127.0.0.1成功 把localhost改成127.0.0.1后竟然连接成功了，开始陷入思考困局：localhost失败127.0.0.1却成功？ ping localhost 地址是127.0.0.1没错 打开hosts加入 127.0.0.1 qttc 使用qttc当主机连接也正常，唯独就不认localhost。 localhost连接方式不同导致 为了了解PHP连接数据库时，主机填写localhost与其它的区别阅读了大量资料，最后得知： 当主机填写为localhost时mysql会采用 unix domain socket连接 当主机填写为127.0.0.1时mysql会采用tcp方式连接 这是linux套接字网络的特性，win平台不会有这个问题 解决方法在my.cnf的[mysql]区段里添加protocol=tcp保存重启MySQL，问题解决！原文链接：http://www.qttc.net/201210228.html</description><content type="html"><![CDATA[<p>发现问题</p>
<p>昨天在帮同事编译安装Linux环境时，遇到一个问题：
WEB服务器是apache，数据库是MySQL。
于是写了一个测试连接数据库的PHP页面：
<code>$mysql = mysql_connect('localhost','root','');</code>
打开 http://localhost/test.php 测试
提示：<code>Can’t connect to local MySQL server through socket...</code>
检查环境正常
以为是数据库没有启动，于是查看一下进程，MySQL在进程里，重启了一下MySQL.
使用mysql -u root -p 可以进入MySQL操作界面
直接使用/usr/local/php5/bin/php /web/test.php执行可以连上数据库
apache也重启了，一样无效
疑点：为何网页执行失败，命令执行却成功
这下就郁闷了，使用php命令直接执行就成功，通过网页执行就失败。难道是apache导致？网上搜索了大堆资料也没找到解决方案，重新编译安装apache问题依旧。
把localhost改成127.0.0.1成功
把localhost改成127.0.0.1后竟然连接成功了，开始陷入思考困局：localhost失败127.0.0.1却成功？
ping localhost 地址是127.0.0.1没错
打开hosts加入
127.0.0.1 qttc
使用qttc当主机连接也正常，唯独就不认localhost。
localhost连接方式不同导致
为了了解PHP连接数据库时，主机填写localhost与其它的区别阅读了大量资料，最后得知：
当主机填写为localhost时mysql会采用 unix domain socket连接
当主机填写为127.0.0.1时mysql会采用tcp方式连接
这是linux套接字网络的特性，win平台不会有这个问题
<!-- raw HTML omitted -->解决方法<!-- raw HTML omitted -->
<!-- raw HTML omitted -->在my.cnf的[mysql]区段里添加<!-- raw HTML omitted -->
<!-- raw HTML omitted -->protocol=tcp<!-- raw HTML omitted -->
<!-- raw HTML omitted -->保存重启MySQL，问题解决！<!-- raw HTML omitted --></p>
<p>原文链接：<a href="http://www.qttc.net/201210228.html">http://www.qttc.net/201210228.html</a></p>
]]></content></item><item><title>PHP文件操作函数和添加图片计数器。</title><link>https://painso.com/posts/tech/2013/php-file-counter/</link><pubDate>Sun, 07 Jul 2013 14:21:03 +0000</pubDate><guid>https://painso.com/posts/tech/2013/php-file-counter/</guid><description>PHP访问文件或文件夹相关函数 filetype() //可以输出相关文件类型，如：dir / file /link echo filetype(&amp;lsquo;C:\WINDOWS&amp;rsquo;).''; 输出结果：dir echo filetype(&amp;lsquo;C:\WINDOWS\regedit.exe&amp;rsquo;).''; 输出结果：file 相关函数： clearstatcache() 来清除缓存 is_executable() 判断文件是否可执行 is_dir() 判断是否存在或是文件夹 is_file() 判断是否是文件 scandir() 遍历文件夹 / 返回一个数组
str_split 将字符串拆分为单个数组
php if(!$f=fopen(&amp;quot;num.txt&amp;quot;,&amp;quot;r&amp;quot;)){ //只读模式打开，判断num.txt不存在则输出下行 echo &amp;quot;文件不存在！！！&amp;quot;; $num=0; }else{ num = fgets(f,10); //获得9位 fclose($f); } $num++; $open = fopen(&amp;quot;num.txt&amp;quot;,&amp;quot;w&amp;quot;); //写入模式打开（如果文件不存在则创建） fwrite(open,num); //把$num里的值写入到num.txt中 fclose($open); //关闭num.txt } numarr = str_split(num); //把字符串拆分到数组中 foreach(numarr as number){ //为$numarr开始遍历 // print_r($number); echo &amp;quot;&amp;lt;img src='images\&amp;quot;.number.&amp;quot;.png'&amp;gt;&amp;quot;; //循环遍历输出number.png }</description><content type="html"><![CDATA[<p>PHP访问文件或文件夹相关函数
filetype() //可以输出相关文件类型，如：dir / file /link
echo filetype(&lsquo;C:\WINDOWS&rsquo;).'';
输出结果：dir
echo filetype(&lsquo;C:\WINDOWS\regedit.exe&rsquo;).'';
输出结果：file
相关函数：
clearstatcache() 来清除缓存
is_executable() 判断文件是否可执行
is_dir() 判断是否存在或是文件夹
is_file() 判断是否是文件
scandir() 遍历文件夹 / 返回一个数组</p>
<p>str_split 将字符串拆分为单个数组</p>
<pre><code>php
if(!$f=fopen(&quot;num.txt&quot;,&quot;r&quot;)){ //只读模式打开，判断num.txt不存在则输出下行
echo &quot;文件不存在！！！&quot;;
$num=0;
}else{
num = fgets(f,10); //获得9位
fclose($f);
}
$num++;
$open = fopen(&quot;num.txt&quot;,&quot;w&quot;); //写入模式打开（如果文件不存在则创建）
fwrite(open,num); //把$num里的值写入到num.txt中
fclose($open); //关闭num.txt
}
numarr = str_split(num); //把字符串拆分到数组中
foreach(numarr as number){ //为$numarr开始遍历
// print_r($number);
echo &quot;&lt;img src='images\&quot;.number.&quot;.png'&gt;&quot;; //循环遍历输出number.png
}
</code></pre>]]></content></item><item><title>PHP的数组、多维数组和数组函数学习笔记。</title><link>https://painso.com/posts/tech/2013/php-array-stydy/</link><pubDate>Fri, 05 Jul 2013 00:16:32 +0000</pubDate><guid>https://painso.com/posts/tech/2013/php-array-stydy/</guid><description>最近在学习PHP，想多学点东西充实自己，提升自己的能力，以后才可以回报爱我的人和我爱的人 - - 。
foreach()是一个用来遍历数组中数据的最简单有效的方法。
php title = array(&amp;quot;S.m.s&amp;quot;,&amp;quot;娱乐&amp;quot;,&amp;quot;音乐论坛&amp;quot;); //创建一个title的数组(无键值模式) //$title = array(&amp;quot;A&amp;quot;=&amp;gt;&amp;quot;S.m.s&amp;quot;,&amp;quot;B&amp;quot;=&amp;gt;&amp;quot;娱乐&amp;quot;,&amp;quot;C&amp;quot;=&amp;gt;&amp;quot;音乐论坛&amp;quot;); //有键值模式 //遍历方式1 foreach(title as value){ //无键名模式 echo value; //直接把title数组的数据从左到右依次输出 } echo &amp;quot;&amp;lt;br&amp;gt;&amp;quot;; foreach(title as str =&amp;gt; $value){ //有键名模式(多了一个键名/下标输出) echo str.&amp;quot;=&amp;quot;.value.&amp;quot;&amp;lt;br&amp;gt;&amp;quot;; //输出下标和键值(我上面没有定义键名，所以输出的为下标值后面跟上对应的数组值) } //题目为。要求输出$arr数组里面的所有值，每输出一个换一行。 $arr = array(array(array('a','b','c','d',1,2,3,4),'我','是','你'),array('吧','吧')); //多维数组 foreach(arr as a){ //arr数组遍历给a if(is_array($a)){ //判断$arr是否为数组类型 foreach(a as b){ //如果是的话继续把a遍历给b if(is_array($b)){ //判断$b是否为数组类型 foreach(b as c){ //如果是把b遍历给c echo c.&amp;quot;&amp;lt;br&amp;gt;&amp;quot;; //并且输出c } }else{ echo b.&amp;quot;&amp;lt;br&amp;gt;&amp;quot;; //如果不是直接输出b } } }else{ echo a.&amp;quot;&amp;lt;br&amp;gt;&amp;quot;; //如果不是则输出a } } 其中foreach遍历原理还不是很清楚</description><content type="html"><![CDATA[<p>最近在学习PHP，想多学点东西充实自己，提升自己的能力，以后才可以回报爱我的人和我爱的人 - - 。</p>
<p>foreach()是一个用来遍历数组中数据的最简单有效的方法。</p>
<pre><code>php
title = array(&quot;S.m.s&quot;,&quot;娱乐&quot;,&quot;音乐论坛&quot;);  //创建一个title的数组(无键值模式)
//$title = array(&quot;A&quot;=&gt;&quot;S.m.s&quot;,&quot;B&quot;=&gt;&quot;娱乐&quot;,&quot;C&quot;=&gt;&quot;音乐论坛&quot;);  //有键值模式
//遍历方式1
foreach(title as value){    //无键名模式
echo value;                     //直接把title数组的数据从左到右依次输出
}
echo &quot;&lt;br&gt;&quot;;
foreach(title as str =&gt; $value){   //有键名模式(多了一个键名/下标输出)
echo str.&quot;=&quot;.value.&quot;&lt;br&gt;&quot;;         //输出下标和键值(我上面没有定义键名，所以输出的为下标值后面跟上对应的数组值)
}
//题目为。要求输出$arr数组里面的所有值，每输出一个换一行。
$arr = array(array(array('a','b','c','d',1,2,3,4),'我','是','你'),array('吧','吧')); //多维数组
foreach(arr as a){ //arr数组遍历给a
if(is_array($a)){ //判断$arr是否为数组类型
foreach(a as b){ //如果是的话继续把a遍历给b
if(is_array($b)){ //判断$b是否为数组类型
foreach(b as c){ //如果是把b遍历给c
echo c.&quot;&lt;br&gt;&quot;; //并且输出c
}
}else{
echo b.&quot;&lt;br&gt;&quot;; //如果不是直接输出b
}
}
}else{
echo a.&quot;&lt;br&gt;&quot;; //如果不是则输出a
}
}
</code></pre><p>其中foreach遍历原理还不是很清楚</p>
<p>这里有好几层数组 ，为什么判断2次就全部输出了</p>
<p>注意事项：有键的数值不能使用下标方式调用</p>
]]></content></item><item><title>Nginx 301域名重定向。</title><link>https://painso.com/posts/tech/2013/nginx-301/</link><pubDate>Tue, 18 Jun 2013 16:55:21 +0000</pubDate><guid>https://painso.com/posts/tech/2013/nginx-301/</guid><description>闲来无事又整了几个电影站，资源空着也是空着，把设置301域名重定向规则记录下来，省的每次都Google；
在Nginx虚拟主机配置文件的server段中添加如下配置：
server_name domain.com www.domain.com; if ($host != 'www.domain.com' ) { rewrite ^/(.*) http://www.domain.com/1 permanent; } 访问domain.com重定向到www.domain.com;
nginx -t nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful service nginx reload OK..</description><content type="html"><![CDATA[<p>闲来无事又整了几个电影站，资源空着也是空着，把设置301域名重定向规则记录下来，省的每次都Google；</p>
<p>在Nginx虚拟主机配置文件的server段中添加如下配置：</p>
<pre><code>server_name domain.com www.domain.com;
if ($host != 'www.domain.com' ) {
rewrite ^/(.*) http://www.domain.com/1 permanent;
}
</code></pre><p>访问domain.com重定向到www.domain.com;</p>
<pre><code>nginx -t
nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok
nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful
service nginx reload
OK..
</code></pre>]]></content></item><item><title>thread.error: can't start new thread 解决办法</title><link>https://painso.com/posts/tech/2013/thread-error-cant-start-new-thread/</link><pubDate>Thu, 30 May 2013 09:23:04 +0000</pubDate><guid>https://painso.com/posts/tech/2013/thread-error-cant-start-new-thread/</guid><description>最近折腾VPS安装各种应用，在YUM安装软件时报错 。GOOGLE了一下，发现是YUM的一个配置文件导致
Loaded plugins: fastestmirror Loading mirror speeds from cached hostfile Traceback (most recent call last): File &amp;quot;/usr/bin/yum&amp;quot;, line 29, in &amp;amp;lt;module&amp;amp;gt; yummain.user_main(sys.argv[1:], exit_code=True) File &amp;quot;/usr/share/yum-cli/yummain.py&amp;quot;, line 276, in user_main errcode = main(args) File &amp;quot;/usr/share/yum-cli/yummain.py&amp;quot;, line 129, in main result, resultmsgs = base.doCommands() File &amp;quot;/usr/share/yum-cli/cli.py&amp;quot;, line 434, in doCommands self._getTs(needTsRemove) File &amp;quot;/usr/lib/python2.6/site-packages/yum/depsolve.py&amp;quot;, line 99, in _getTs self._getTsInfo(remove_only) File &amp;quot;/usr/lib/python2.6/site-packages/yum/depsolve.py&amp;quot;, line 110, in _getTsInfo pkgSack = self.pkgSack File &amp;quot;/usr/lib/python2.6/site-packages/yum/__init__.py&amp;quot;, line 883, in &amp;amp;lt;lambda&amp;amp;gt; pkgSack = property(fget=lambda self: self.</description><content type="html"><![CDATA[<p>最近折腾VPS安装各种应用，在YUM安装软件时报错 。GOOGLE了一下，发现是YUM的一个配置文件导致</p>
<pre><code>Loaded plugins: fastestmirror
Loading mirror speeds from cached hostfile
Traceback (most recent call last):
File &quot;/usr/bin/yum&quot;, line 29, in &amp;lt;module&amp;gt;
yummain.user_main(sys.argv[1:], exit_code=True)
File &quot;/usr/share/yum-cli/yummain.py&quot;, line 276, in user_main
errcode = main(args)
File &quot;/usr/share/yum-cli/yummain.py&quot;, line 129, in main
result, resultmsgs = base.doCommands()
File &quot;/usr/share/yum-cli/cli.py&quot;, line 434, in doCommands
self._getTs(needTsRemove)
File &quot;/usr/lib/python2.6/site-packages/yum/depsolve.py&quot;, line 99, in _getTs
self._getTsInfo(remove_only)
File &quot;/usr/lib/python2.6/site-packages/yum/depsolve.py&quot;, line 110, in _getTsInfo
pkgSack = self.pkgSack
File &quot;/usr/lib/python2.6/site-packages/yum/__init__.py&quot;, line 883, in &amp;lt;lambda&amp;gt;
pkgSack = property(fget=lambda self: self._getSacks(),
File &quot;/usr/lib/python2.6/site-packages/yum/__init__.py&quot;, line 668, in _getSacks
self.repos.populateSack(which=repos)
File &quot;/usr/lib/python2.6/site-packages/yum/repos.py&quot;, line 265, in populateSack
self.doSetup()
File &quot;/usr/lib/python2.6/site-packages/yum/repos.py&quot;, line 92, in doSetup
self.ayum.plugins.run('postreposetup')
File &quot;/usr/lib/python2.6/site-packages/yum/plugins.py&quot;, line 184, in run
func(conduitcls(self, self.base, conf, **kwargs))
File &quot;/usr/lib/yum-plugins/fastestmirror.py&quot;, line 202, in postreposetup_hook
all_urls = FastestMirror(all_urls).get_mirrorlist()
File &quot;/usr/lib/yum-plugins/fastestmirror.py&quot;, line 369, in get_mirrorlist
self._poll_mirrors()
File &quot;/usr/lib/yum-plugins/fastestmirror.py&quot;, line 413, in _poll_mirrors
pollThread.start()
File &quot;/usr/lib/python2.6/threading.py&quot;, line 474, in start
_start_new_thread(self.__bootstrap, ())
thread.error: can't start new thread
</code></pre><p>vim /etc/yum/pluginconf.d/fastestmirror.conf //编辑该文件
将enable=1改为0即可</p>
]]></content></item><item><title>CentOS取消图形化界面及进度条。</title><link>https://painso.com/posts/tech/2013/centos-cancel-graphical/</link><pubDate>Tue, 14 May 2013 09:13:47 +0000</pubDate><guid>https://painso.com/posts/tech/2013/centos-cancel-graphical/</guid><description>新版的CentOS启动方式改成了以图形化进度条的形式启动系统，非常不利于新手学习LINUX，所以建议取消掉，采用正常的命令行形式启动。
vi /boot/grub/grub.conf default=0 timeout=5 splashimage=(hd0,0)/boot/grub/splash.xpm.gz hiddenmenu title centos (2.6.32-71.el6.i686) root (hd0,0) kernel /boot/vmlinuz-2.6.32-71.el6.i686 ro root=UUID=0ecaaa50-2f52-490b-a9b5-a22918c9f485 rd_NO_LUKS rd_NO_LVM rd_NO_MD rd_NO_DM LANG=zh_CN.UTF-8 KEYBOARDTYPE=pc KEYTABLE=us crashkernel=auto rhgb quiet initrd /boot/initramfs-2.6.32-71.el6.i686.img 把上方红色字体部分删除rhgb（redhat graphics boot）保存即可
另外如果想取消图形化界面的可以更改init运行级别
vi /etc/inittab id:5:initdefault: 把上方的5改为3即可
init级别：
0 - 停机(千万不能把initdefault 设置为0) 1 - 单用户模式 2 - 多用户，没有 NFS 3 - 完全多用户模式(标准的运行级) 4 - 没有用到 5 - X11 （xwindow) 6 - 重新启动 （千万不要把initdefault 设置为6 ）</description><content type="html"><![CDATA[<p>新版的CentOS启动方式改成了以图形化进度条的形式启动系统，非常不利于新手学习LINUX，所以建议取消掉，采用正常的命令行形式启动。</p>
<pre><code>vi /boot/grub/grub.conf


default=0

timeout=5

splashimage=(hd0,0)/boot/grub/splash.xpm.gz

hiddenmenu

title centos (2.6.32-71.el6.i686)

root (hd0,0)

kernel /boot/vmlinuz-2.6.32-71.el6.i686 ro root=UUID=0ecaaa50-2f52-490b-a9b5-a22918c9f485 rd_NO_LUKS rd_NO_LVM rd_NO_MD rd_NO_DM LANG=zh_CN.UTF-8 KEYBOARDTYPE=pc KEYTABLE=us crashkernel=auto rhgb quiet

initrd /boot/initramfs-2.6.32-71.el6.i686.img
</code></pre><p>把上方红色字体部分删除<code>rhgb</code>（redhat graphics boot）保存即可</p>
<p>另外如果想取消图形化界面的可以更改init运行级别</p>
<pre><code>vi /etc/inittab


id:5:initdefault:
</code></pre><p>把上方的5改为3即可</p>
<p>init级别：</p>
<ul>
<li>0 - 停机(千万不能把initdefault 设置为0)</li>
<li>1 - 单用户模式</li>
<li>2 - 多用户，没有 NFS</li>
<li>3 - 完全多用户模式(标准的运行级)</li>
<li>4 - 没有用到</li>
<li>5 - X11 （xwindow)</li>
<li>6 - 重新启动 （千万不要把initdefault 设置为6 ）</li>
</ul>
]]></content></item><item><title>想念。</title><link>https://painso.com/posts/thinking/2013/missing-you/</link><pubDate>Tue, 09 Apr 2013 18:45:31 +0000</pubDate><guid>https://painso.com/posts/thinking/2013/missing-you/</guid><description>今天要来厦大办事情，途中时不时会想起你，但是又有些怕真正见到你 ，呵呵 不知道为什么 什么感觉，这边电脑正好可以上网，想送个东西给你 也不知道你喜欢啥 ，买了件衣服 ，希望你会喜欢 ，你可能不知道是谁送的 只要你喜欢就OK了 ，好了 得找工作了 ，不然以后哪有钱请你吃饭啊 呵呵 就这样。</description><content type="html">&lt;p>今天要来厦大办事情，途中时不时会想起你，但是又有些怕真正见到你 ，呵呵 不知道为什么 什么感觉，这边电脑正好可以上网，想送个东西给你 也不知道你喜欢啥 ，买了件衣服 ，希望你会喜欢 ，你可能不知道是谁送的  只要你喜欢就OK了 ，好了 得找工作了 ，不然以后哪有钱请你吃饭啊 呵呵 就这样。&lt;/p></content></item><item><title>小内存VPS优化(LNMP+WordPress环境)</title><link>https://painso.com/posts/tech/2013/small-memory-vps-optimized/</link><pubDate>Fri, 01 Mar 2013 21:35:25 +0000</pubDate><guid>https://painso.com/posts/tech/2013/small-memory-vps-optimized/</guid><description>之前的服务商跑路了,2个站 一个博客和一个论坛 没备份 懒 .直到现在才后悔莫及 备份是1年前的,悲剧了 换了个VR的San Jose机房速度还可以 256M的内存然后把1年前的备份放上去了,用了几天空闲内存总是剩个1-2十M 有些担心,网上查了查 于是决定还是优化下
我现在的系统配置是:
双核,256M内存,Ubuntu系统,军哥的Lnmp
1.充分利用多核
修改Nginx的配置文件,默认是没有被配置的,文件位置在/usr/local/nginx/conf/nginx.conf
worker_processes 2; worker_cpu_affinity 01 10; worker_processes :有多少核就填几了 worker_cpu_affinity : 同上,这里我是2核所以就是 01 10,如果是4核 worker_processes 4; worker_cpu_affinity 0001 0010 0100 1000;(第一个进程对应的CPU核心,第二个,第三个&amp;hellip;)
顺序要搞清楚
填到 user www www;下面就好,如上图
2.安装eAccelerator
lnmp安装目录默认有带的
直接进入LNMP安装目录输入
./eaccelerator.sh 接下来会提示安装的版本,输入new 然后等等就装好了
再找到php的配置文件/usr/local/php/etc/php.ini
拉到这下面有eaccelerator针对PHP的配置文件,这是我的配置
[eaccelerator] zend_extension=&amp;quot;/usr/local/php/lib/php/extensions/no-debug-non-zts-20060613/eaccelerator.so&amp;quot; eaccelerator.shm_size=&amp;quot;16&amp;quot; eaccelerator.cache_dir=&amp;quot;/usr/local/eaccelerator_cache&amp;quot; eaccelerator.enable=&amp;quot;1&amp;quot; eaccelerator.optimizer=&amp;quot;1&amp;quot; eaccelerator.check_mtime=&amp;quot;1&amp;quot; eaccelerator.debug=&amp;quot;0&amp;quot; eaccelerator.filter=&amp;quot;&amp;quot; eaccelerator.shm_max=&amp;quot;0&amp;quot; eaccelerator.shm_ttl=&amp;quot;3600&amp;quot; eaccelerator.shm_prune_period=&amp;quot;3600&amp;quot; eaccelerator.shm_only=&amp;quot;0&amp;quot; eaccelerator.compress=&amp;quot;1&amp;quot; eaccelerator.compress_level=&amp;quot;9&amp;quot; eaccelerator.keys = &amp;quot;disk_only&amp;quot; eaccelerator.sessions = &amp;quot;disk_only&amp;quot; eaccelerator.content = &amp;quot;disk_only&amp;quot; 主要就是eaccelerator.</description><content type="html"><![CDATA[<p>之前的服务商跑路了,2个站 一个博客和一个论坛 没备份 懒 .直到现在才后悔莫及 备份是1年前的,悲剧了 换了个VR的San Jose机房速度还可以 256M的内存然后把1年前的备份放上去了,用了几天空闲内存总是剩个1-2十M 有些担心,网上查了查 于是决定还是优化下</p>
<p>我现在的系统配置是:</p>
<p>双核,256M内存,Ubuntu系统,军哥的Lnmp</p>
<p>1.充分利用多核</p>
<p>修改Nginx的配置文件,默认是没有被配置的,文件位置在/usr/local/nginx/conf/nginx.conf</p>
<pre><code>worker_processes 2;


worker_cpu_affinity 01 10;
worker_processes :有多少核就填几了

worker_cpu_affinity : 同上,这里我是2核所以就是 01 10,如果是4核
worker_processes 4;
</code></pre><p>worker_cpu_affinity 0001 0010 0100 1000;(第一个进程对应的CPU核心,第二个,第三个&hellip;)
<a href="/images/2013/03/nginx.jpg"><img src="/images/2013/03/nginx-150x150.jpg" alt="nginx"></a></p>
<p>顺序要搞清楚<a href="/images/2013/03/nginx.jpg">
</a></p>
<p>填到 user www www;下面就好,如上图</p>
<p>2.安装eAccelerator</p>
<p>lnmp安装目录默认有带的</p>
<p>直接进入LNMP安装目录输入</p>
<pre><code>./eaccelerator.sh
</code></pre><p>接下来会提示安装的版本,输入new 然后等等就装好了</p>
<p>再找到php的配置文件/usr/local/php/etc/php.ini</p>
<p>拉到这下面有eaccelerator针对PHP的配置文件,这是我的配置</p>
<pre><code>[eaccelerator]

zend_extension=&quot;/usr/local/php/lib/php/extensions/no-debug-non-zts-20060613/eaccelerator.so&quot;

eaccelerator.shm_size=&quot;16&quot;

eaccelerator.cache_dir=&quot;/usr/local/eaccelerator_cache&quot;

eaccelerator.enable=&quot;1&quot;

eaccelerator.optimizer=&quot;1&quot;

eaccelerator.check_mtime=&quot;1&quot;

eaccelerator.debug=&quot;0&quot;

eaccelerator.filter=&quot;&quot;

eaccelerator.shm_max=&quot;0&quot;

eaccelerator.shm_ttl=&quot;3600&quot;

eaccelerator.shm_prune_period=&quot;3600&quot;

eaccelerator.shm_only=&quot;0&quot;

eaccelerator.compress=&quot;1&quot;

eaccelerator.compress_level=&quot;9&quot;

eaccelerator.keys = &quot;disk_only&quot;

eaccelerator.sessions = &quot;disk_only&quot;

eaccelerator.content = &quot;disk_only&quot;
</code></pre><p>主要就是eaccelerator.shm_size 这个参数了,就是eaccelerator用来缓存的内存大小,我只有256就给小点了,</p>
<p>完了记得要重启lnmp</p>
<p>3.给Wordpress安装Wp-super-cache</p>
<p>装完给启用就差不多了</p>
<p><a href="/images/2013/03/Wp-super-cache.jpg"><img src="/images/2013/03/Wp-super-cache-300x195.jpg" alt="Wp-super-cache"></a></p>
]]></content></item><item><title>伍佰 - 世界第一等</title><link>https://painso.com/posts/share/2012/wubai/</link><pubDate>Sun, 02 Sep 2012 12:15:17 +0000</pubDate><guid>https://painso.com/posts/share/2012/wubai/</guid><description>感觉比刘德华唱的好听 (:Q</description><content type="html"><![CDATA[<p><a href="http://www.youtube.com/watch?v=jPu3u8kfxCw" title=""><img src="http://img.youtube.com/vi/jPu3u8kfxCw/0.jpg" alt=""></a></p>
<p>感觉比刘德华唱的好听 (:Q</p>
]]></content></item><item><title>Linux ssh端口更改。</title><link>https://painso.com/posts/tech/2012/linux-ssh-port-change/</link><pubDate>Sun, 02 Sep 2012 12:12:15 +0000</pubDate><guid>https://painso.com/posts/tech/2012/linux-ssh-port-change/</guid><description>&lt;p>为了防止一些蛋疼的人暴力破解SSH密码啥啥的，还是建议大家把SSH端口改一下：&lt;/p>
&lt;p>vi /etc/ssh/sshd_config&lt;/p></description><content type="html"><![CDATA[<p>为了防止一些蛋疼的人暴力破解SSH密码啥啥的，还是建议大家把SSH端口改一下：</p>
<p>vi /etc/ssh/sshd_config</p>
<p><a href="/images/2012/09/ssh.jpg"><img src="/images/2012/09/ssh-300x217.jpg" alt="" title="ssh"></a></p>
<p>图中port 22就是了可以把22修改成自己想要的端口，完了之后重启一下就O了。</p>]]></content></item><item><title>玩转DNSPOD-自定义使用节点DNS</title><link>https://painso.com/posts/play/2012/play-dnspod-for-fun/</link><pubDate>Thu, 19 Apr 2012 03:24:29 +0000</pubDate><guid>https://painso.com/posts/play/2012/play-dnspod-for-fun/</guid><description>由于历史悠久，此篇文章图片已丢失:( 人生在于折腾，不折腾会蛋疼，这是一篇比较蛋疼的文章，如果你也和我一样蛋疼那就看看吧，目的是把DNSPOD的DNS服务器绑定，在别人看来看似是自己的DNS服务器，首先看看效果吧，我的域名已经使用了快一个多月了没问题
如图：Whois信息和nsookup看到的都是自己定义的DNS域名，下面开始具体的操作吧。
首先在DNSPOD把自己需要的记录值都添加好之后会提示把你的域名DNS更改到F1G1NS1.DNSPOD.NET和F1G1NS2.DNSPOD.NET，不用理会，大部分免费的DNS都是即使没有把域名DNS指过去当你添加完记录的时候已经把你的域名信息和纪录值都添加到它的DNS服务器里面了，下面获取一下DNSPOD的2个DNS域名的所有服务器IP，在BGP.HE.NET上查询
如图：我们已经得到2个域名下的DNS服务器IP分别是
F1G1NS1.DNSPOD.NET：119.167.195.6, 183.60.52.217, 180.153.10.150, 122.225.217.192 F1G1NS2.DNSPOD.NET：112.90.143.29, 180.153.10.151, 122.225.217.191, 180.153.162.150 上面的IP随便选择哪个都行，因为我们域名的纪录值信息都已经全部分发写入上去了，我的域名是在GODADDY注册的，去后台添加一下（这里注意一下GODADDY里添加DNS直接用A记录解析的方式是不行的，会提示Nameserver not registered.），登陆账号
选择你要设置为DNS服务器的域名，点击launch进入控制面板，在下方会有个Host Summary点击add
输入DNS二级域名，下方填写刚刚获取DNSPOD的服务器IP，一个二级域名绑定1个IP也行多个也行，随便自己啦，完了之后点击OK，再把自己的域名DNS设置成自己刚刚添加的域名，如图我的是ns1.nilaozi.com，设置好之后再回来DNSPOD控制面板
把f1g1ns1.dnspod.net和f1g1ns2.dnspod.net删掉添加新的NS纪录把自己的填上去，以后修改纪录值什么的还是在DNSPOD里面，至于提示域名DNS还未修改直接无视就可以了，此方法不仅应用于DNSPOD，我想其他免费DNS应该都一样的，差不多就是这个样子了。</description><content type="html"><![CDATA[<ul>
<li>由于历史悠久，此篇文章图片已丢失:(</li>
</ul>
<hr>
<p>人生在于折腾，不折腾会蛋疼，这是一篇比较蛋疼的文章，如果你也和我一样蛋疼那就看看吧，目的是把DNSPOD的DNS服务器绑定，在别人看来看似是自己的DNS服务器，首先看看效果吧，我的域名已经使用了快一个多月了没问题</p>
<p>如图：Whois信息和nsookup看到的都是自己定义的DNS域名，下面开始具体的操作吧。</p>
<p>首先在DNSPOD把自己需要的记录值都添加好之后会提示把你的域名DNS更改到F1G1NS1.DNSPOD.NET和F1G1NS2.DNSPOD.NET，不用理会，大部分免费的DNS都是即使没有把域名DNS指过去当你添加完记录的时候已经把你的域名信息和纪录值都添加到它的DNS服务器里面了，下面获取一下DNSPOD的2个DNS域名的所有服务器IP，在BGP.HE.NET上查询</p>
<p>如图：我们已经得到2个域名下的DNS服务器IP分别是</p>
<pre><code>F1G1NS1.DNSPOD.NET：119.167.195.6, 183.60.52.217, 180.153.10.150, 122.225.217.192
F1G1NS2.DNSPOD.NET：112.90.143.29, 180.153.10.151, 122.225.217.191, 180.153.162.150
</code></pre><p>上面的IP随便选择哪个都行，因为我们域名的纪录值信息都已经全部分发写入上去了，我的域名是在GODADDY注册的，去后台添加一下（这里注意一下GODADDY里添加DNS直接用A记录解析的方式是不行的，会提示Nameserver not registered.），登陆账号</p>
<p>选择你要设置为DNS服务器的域名，点击launch进入控制面板，在下方会有个Host Summary点击add</p>
<p>输入DNS二级域名，下方填写刚刚获取DNSPOD的服务器IP，一个二级域名绑定1个IP也行多个也行，随便自己啦，完了之后点击OK，再把自己的域名DNS设置成自己刚刚添加的域名，如图我的是ns1.nilaozi.com，设置好之后再回来DNSPOD控制面板</p>
<p>把f1g1ns1.dnspod.net和f1g1ns2.dnspod.net删掉添加新的NS纪录把自己的填上去，以后修改纪录值什么的还是在DNSPOD里面，至于提示域名DNS还未修改直接无视就可以了，此方法不仅应用于DNSPOD，我想其他免费DNS应该都一样的，差不多就是这个样子了。</p>
]]></content></item><item><title>科学使用GAE(Google App Engine)+谷歌浏览器搭建代理上网。</title><link>https://painso.com/posts/tech/2012/gae-proxy-browser/</link><pubDate>Sat, 24 Mar 2012 04:56:49 +0000</pubDate><guid>https://painso.com/posts/tech/2012/gae-proxy-browser/</guid><description>大家都知道在CN有个GFW，它会屏蔽掉一些他们认为“不合适”的网站，怎么越过这道墙呢？为了上个Twitter还要天天去找免费VPN/代理，找的你蛋碎，还不如自己搞一个自己用，进入正题吧。
首先打开appengine.google.com，有谷歌账户的可以直接登录(不推荐在appengine.google.com下用别的邮箱注册，否则你会蛋疼的)，没有则在gmail.com注册一个邮箱，到时候就在appengine.google.com输入你的GMAIL邮箱账户密码登录，我就在现在已经新注册了一个账户，在appengine.google.com登录 登录后会出现下面的页面
点击 Create Application (创建应用)会出现下面的页面
第一项选择Other，第二项输入手机号码获取验证码，如+8613888888888输入完成之后点击Send发送验证码到手机，不久会收到GAE发来的短信，把验证码输入以下激活即可正式开始使用GAE，初次登陆会出现下面的页面
红色部分是我之前创建的，新账号是没有的，点击Create Application。会出现下面的页面
1、应用名称(填写英文字母)
2、应用描述，建议和名称一样
3、创建应用OK
完成之后会显示在应用列表里，可以返回appengine.google.com查看的到
下面就开始给GAE空间安装代理程序啦。
这里下载：(集成Proxy SwitchySharp和配置文件)
这里首先把这2个程序都下载过来，解压Server端文件运行uploader.bat
1、输入刚刚在APPENGINE创建应用时填写的APP ID
2、输入GMAIL账号
3、输入GMAIL密码回车等待上传完毕会提示完成
然后解压Local文件，鼠标选中SwitchySharp-0.9-beta-r37.crx拖到谷歌浏览器中，下方会出现
点击继续、安装好后会出现以下页面
选择导入导出项、从文件恢复、选择SwitchyOptions.bak即可
然后修改Local里的proxy.ini文件
修改以下appid = goagent ，goagent 修改成你自己的GAE ID
然后运行goagent.exe即可开启代理了，需要上代理的时候点击谷歌浏览器右上角的球
1、不使用代理连接
2、开启代理模式
再说明一下，第一次上传了Server端程序后就不用再传了，下次在别的地方上网只需要下载Local程序就OK了
PS：有了GAE Twitter、Facebook、youtube神马都是浮云</description><content type="html"><![CDATA[<p>大家都知道在CN有个GFW，它会屏蔽掉一些他们认为“不合适”的网站，怎么越过这道墙呢？为了上个Twitter还要天天去找免费VPN/代理，找的你蛋碎，还不如自己搞一个自己用，进入正题吧。</p>
<p>首先打开appengine.google.com，有谷歌账户的可以直接登录(不推荐在appengine.google.com下用别的邮箱注册，否则你会蛋疼的)，没有则在gmail.com注册一个邮箱，到时候就在appengine.google.com输入你的GMAIL邮箱账户密码登录，我就在现在已经新注册了一个账户，在appengine.google.com登录
登录后会出现下面的页面</p>
<p>点击 Create Application (创建应用)会出现下面的页面</p>
<p>第一项选择Other，第二项输入手机号码获取验证码，如+8613888888888输入完成之后点击Send发送验证码到手机，不久会收到GAE发来的短信，把验证码输入以下激活即可正式开始使用GAE，初次登陆会出现下面的页面</p>
<p>红色部分是我之前创建的，新账号是没有的，点击Create Application。会出现下面的页面</p>
<p>1、应用名称(填写英文字母)</p>
<p>2、应用描述，建议和名称一样</p>
<p>3、创建应用OK</p>
<p>完成之后会显示在应用列表里，可以返回appengine.google.com查看的到</p>
<p>下面就开始给GAE空间安装代理程序啦。</p>
<p>这里下载：(集成Proxy SwitchySharp和配置文件)</p>
<p>这里首先把这2个程序都下载过来，解压Server端文件运行uploader.bat</p>
<p>1、输入刚刚在APPENGINE创建应用时填写的APP ID</p>
<p>2、输入GMAIL账号</p>
<p>3、输入GMAIL密码回车等待上传完毕会提示完成</p>
<p>然后解压Local文件，鼠标选中SwitchySharp-0.9-beta-r37.crx拖到谷歌浏览器中，下方会出现</p>
<p>点击继续、安装好后会出现以下页面</p>
<p>选择导入导出项、从文件恢复、选择SwitchyOptions.bak即可</p>
<p>然后修改Local里的proxy.ini文件</p>
<p>修改以下appid = goagent   ，goagent 修改成你自己的GAE ID</p>
<p>然后运行goagent.exe即可开启代理了，需要上代理的时候点击谷歌浏览器右上角的球</p>
<p>1、不使用代理连接</p>
<p>2、开启代理模式</p>
<p>再说明一下，第一次上传了Server端程序后就不用再传了，下次在别的地方上网只需要下载Local程序就OK了</p>
<p>PS：有了GAE  Twitter、Facebook、youtube神马都是浮云</p>
]]></content></item><item><title>Nginx修改Header信息。</title><link>https://painso.com/posts/tech/2012/the-nginx-modify-header-information/</link><pubDate>Thu, 15 Mar 2012 00:58:48 +0000</pubDate><guid>https://painso.com/posts/tech/2012/the-nginx-modify-header-information/</guid><description>Header信息是访客访问你的网站时，web服务返回给客户端的一段信息，包含了网页的一些基本情况。那么为什么要修改 header信息呢？主要是为了防止被居心不良的人利用来获取漏洞信息，例如：通过最最简单的获取Header信息发现你的web服务器版本是 nginx/1.0.13，现在又已知这个版本的nginx有某个漏洞，那么就可以利用这个漏洞来攻击你了。互联网信息更新非常快，web服务程序的更新 也是很频繁，我们很多时候由于种种原因不能及时打上补丁，对服务器安全很不利，如果修改header信息达到隐藏web服务器版本的效果，就可以在某种程 度上消除一些隐患。 首先需要修改nginx.h这个文件，一般在安装目录下面的src/core/nginx.h。因为之前我装的是LNMP一键安装包，所以就在LNMP目录下的nginx-x.x.x.x下面，
vi 编辑一下nginx.h/*
Copyright (C) Igor Sysoev */ ifndef NGINX_HINCLUDED_ define NGINX_HINCLUDED_ define nginx_version 1000010 define NGINX_VERSION &amp;quot;1.0.0.1&amp;quot; define NGINX_VER &amp;quot;nginx/&amp;quot; NGINX_VERSION define NGINX_VAR &amp;quot;NGINX&amp;quot; define NGX_OLDPID_EXT &amp;quot;.oldbin&amp;quot; endif /* NGINX_HINCLUDED_ */ 只需要修改
define NGINX_VERSION 对应的版本值，不填的话留空 如&amp;rdquo;&amp;rdquo;
define NGINX_VER &amp;quot;nginx/&amp;quot; NGINX_VERSION  在这里&amp;quot;nginx/&amp;rdquo; nginx/修改成你想显示的Server信息 /看不填，看个人需求。
编辑好以后回到NGINX安装目录下面输入：
./configure --user=www --group=www --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module --with-ipv6 再输入
make
编译完成后的NGINX文件在 objs文件夹下，先备份一下原来的
cp /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.bak 把新的NGINX文件复制过去，需先停止NGINX服务哦：service nginx stop cp objs/nginx /usr/local/nginx/sbin/ service nginx start</description><content type="html"><![CDATA[<blockquote>
<p>Header信息是访客访问你的网站时，web服务返回给客户端的一段信息，包含了网页的一些基本情况。那么为什么要修改 header信息呢？主要是为了防止被居心不良的人利用来获取漏洞信息，例如：通过最最简单的获取Header信息发现你的web服务器版本是 nginx/1.0.13，现在又已知这个版本的nginx有某个漏洞，那么就可以利用这个漏洞来攻击你了。互联网信息更新非常快，web服务程序的更新 也是很频繁，我们很多时候由于种种原因不能及时打上补丁，对服务器安全很不利，如果修改header信息达到隐藏web服务器版本的效果，就可以在某种程 度上消除一些隐患。
首先需要修改nginx.h这个文件，一般在安装目录下面的src/core/nginx.h。因为之前我装的是LNMP一键安装包，所以就在LNMP目录下的nginx-x.x.x.x下面，</p>
</blockquote>
<p>vi 编辑一下nginx.h/*</p>
<pre><code>Copyright (C) Igor Sysoev

*/

ifndef NGINX_HINCLUDED_

define NGINX_HINCLUDED_

define nginx_version 1000010

define NGINX_VERSION &quot;1.0.0.1&quot;

define NGINX_VER &quot;nginx/&quot; NGINX_VERSION

define NGINX_VAR &quot;NGINX&quot;

define NGX_OLDPID_EXT &quot;.oldbin&quot;

endif /* NGINX_HINCLUDED_ */
</code></pre><p>只需要修改</p>
<p><code>define NGINX_VERSION</code> 对应的版本值，不填的话留空 如&rdquo;&rdquo;</p>
<p><code>define NGINX_VER          &quot;nginx/&quot; NGINX_VERSION </code>  在这里&quot;nginx/&rdquo;  nginx/修改成你想显示的Server信息 /看不填，看个人需求。</p>
<p>编辑好以后回到NGINX安装目录下面输入：</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">./configure --user<span class="o">=</span>www --group<span class="o">=</span>www --prefix<span class="o">=</span>/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module --with-ipv6
</code></pre></div><p>再输入</p>
<p><code>make</code></p>
<p>编译完成后的NGINX文件在 objs文件夹下，先备份一下原来的</p>
<blockquote>
<p>cp /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.bak
把新的NGINX文件复制过去，需先停止NGINX服务哦：service nginx stop
cp objs/nginx /usr/local/nginx/sbin/
service nginx start</p>
</blockquote>
<p>2013.6.13更新：</p>
<p>有些按照上方操作还是无法修改Header信息，经查看还需要修改 安装目录下的src/http/ngx_http_header_filter_module.c</p>
<p><a href="/images/2012/03/nginx-header-filter.jpg"><img src="/images/2012/03/nginx-header-filter-300x169.jpg" alt="nginx-header-filter"></a></p>
<p>如图，按照自己的喜好修改即可，这样设置完毕后发现出现默认Nginx 404页面时底部还是会显示nginx相关的信息，原因为nginx.conf里的server_tokens关闭，编辑nginx.conf找到server_tokens = off;将off改为on即可</p>
<p>大功告成。</p>
<p><a href="/images/2012/03/nginx.jpg"><img src="/images/2012/03/nginx-300x110.jpg" alt="nginx"></a></p>
]]></content></item><item><title>自定义使用Incapsula的CDN节点。</title><link>https://painso.com/posts/tech/2012/custom-incapsula-cdn-nodes/</link><pubDate>Sat, 03 Mar 2012 18:29:20 +0000</pubDate><guid>https://painso.com/posts/tech/2012/custom-incapsula-cdn-nodes/</guid><description>由于历史悠久，本篇文章图片已失效
在Incapsula添加好站点后一般都会给你一个CNAME让你解析过去，但是我的DZ论坛用它默认的解析效果并不是很理想，有时候解析到美国速度就没啥差别了，还不如按照自己的意愿来设置 (:O
方法如下：
首先确定你需要使用哪个节点，多个不同地段的节点也OK的，在just-ping.com上ping一下www.incapsula.com 得到它的各个节点的IP地址。
当然日本节点到国内是最快的了，这里就哪日本节点演示，日本节点IP是103开头 我这里找到一个
103.28.249.100
找到以后就到DNS设置里面把原来的CNAME指向换成A记录把IP填上去
可以填写多个哦，以防不测 (:F
再告诉大家一个小窍门，为了防止和其他站点公用这个103.28.249.100节点可以把它换成103.28.249.119或者其他，只要在浏览器上打开是下面这个页面就证明是Incapsula的节点服务器可以解析，这样就可以避免被Q掉。
2012.3.28更新：
经测试大家使用日本节点时尽量使用103.28.249.1-100 的段，200以上的我测试过不行了
2012.7.29更新：
Incapsula日本节点IP段更新从103.28.249.1-255 更改为103.28.248.1-255</description><content type="html"><![CDATA[<p>由于历史悠久，本篇文章图片已失效</p>
<hr>
<p>在Incapsula添加好站点后一般都会给你一个CNAME让你解析过去，但是我的DZ论坛用它默认的解析效果并不是很理想，有时候解析到美国速度就没啥差别了，还不如按照自己的意愿来设置 (:O</p>
<p>方法如下：</p>
<p>首先确定你需要使用哪个节点，多个不同地段的节点也OK的，在just-ping.com上ping一下www.incapsula.com 得到它的各个节点的IP地址。</p>
<p>当然日本节点到国内是最快的了，这里就哪日本节点演示，日本节点IP是103开头 我这里找到一个</p>
<p><code>103.28.249.100</code></p>
<p>找到以后就到DNS设置里面把原来的CNAME指向换成A记录把IP填上去</p>
<p>可以填写多个哦，以防不测 (:F</p>
<p>再告诉大家一个小窍门，为了防止和其他站点公用这个<code>103.28.249.100</code>节点可以把它换成<code>103.28.249.119</code>或者其他，只要在浏览器上打开是下面这个页面就证明是Incapsula的节点服务器可以解析，这样就可以避免被Q掉。</p>
<p>2012.3.28更新：</p>
<p>经测试大家使用日本节点时尽量使用<code>103.28.249.1-100</code> 的段，200以上的我测试过不行了</p>
<p>2012.7.29更新：</p>
<p>Incapsula日本节点IP段更新从<code>103.28.249.1-255</code> 更改为<code>103.28.248.1-255</code></p>
]]></content></item><item><title>解决MYSQL不能远程访问。</title><link>https://painso.com/posts/tech/2012/solve-mysql-can-not-remote-access/</link><pubDate>Tue, 28 Feb 2012 16:54:23 +0000</pubDate><guid>https://painso.com/posts/tech/2012/solve-mysql-can-not-remote-access/</guid><description>最近在网上找了个免费网站备份的网站，Dropmysite.com 提供2.3个G的备份空间，提供网站数据、数据库数据以及邮箱数据的自动备份，可按月，周，日，时为单位来备份，很方便，但是在用到MYSQL备份的时候老是提示不能访问远程数据库，网上找了一下资料，经实践 最简单的方法就是在PHPMYADMIN后台改一下数据表，应为我的是lnmp的环境默认带phpmysql这个网页数据库管理的功能 ，打开PHPMYADMIN后台登陆，选择mysql数据库里面最下面的user数据表，把第一行的localhost改成%即可。
这个dropmysite.com不错哟，有兴趣的朋友可以试试。</description><content type="html"><![CDATA[<p>最近在网上找了个免费网站备份的网站，Dropmysite.com 提供2.3个G的备份空间，提供网站数据、数据库数据以及邮箱数据的自动备份，可按月，周，日，时为单位来备份，很方便，但是在用到MYSQL备份的时候老是提示不能访问远程数据库，网上找了一下资料，经实践 最简单的方法就是在PHPMYADMIN后台改一下数据表，应为我的是lnmp的环境默认带phpmysql这个网页数据库管理的功能 ，打开PHPMYADMIN后台登陆，选择mysql数据库里面最下面的user数据表，把第一行的localhost改成%即可。</p>
<p><a href="/images/2012/02/mysql.jpg"><img src="/images/2012/02/mysql.jpg" alt=""></a></p>
<p><a href="/images/2012/02/mysql-300x114.jpg"><img src="/images/2012/02/mysql-300x114.jpg" alt="" title="解决MYSQL不能远程访问。"></a></p>
<p>这个dropmysite.com不错哟，有兴趣的朋友可以试试。</p>
<p><a href="/images/2012/02/dropmysite.jpg"><img src="/images/2012/02/dropmysite-300x102.jpg" alt="" title="dropmysite"></a></p>
]]></content></item><item><title>Ubuntu永久禁止Ping。</title><link>https://painso.com/posts/tech/2012/ubuntu-deny-ping/</link><pubDate>Wed, 15 Feb 2012 21:48:03 +0000</pubDate><guid>https://painso.com/posts/tech/2012/ubuntu-deny-ping/</guid><description>echo 1 &amp;gt; /proc/sys/net/ipv4/icmp_echo_ignore_all 添加上面的规则到启动脚本rc.local vi /etc/rc.local
保存后重启之后也会生效。</description><content type="html"><![CDATA[<ol>
<li><code>echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all</code></li>
<li>添加上面的规则到启动脚本rc.local</li>
</ol>
<p><code>vi /etc/rc.local</code></p>
<p>保存后重启之后也会生效。</p>
]]></content></item><item><title>Ubuntu永久修改主机名称。</title><link>https://painso.com/posts/tech/2012/ubuntu-permanently-modify-the-host-name/</link><pubDate>Wed, 15 Feb 2012 21:34:20 +0000</pubDate><guid>https://painso.com/posts/tech/2012/ubuntu-permanently-modify-the-host-name/</guid><description>&lt;ul>
&lt;li>修改etc下的hostname文件&lt;/li>
&lt;/ul>
&lt;p>&lt;code>vi /etc/hostname&lt;/code>&lt;/p>
&lt;p>a,第一行输入你的主机名称&lt;/p>
&lt;p>&lt;code>esc ,: ,x,&lt;/code>回车保存&lt;/p></description><content type="html"><![CDATA[<ul>
<li>修改etc下的hostname文件</li>
</ul>
<p><code>vi /etc/hostname</code></p>
<p>a,第一行输入你的主机名称</p>
<p><code>esc ,: ,x,</code>回车保存</p>
<ul>
<li><code> vi /etc/hosts</code></li>
</ul>
<p>第一行的 <code>localhost.localdomain    localhost</code></p>
<p>修改成 如<code> www.baidu     baidu</code></p>
<p>经实践，第二步可以忽略 (:E</p>]]></content></item><item><title>Wordpress修改评论者链接结构</title><link>https://painso.com/posts/tech/2012/wordpress-modify-the-link-structure-of-the-reviewers/</link><pubDate>Tue, 14 Feb 2012 10:30:47 +0000</pubDate><guid>https://painso.com/posts/tech/2012/wordpress-modify-the-link-structure-of-the-reviewers/</guid><description>&lt;blockquote>
&lt;p>nofollow标签的算法变更和百度对该标签的不认可，导致wordpress评论区域最好也据此来做相应的调整。使用robots.txt对自身地址进行屏蔽，从而规避非法链接对自身权重的影响。
1、打开wp-includes文件夹下的comment-template.php文件&lt;/p>
&lt;/blockquote></description><content type="html"><![CDATA[<blockquote>
<p>nofollow标签的算法变更和百度对该标签的不认可，导致wordpress评论区域最好也据此来做相应的调整。使用robots.txt对自身地址进行屏蔽，从而规避非法链接对自身权重的影响。
1、打开wp-includes文件夹下的comment-template.php文件</p>
</blockquote>
<blockquote>
<p>2、找到$return = “&lt;a href=’$url’ rel=’external nofollow’ class=’url’&gt;$author&lt;/a&gt;”;语句，大约在154行（Notepad2中查看）
3、链接修改为$return = “&lt;a href=’jump.php?$url’ rel=’external nofollow’ class=’url’&gt;$author&lt;/a&gt;”;</p>
</blockquote>
<p>这里的jump.php名字可以根据自己需求更改。
4、替换上传</p>
<p>jump.php代码：</p>
<p>Apache:</p>
<div class="highlight"><pre class="chroma"><code class="language-php" data-lang="php"><span class="cp">&lt;?php</span><span class="o">&gt;</span> 
<span class="nx">header</span><span class="p">(</span><span class="s2">&#34;location: &#34;</span><span class="o">.</span><span class="nv">$_SERVER</span><span class="p">[</span><span class="s1">&#39;REDIRECT_QUERY_STRING&#39;</span><span class="p">]);</span><span class="o">&gt;</span> 
<span class="cp">?&gt;</span>
</code></pre></div><p>Nginx:</p>
<div class="highlight"><pre class="chroma"><code class="language-php" data-lang="php"><span class="cp">&lt;?php</span><span class="o">&gt;</span> 
<span class="nx">header</span><span class="p">(</span><span class="s2">&#34;location: &#34;</span><span class="o">.</span><span class="nv">$_SERVER</span><span class="p">[</span><span class="s1">&#39;QUERY_STRING&#39;</span><span class="p">]);</span><span class="o">&gt;</span> 
<span class="cp">?&gt;</span>
</code></pre></div><p>保存成刚刚修改的comment-template.php里的名字上传至根目录
多谢Lite3指教。
robots.txt添加</p>
<!-- raw HTML omitted -->]]></content></item><item><title>Linux拒绝单个IP地址访问。</title><link>https://painso.com/posts/tech/2012/linux-refused-access-to-a-single-ip-address/</link><pubDate>Sun, 12 Feb 2012 22:05:51 +0000</pubDate><guid>https://painso.com/posts/tech/2012/linux-refused-access-to-a-single-ip-address/</guid><description>&lt;p>从博客开始就一直有垃圾评论，点开看看发现大部分都是一个IP地址的，在Ubuntu添加一条规则拒绝垃圾评论的IP这样它的IP就无法访问啦 (:O&lt;/p>
&lt;p>屏蔽单个IP：&lt;/p>
&lt;p>&lt;code>iptables -A INPUT -p tcp -s ip地址 -j DROP&lt;/code>&lt;/p>
&lt;p>-A是添加一条新规则add缩写我想是，INPUT 进 ，-p 协议 是 tcp 网站80端口就是tcp，-s - source 源IP ，-j DROP 拒绝的意思吧 呵呵。&lt;/p></description><content type="html"><![CDATA[<p>从博客开始就一直有垃圾评论，点开看看发现大部分都是一个IP地址的，在Ubuntu添加一条规则拒绝垃圾评论的IP这样它的IP就无法访问啦 (:O</p>
<p>屏蔽单个IP：</p>
<p><code>iptables -A INPUT -p tcp -s ip地址 -j DROP</code></p>
<p>-A是添加一条新规则add缩写我想是，INPUT 进 ，-p 协议 是 tcp 网站80端口就是tcp，-s - source 源IP ，-j DROP 拒绝的意思吧 呵呵。</p>
<p>例子：拒绝192.168.1.1 ip访问</p>
<p><code>iptables -A INPUT -p tcp -s 192.168.1.1 -j DROP</code></p>
<p>######封整个段即从192.0.0.1到192.255.255.254的命令
<code>iptables -I INPUT -s 192.0.0.0/8 -j DROP</code></p>
<p>######封IP段即从192.45.0.1到192.45.255.254的命令
<code>iptables -I INPUT -s 124.45.0.0/16 -j DROP</code></p>
<p>######封IP段即从192.45.6.1到192.45.6.254的命令
<code>iptables -I INPUT -s 192.45.6.0/24 -j DROP</code></p>
<p>注意如命令错误注意大小写。</p>
<p>删除iptables规则：</p>
<p>先查看规则编号</p>
<p><code>iptables -L -n --line-number</code></p>
<p><a href="/images/2012/02/1.jpg"><img src="/images/2012/02/1-300x96.jpg" alt="" title="Linux拒绝单个IP地址访问。"></a></p>
<p>如图，我的DROP规则是1，</p>
<p>输入<code>iptables -D INPUT 1</code></p>
<p><a href="/images/2012/02/21.jpg"><img src="/images/2012/02/21-300x101.jpg" alt="" title="Linux拒绝单个IP地址访问。"></a></p>
<p>已经删除了，iptables规则重启后会失效</p>
<p>编辑/etc/rc.local</p>
<p>添加协议</p>
<p><code>iptables -A INPUT -p tcp -s 8.8.8.8 -j DROP</code></p>
<p><a href="http://img.painso.com/image/5052-iptables.jpg"><img src="http://img.painso.com/image/5052-iptables.jpg" alt="" title="Linux拒绝单个IP地址访问"></a></p>]]></content></item><item><title>不开代理上谷歌。</title><link>https://painso.com/posts/tech/2012/do-not-open-proxy-on-google/</link><pubDate>Tue, 07 Feb 2012 22:44:13 +0000</pubDate><guid>https://painso.com/posts/tech/2012/do-not-open-proxy-on-google/</guid><description>国内的www.google.com.hk虽然一般情况下都可以打开，但是搜索了几下就无法打开了，不知道可能是搜索了不和谐内容还是什么的
方法比较简单，上不了的时候就
ping一下 gmail.com
C:\WINDOWS&amp;gt;ping gmail.com Pinging gmail.com [74.125.71.18] with 32 bytes of data: Reply from 74.125.71.18: bytes=32 time=49ms TTL=50 Reply from 74.125.71.18: bytes=32 time=46ms TTL=50 取74.125.71.18直接在浏览器输入 - 回车
ping 谷歌其他站点也是可以的呵呵
C:\WINDOWS&amp;gt;ping code.google.com Pinging code.l.google.com [74.125.71.101] with 32 bytes of data: Reply from 74.125.71.101: bytes=32 time=48ms TTL=50 Reply from 74.125.71.101: bytes=32 time=44ms TTL=50</description><content type="html"><![CDATA[<p>国内的www.google.com.hk虽然一般情况下都可以打开，但是搜索了几下就无法打开了，不知道可能是搜索了不和谐内容还是什么的</p>
<p>方法比较简单，上不了的时候就</p>
<p>ping一下 gmail.com</p>
<pre><code>C:\WINDOWS&gt;ping gmail.com

Pinging gmail.com [74.125.71.18] with 32 bytes of data:

Reply from 74.125.71.18: bytes=32 time=49ms TTL=50
Reply from 74.125.71.18: bytes=32 time=46ms TTL=50
</code></pre><p>取74.125.71.18直接在浏览器输入 - 回车</p>
<p>ping 谷歌其他站点也是可以的呵呵</p>
<pre><code>C:\WINDOWS&gt;ping code.google.com

Pinging code.l.google.com [74.125.71.101] with 32 bytes of data:

Reply from 74.125.71.101: bytes=32 time=48ms TTL=50
Reply from 74.125.71.101: bytes=32 time=44ms TTL=50
</code></pre>]]></content></item><item><title>DNSPOD+Incapsula CDN实现文件国内用户可下载Dropbox文件以及外链</title><link>https://painso.com/posts/tech/2012/dropbox-dnspod-incapsula-cdn-file-domestic-users-can-download-the-dropbox-file/</link><pubDate>Sun, 05 Feb 2012 23:07:54 +0000</pubDate><guid>https://painso.com/posts/tech/2012/dropbox-dnspod-incapsula-cdn-file-domestic-users-can-download-the-dropbox-file/</guid><description>&lt;p>大家现在都知道Dropbox国内用户无法下载dl.dropbox.com/xxx.xxx 这样以及 dl-web.dropbox.com/xxx.xxx 的文件&lt;/p>
&lt;p>现在即可通过Dropbox+DNSPOD+Incapsula实现下载咯&lt;/p></description><content type="html"><![CDATA[<p>大家现在都知道Dropbox国内用户无法下载dl.dropbox.com/xxx.xxx 这样以及 dl-web.dropbox.com/xxx.xxx 的文件</p>
<p>现在即可通过Dropbox+DNSPOD+Incapsula实现下载咯</p>
<p>第一步在DNSPOD添加CNAME解析到dl.dropbox.com</p>
<p>我的是解析了dl.dropbox.com的几个节点IP</p>
<p>都一样的啦，然后进入Incapsula.com注册一个账号</p>
<p>注册过程就不说了，直接添加</p>
<p>这里以www.baidu.com为示例，点下一步next，等待一段时间后会提示你继续的，一直点Continue就是啦</p>
<p>点击继续</p>
<p>继续</p>
<p>完了之后会给出叫你解析到他的地址，如我刚刚添加的百度.com的是 eh939.x.incapdns.net 把给你的地址复制下来回到dnspod把刚刚解析到dl.dropbox.com的记录值dl.dropbox.com替换成eh939.x.incapdns.net</p>
<p>然后修改一下Dropbox给出的下载地址，默认是http://dl.dropbox.com/u/6767676/Photo/testimg.jpg</p>
<p>修改成http://你的域名/u/6767676/Photo/testimg.jpg</p>]]></content></item><item><title>Ubuntu下安装vsftpd</title><link>https://painso.com/posts/tech/2012/ubuntu-install-vsftpd/</link><pubDate>Sun, 05 Feb 2012 05:07:54 +0000</pubDate><guid>https://painso.com/posts/tech/2012/ubuntu-install-vsftpd/</guid><description>装了lnmp后FTP管理装的是pureftpd，后来感觉不好用，后台管理那里用户的UID和GID搞不懂，登陆上权限也不够，后来安装了lnmp自带的vsftpd好像也不能用，还是不用它的吧，
先卸载。
cd / (切换根目录) 停止pureftpd进程，运行命令： /root/pureftpd stop 删除文件，运行命令： rm -rf /usr/local/pureftpd rm -rf /home/wwwroot/ftp （管理程序的位置，请根据实际情况设置） rm /root/pureftpd 安装vsftpd
sudo apt-get install vsftpd 这个命令的确可以安装，但是搞不懂 有的这个可以用，有的就不行
我84的VPS执行这个命令返回的就是
root@272929:~# sudo apt-get install vsftpd Reading package lists... Done Building dependency tree... Done E: Couldn't find package vsftpd root@272929:~# 安装好以后配置一下
可以vi etc/vsftpd.conf 进行编辑也可以用winscp
#独立运行 listen=YES&amp;gt; #是否启用匿名访问 anonymous_enable=no #本地用户登录 local_enable=YES #FTP目录 local_root=/soft #访问端口 listen_port=21 #下面3段是后来加的，解决了本地用户不能登录的问题 #好像是vsftpd首先要检测拒绝的账号列表，如果没有这个列表就会全部认为是拒绝的 chroot_local_user=YES userlist_enable=YES userlist_deny=YES #允许本地用户写入和删除 write_enable=YES dirmessage_enable=YES use_localtime=YES xferlog_enable=YES connect_from_port_20=no secure_chroot_dir=/var/run/vsftpd/empty pam_service_name=ftp rsa_cert_file=/etc/ssl/private/vsftpd.</description><content type="html"><![CDATA[<p>装了lnmp后FTP管理装的是pureftpd，后来感觉不好用，后台管理那里用户的UID和GID搞不懂，登陆上权限也不够，后来安装了lnmp自带的vsftpd好像也不能用，还是不用它的吧，</p>
<p>先卸载。</p>
<ol>
<li>cd / (切换根目录)</li>
<li>停止pureftpd进程，运行命令： /root/pureftpd stop</li>
<li>删除文件，运行命令：</li>
</ol>
<pre><code>rm -rf /usr/local/pureftpd
rm -rf /home/wwwroot/ftp （管理程序的位置，请根据实际情况设置）
rm /root/pureftpd
</code></pre><p>安装vsftpd</p>
<pre><code>sudo apt-get install vsftpd
</code></pre><p>这个命令的确可以安装，但是搞不懂 有的这个可以用，有的就不行</p>
<p>我84的VPS执行这个命令返回的就是</p>
<pre><code>root@272929:~# sudo apt-get install vsftpd
Reading package lists... Done
Building dependency tree... Done
E: Couldn't find package vsftpd
root@272929:~#
</code></pre><p>安装好以后配置一下</p>
<p>可以vi etc/vsftpd.conf 进行编辑也可以用winscp</p>
<pre><code>#独立运行
listen=YES&gt;

#是否启用匿名访问
anonymous_enable=no

#本地用户登录
local_enable=YES

#FTP目录
local_root=/soft

#访问端口
listen_port=21

#下面3段是后来加的，解决了本地用户不能登录的问题
#好像是vsftpd首先要检测拒绝的账号列表，如果没有这个列表就会全部认为是拒绝的
chroot_local_user=YES
userlist_enable=YES
userlist_deny=YES
#允许本地用户写入和删除
write_enable=YES
dirmessage_enable=YES
use_localtime=YES
xferlog_enable=YES
connect_from_port_20=no
secure_chroot_dir=/var/run/vsftpd/empty
pam_service_name=ftp
rsa_cert_file=/etc/ssl/private/vsftpd.pem
</code></pre><p>将以上配置复制替换掉原etc/vsftpd.conf文件即可</p>
<p>重启vsftpd : service vsftpd restart</p>
<p>添加FTP账号</p>
<p><code>useradd -d (用户家目录) -s /sbin/nologin 用户名</code></p>
<p>如：</p>
<p><code>useradd -d /soft -s /sbin/nologin ftpuser01</code></p>
<p>设置密码：</p>
<p><code>passwd ftpuser01</code></p>
<p>重复输入2次即可</p>
<p>目录的权限要给FTP的账号</p>
<p>先修改目录的权限然后赋予FTP账号</p>
<p><code>chmod -R 775 目录</code></p>
<p><code>chown -R 用户名.用户组 目录</code></p>
<p>比如我的wordpress网站根目录作为FTP的目录，为了不让www用户对博客目录的权限发生改变，可以这样写</p>
<p><code>chown -R www.FTP用户名 /home/wwwroot</code></p>
<p>这样FTP用户可以访问上传删除，我WP博客安装插件又不用填写FTP信息</p>
<p>无法登陆FTP是因为没有添加拒绝账号列表</p>
<p>在/etc 目录下建立vsftpd.user_list 这个文件，添加拒绝登录的账号“root就可以了，一行一个</p>
<p>好了，好像差不多了，新手 如有不足之处望指教。</p>
]]></content></item><item><title>回来了。</title><link>https://painso.com/posts/thinking/2012/im-back/</link><pubDate>Wed, 01 Feb 2012 16:49:51 +0000</pubDate><guid>https://painso.com/posts/thinking/2012/im-back/</guid><description>准备上班咯，烦得很，</description><content type="html">&lt;p>准备上班咯，烦得很，&lt;/p></content></item><item><title>明天回家了！</title><link>https://painso.com/posts/thinking/2012/go-home/</link><pubDate>Mon, 16 Jan 2012 19:31:28 +0000</pubDate><guid>https://painso.com/posts/thinking/2012/go-home/</guid><description>站票，不知道挤不挤，只要能喘气就行。</description><content type="html">&lt;p>站票，不知道挤不挤，只要能喘气就行。&lt;/p></content></item><item><title>启用新域名PainSo.com</title><link>https://painso.com/posts/thinking/2012/opening-of-the-new-domain-name-painso-com/</link><pubDate>Mon, 16 Jan 2012 16:45:48 +0000</pubDate><guid>https://painso.com/posts/thinking/2012/opening-of-the-new-domain-name-painso-com/</guid><description>可等死我了，买了Godaddy的backorder过了好几个月了，天天查whois 天天查删除时间啊，这个算比较中意的域名了，以后就用这个了 友情链接的朋友看到麻烦请更新一下</description><content type="html">&lt;p>可等死我了，买了Godaddy的backorder过了好几个月了，天天查whois 天天查删除时间啊，这个算比较中意的域名了，以后就用这个了 友情链接的朋友看到麻烦请更新一下&lt;/p></content></item><item><title>wordpress修改默认登录用户名</title><link>https://painso.com/posts/tech/2011/wordpress-login-user-name-changes-to-the-default/</link><pubDate>Fri, 25 Nov 2011 11:25:16 +0000</pubDate><guid>https://painso.com/posts/tech/2011/wordpress-login-user-name-changes-to-the-default/</guid><description>wordpress修改默认登录用户名 首先进入你的phpadmin 之后选择你的wordpress博客的数据库  选择wp_blogserusers数据表  选择-编辑  这里大概都看懂了把，完了之后点击执行就搞定了。</description><content type="html"><![CDATA[<h1 id="wordpress修改默认登录用户名">wordpress修改默认登录用户名</h1>
<ol>
<li>首先进入你的phpadmin</li>
<li>之后选择你的wordpress博客的数据库</li>
<li> 选择wp_blogserusers数据表</li>
<li> 选择-编辑</li>
<li> 这里大概都看懂了把，完了之后点击执行就搞定了。</li>
</ol>
]]></content></item><item><title>博客终于搬家！</title><link>https://painso.com/posts/thinking/2011/blog-has-finally-moved/</link><pubDate>Thu, 24 Nov 2011 23:55:33 +0000</pubDate><guid>https://painso.com/posts/thinking/2011/blog-has-finally-moved/</guid><description>免费的还是用的不踏实啊
下次做个搬家教程。。</description><content type="html">&lt;p>免费的还是用的不踏实啊&lt;/p>
&lt;p>下次做个搬家教程。。&lt;/p></content></item><item><title>我从来不看AV</title><link>https://painso.com/posts/share/2011/i-never-see-av/</link><pubDate>Wed, 23 Nov 2011 14:57:36 +0000</pubDate><guid>https://painso.com/posts/share/2011/i-never-see-av/</guid><description>我从来不看AV 我是一个极其讨厌AV和看AV的人，我从来不看AV 像什么:原田由香, 日置由香, 前园友香, 松井友香, 中森友香, 大西结花, 立原友香, 福井裕佳梨, 萩原, 由纪, 广濑由香, 北原由纪, 木崎友纪, 工藤夕贵, 松冈由树, 西野优辉, 筱崎由纪, 庄司友希, 田崎友希（牧本千幸）, 内田有纪, 仲间由纪惠, 伊藤由贵子, 染谷由纪子, 渡边由纪子, 山口由纪子, 穴井夕子, 青木裕子, 滨野裕子, 石桥佑子, 石倭裕子, 河合佑子, 北村裕子, 纪藤裕子, 小林有子, 三轮裕子, 水岛裕子, 森山佑子, 小优子, 坂木优子, 杉村阳子, 高滨优子, 竹内结子, 足立佑美, 江川有未, 早川优美, 平井由美, 久留须留美, 中村裕美, 小野田优美, 坂井优美, 芹泽优美, 新堂有望, 寺尾友美, 林由美香, 早川由美子, 阪谷佑三子, 释由美子, 嶋由美子, 杉本由美香, 高桥由美子, 夏生优奈, 上原优奈, 麻宫淳子, 安藤有里, 小室友里, 河野友里, 三井百合, 西尾佑里, 大原佑里, 吉田由莉, 芳贺优里雅, 细川百合子, 石田百合子, 彗月优, 片桐优, 野村佑香第二份，和上面有些重复的葵あげは, 日吉亚衣, 饭岛爱, 加藤爱, 君岛爱, 黑泽爱, 水木爱, 水野爱, 长瀬爱, 冈崎爱, 立木爱, 爱叶るび, 爱田友, 三浦爱佳, 饭岛爱子, 水岛爱奈, 中里爱菜, ＡＩＲＡ, （あいら）, 松下爱来, 雨宫あいり, 河合あいり, 黒木アイリ, 岛谷爱梨, 相泽梦, 相泽唯衣, 水野茜, 赤坂ルナ, 爱叶亜希, 藤崎秋, 片#124;亚纪, 佐仓亜希, 泽宫有希, 友崎亜希, 吉泽明步, 河村亜希子, 秋元优奈, （あきら）, 友坂あきら, 渡瀬晶, 天衣, 鮎川亚美, 日向あみ, 三本亜美, （, ), 水野亜美（吉野纱莉）, 中村あみ, 西村あみ, 樱木亜美, 翔野あみ, 杉浦あみ, 铃木亚美, 山崎亜弥, 仓木杏, 三月あん, 南波杏, 松下可怜, 小仓杏, 秋月杏奈, 姬木杏奈, 香月安娜, 宫下杏奈, 泽田杏奈, 凉风杏菜, 结城杏奈, 星野杏里, みずなあんり, 青羽未来, 宫沢あおい, 青木絵里, 青木玲, 青木沙罗, 青山和希, 青山くるみ, 有川真生, 水咲ありみ, （ありさ）, 本田亚里沙, 真木亚里沙, 野宫ありす, 朝比奈ゆい, 朝美雾唯, 城麻美, 早纪麻未, 平山朝香, 神田アサカ, 朝香美穗, 朝仓まりあ, 浅仓みるく, 杏野明日香, 森村あすか, 小川明日香, 大空明日香, 阪卷明日香, 浅仓みるく, 川奈あつみ, あや, 藤木亚弥, 姫野あや, 本城彩, 神崎あや, 小泉彩, 小池亚弥, 香咲绫, 水来亜矢, 水嶋彩, 中原绫, 夏树亜矢, 音咲绚, 白石あや, 铃木あや, 藤彩香, 藤崎彩花, 星野绫香, 大石, 四季彩香, 木田彩水, 樱井彩美, 彩名杏子, 持田彩菜, あやの, 寿绫乃, 望月あやの, 紫彩乃, 真弓あゆ, 秋吉あゆみ, 一色鮎美, 岩本亚由美, 小山渉, 黒沢あゆみ, 美树亚由美, 田原步, 吉田あゆみ, 麻布レオナ, 川岛和津实, 小泽, 美, 上条あずさ, 宫永あずさ, 长野あずさ, ペクチヨン, 金泽文子, 原千晶, 岛津千秋, 青沼知朝, 松原ちえ, 観月千穂, 叶月千穗, 井上千寻, 中野千夏, 伊藤千夏（三田有穗）, 成宫智香, 上原ちか, 川村千里（三原夕香）, 绮罗ちさと, 德田千圣, 筱宫知世, （こころ）, 七海ここな, ウングレアーヌ, デヴィ, 新藤惠美, 惠美梨, 中上絵奈, 赤川絵理, 林絵里（元光月夜也）, 本城爱里, 石田★り, 菊池英里, 汤川えり, 姫宫エリカ, 上条えりか, 君原エリカ, 上原絵里香, 後藤えり子, 苍吹雪, 樱井风花, 藤木那奈, 藤森エレナ, 原史奈, 佐佐木和佳, 大叶由, 山, 一步, 春菜, 原田春奈, 春菜まい, 上村春奈, 冲遥, 小泉春香, 遥优衣, 水野春树, 叶山小姫, 芳本叶月, 来生光, 沢口ひかり, 宇美野ひかり, (), 古都光, 星野光, かわいひかる, 大石ひかる, うさだひかる, 卑弥呼, 爱川日奈, 可爱ひな, 七瀬ひな, 木村ひなの, 中山ひなの, 矢口ひなの, ひなこ, 立花ひろみ, 広瀬晴美, 爱川瞳, 青木仁美, 芦屋瞳, 藤志吕仁美, 浜ひとみ, 长谷川瞳, 早坂仁美, 星崎瞳, 池野瞳, 小林仁美（小林瞳）, 国府田ひとみ, 工藤ひとみ, 松田瞳, 森尾ひとみ, 望月瞳, 二阶堂仁美, 沢木仁美, 白石瞳, 高野ひとみ, 吉野瞳, 忧木瞳, 小春, 白石日和, 森村ハニー, 麻井帆野香, 河合ほのか, 橘ほのか, 星ありす(星), 星川ヒカル, 星野瑠海, うづきほたる, 苍吹雪, 藤城なの, 樱井风花, 冬月ひなの, 河合いいな, 饭岛ことみ, 一色志乃, 伊#124;梨花, いつか, 沙罗树, 飞鸟美, 长谷川瞳, 森川いづみ, 森野泉, 田诨美, 上原いずみ, 山田いずみ, 朝仓纯, 速水纯, 河合纯, 草风纯, 唯川纯, 朝比奈顺子, 麻宫淳子, 真山润, 岬じゅん, 桃井じゅん, 冈田纯菜, 朝比奈树里, 松坂树梨, 竹田树理, 桥本树里, 若林树里, 若月树里, 可爱あずさ, 藤崎枫, 松岛枫, 中谷カイト, 彩波花穂, 饭田夏帆, 木村果步, 藤谷かな, 坂口华奈, 藤沢かんな, 内藤花苗, 藤森加奈子, 岸加奈子, 杉森风绪, 安部かおり, （あべかおり）, 爱川香理, 藤森かおり, 速水かおり, 姫野香, (, ), 北条香理, きららかおり, 岸田香织, 森下香织, 仲谷香织, 清水香织, 筱原かおり, 盐见香织, 椿香织, 浅见薫, 持田薫, 松尾薰, 黒木香, 桜沢かおる, 梅宫かおる, 井上可奈, 山崎华奈, 榎木加奈子, 松嶋加奈子, 华歌恋, 林かれん, 笠木忍, 春日みゆき, 朝霞美, 伊藤かすみ, 美里かすみ, 大野かすみ, 片瀬まひろ, 片瀬梨音, 可爱亚织沙, 河井ゆう, （かわいゆう）, 川村りさ, （けい）, 浅见伽椰, 香山圣, 加山由衣, 小峰佳世, 园部かづは, 青山和希, 一夜かずみ, 冈本圭, 中泽庆子, 高嶋圭子, 朝吹ケイト, 菊池らん, キムギョンジュ, 森村きみえ, 松坂季実子, 伊丹公理, 君嶋もえ, 小泉キラリ, 衣澄桐子, 木崎りの, 来生ひかり, 杉浦清香, 香田ゆみ, 远野小春, 饭岛恋, 小泉麻由, 斉藤ここみ, 天野こころ, 安井小径, 葵小夏, 长谷川小夏, 双叶このみ, 桜このみ, 青木琴美, くすのき琴美, 坂井ことみ, 諝迮^美, 琴野まゆ, 琴乃夕夏, 岸田小雪, 雪乃小春, 五十岚こずえ, 松嶋こずえ, 桃瀬くらら, 森下来美, 爱川京香, 恭香, 爱染恭子, &amp;lsquo;, 彩名杏子, 福沢京子, 中村凉子, 西原京子, 立花杏子, 京乃あづさ, うさみ恭香, 森咲小雪, 藤泽京子, 西荻恭子, 小野今日子, 沢村杏子, 岛久美子, 星野くるみ, 城源寺くるみ, ロレッタリー, **ミロソビッチ, 星野まどか, 松叶まどか, 内田, 原口まほ, 速水真保(真帆, ), まい, 朝霞舞, 浅仓舞, （, )麻生舞（泽口丽奈）, 荻原舞, 星乃舞, 星乃舞, 神崎麻衣, かつら舞, 川本舞, 小夏まい, 仓本麻衣, 中条舞, 夏美舞, 坂下麻衣, 早乙女舞, 佐藤舞, 樱月舞, 椎名舞, 凉白舞, 田村麻衣, 月咲舞, 上原舞, 真中みすず, 星野マキ, 椎名真希, 筱塚真树子, 日向まこ, 风野舞子, 君矢摩子, 木下まこ, 神崎麻子, 夕树舞子, 筱原真琴（筱原凉）, 後藤まみ, 早咲まみ, 宫本真美, 铃木麻奈美, 吉川真奈美, 广#124;真夏, ひろせまなつ, #123;泽舞音, 三咲真绪, 筱原真女, 橘真央, 未来, 绫#124;麻理, 鮎川真理, 春日部まり, 美里真里, 山田まり, 日高マリア, 平井まりあ, 梦野まりあ, 神乃球绘, 杉本まりえ, 高野まりえ, 浅井真理子, 树まりこ, 川奈まり子, 盛本真理子, 本木真梨子, 乃木真梨子, 青木まりん, 小早川麻玲, 胡桃沢麻里奈, 松本麻里奈, 加藤爱美, 京野真里奈, 松嶋まりな, 矢吹麻里奈, 麻生まりも, 折原まりの, 葵マリー, 松井夏穂, 小沢园, 橘ますみ, 星野真弥, 木谷麻耶, 远野麻耶, 爱田まゆ, 小山内まゆ, 持月真由, 岩崎真由美, 金泽美, 泽木美帆, 田村真由实, 辻めぐ, 安来めぐ, 相原めぐみ, 石原美, 大泽惠, 小野寺めぐみ, メイファ, 小鸠美爱, 金子みえ, 松冈美江, 冴嶋みどり, 小野美晴, 羽田, 有贺美穗, 赤坂美歩, 深田美穗, 岩崎美穂, 鹿岛美和, 望月美穂, 仲井美帆, 成瀬美穂, 齐藤美保, 铃木美帆, 寺田美穂, 吉野美穂, 常夏みかん, 秋元实花, 根本美香, 三上翔子, 相川未希, 青山美树, 藤谷美纪, 深山真希, 井上美树, 伊藤未来, 岩下美季, 神保美喜, 久保美希, 大西美希, 酒井未希, 早乙女美树, 沢井美树, 翔巳辉, 橘未稀, 上原美纪, 吉井美希, 塚本美纪, 叶山美湖, 阿立未来, 浅仓未来, 藤冈未玖, 长谷川美红, 堀越みく, 水桥みく, 中山美玖, 筱原未来, 远野未来, 高岭みく, 高根みく, 水原美美, 水原美美, 峯不二子, 佐伯美奈, 藤本圣名子, 小川美那奈, 上杉みなこ, みなみ, 青山みなみ, 南彩菜, 星川みなみ, 仲本みなみ, 栗原美奈美, 吉川美奈美, みなみゆい, 葵实, 麻川美绪, 朝仓海音, 小森美王, 冈崎美女, 三枝实央, 舞岛美织, 松嶋美织, 未来, 星川みらい, 宏冈みらい, 星崎未来, 朝冈实岭, すぎはら览, 森田美丽, 田中子, 草莓牛奶, 日野美沙, 西田美沙, 手塚みさ, 三咲まお, 樱井美树, 白石, 柴崎未永, 天衣みつ, 雨宫沙纪, 宫下希帆, 深芳野, あづき美由, 藤原美忧, 北原美由, 夏木美夕, 野宫美忧, 立河みゆ, 山瀬美优, 美幸, 宝来美由纪, 小松美幸, 乃原深雪, 真藤みゆき, 白石美由纪, 庄司みゆき, 杉山美雪, 水原美々, みずほ, 榎本瑞怆, 加#123;瑞穗, 瑞穂このみ, 中川美志穗, 椎名みずき, 水森一叶, 水野彩香, 美月莲, 水谷麻子, 水沢ゆうな, 水嶋彩, 水岛凉子, 君嵨, 西村萌, 沢木萌, 山咲萌, 高木萌美, 相田桃, 藤田睦月, 姫野もも, 星野桃, 白井もも, 手束桃, 相马もみじ, 百华, （ももか）, 桃香, 纹舞らん, 森原由纪, 森町ここみ, 森高千春, ミュウ, 滩ジュン, 流星ラム, 汐见なぎさ, なごみもえ, 小泽菜穗, 中川珠代, 仲山うさぎ, 広末奈绪, 百瀬奈绪, 及川奈央, 冴岛奈绪, 有吉奈生子, 広瀬奈央美, 麻田奈美, 白鸟奈未, 舞田奈美, 小沢奈美, 高原奈美, 宝生奈奈, 夏目奈奈, 堀内奈奈, 宝生奈奈, 川嶋なな, 松嶋菜々, 瑞树なな, 三和なな, 樱沢菜菜子, 里美(里见)奈奈子, 仓沢七海, 北原ななせ, 中川奈奈, 广末奈绪, 及川奈央, 禤奈绪, 白石奈绪, 竹中, 森永奈绪美, 白川なるみ, 立花ナツ, 安倍夏树, 日向なつき, 夏树りさ, 田坂菜月, なつみ, 神崎奈津美, 川滨奈美, 一色志乃, 野原奈津美, 野坂奈津美, 嶋田奈津美, 相原夏海, 夏目しおん, 望月ねね, 小川音子, 森永のあ, 月岛のあ, 青木のあ, 野原りん, 乃原深雪, 羽山典子, 兰望美, 桃井望, 松田千夏, 小野谷実穂, 流星ラム, 朝河兰, 贵水らん, 高野らん, 宝城らら, 姫川丽, 伊#124;怜, 村上レイ, 矢吹丽, 有森玲香, 饭岛丽华, 菊池丽香, 望月れいか, 杉崎丽香, 立花丽华, 吉泽レイカ, 秋本玲子, 叶山丽子, 镜丽子, 水越丽子, 水野礼子, 高田礼子, 山口玲子, 青木レミ, 叶丽美, 稻森丽奈, 神崎レイナ, 小桥礼奈, 近藤れいな, 桜井レイナ, 进藤玲菜, 山口レナ, 铃川玲理, 一色丽矢, 光咲玲奈, 村上丽奈, 七海りあ, 浅井理#123;, 松冈理#123;, みさき理絵, 手塚莉絵, 小林里穂, 七瀬里帆, 相原梨花, 秋吉里香, 浅井リカ, 芝山, 上原里香, 上杉里香, 世良, （, )秋菜里子（美崎凉香）, 青山梨子, 片瀬理子, 立花里子, 水城凛, 野々宫りん, 青木まりん, 友崎怜, 冈田りな, 相沢梨菜, 藤泽理名, 藤原リナ, 北原梨奈, 高瀬りな, 富田梨#123;, 内山理名, 臼井利奈, 卯月梨奈, 冈田丽奈, 上原铃华(绫香), 爱原梨央, 朝永里绪, 河井梨绪, 大沢莉央, 三宫里绪, 宫沢璃音, 森下理音, 坂巻リオナ, 由树莉莉, 朝比奈りり子, 璃纱, （りさ）, 水野理沙, 仲村梨沙, 新山理沙, 野村理沙, 小野, 大塚梨沙, 内田理沙, 美竹凉子（树本凉子）, 田中露央沙, 望月るあ, 望月ルイ, 樱树蕾, 若林るい, 爱田るか, 藤代流花, 小川流果, 红兰, 红月, 高原流美, 长谷川留美子, 绫瀬ルリ, 池ノ内るり, 池乃内るり, 橘瑠璃, 麻生凉, 瞳亮, 高见凉, 小泉凉子, 美竹凉子, 水泽良子, 樱井凉子, 沢山凉子, 橘凉子, 有贺凉, 深田凉子, 原田りょうこ, 水咲凉子, 杉原凉子, 赤木佐知, 小沢幸子, 池端さえ, 池川小咏, 三枝美忧, Ｓａｉｋｏ, （さいこ）, 斉藤つかさ, 深沢沙希, 一条沙希, 桐岛咲, 小野寺沙希, 音野さき, 床田早纪, 间宫沙希子, 樱朱音, |田, 桜もも, 桜菜々, 樱田桜田さくら, 可爱さくら, 白鸟樱花, 桜井风花, 桜田由加里, 吉野 , 中岛佐奈, 大塚纱奈, 吉崎纱南, 朝比奈さなえ, 麻生早苗, 佐佐木, 加藤, 牧野さおり, 美雪沙织, 中山, 奈奈见沙织, 露木沙织, 山本早织, 苍井空专集, 裕木サラ, 青木沙罗, 田嶋さとみ, 有马, 高村なつき, 沢口あすか, 沢木まゆみ, 沢见ひかり, 泽宫有希, 冰高小夜, 杉本小夜, 上戸さや, 沙也加, さやか, 榎本さやか, 藤野さやか, 萩原さやか, 圣さやか, 楠木さやか, 乙伊沙也加, 三浦沙耶香, 仲西さやか, 樱井沙也加, 高城さやか, 立石さやか, 堤さやか, 西野由, 阿木さゆり, 本城小百合, 河野小百合, 本田圣名, , 泉星香, 黑崎扇菜, 若菜#124;奈, セヴェリナ, 朝仓しほ, 藤原史歩, 西川しほ, 铃木志穂, 岸本志麻, 清水かおり, いとうしいな, 一色志乃, 永衣志帆, 井川しのぶ, 笠木忍, 零忍, 宫木汐音, 秋本诗织, 秋野しおり, 青木诗央里, 青野诗织, 藤谷しおり, 神谷诗织, 折原栞, 白石ひより, しろいうさぎ, 市井静香, 真木静香, 松本静香, 月野静玖, 今木翔子, 夏目しおん, 佐々木空, 冬木さおり, 北原翔子, 姫咲しゅり, すばる, 町田梨乃, 铃木くるみ, 木暮すづな, 铃里ちさと, 立花里子, 高树玛莉亚, 高原ジュリ, 高冈初美, 高杉あこ, 井上千寻, 川村智花, 千夏, 远野小春, 友田真希, 藤森智子, 菊池智子, 鮎川ともみ, 水野朋美, 七瀬ともみ, 佐藤智美, 奥菜つばさ, (冲那), 菅野つぼみ, 星野つぐみ, 宫岛司, 辻さやか, ＴＳＵＫＡＳＡ, （つかさ）, 绀堂, 早乙女つくし, 津野田薰, 露木阳子, ティアラ, 海野真珠, (), 三原夕香, 北村うるか, 逢乃うさぎ, 高田うさぎ, 小森诗, うちだまひろ, 矢吹さゆり, 矢田あき, 山咲あかり, 光月夜也, 松岛やや, 午後野弥生, 寺田弥生, 杉浦清香, 星野洋子, 永井阳子, 中原遥子, 高賱坐, 矢泽阳子, 麻生优, 安里佑加, 今井优香, 夕树舞子, 具志坚阳子, 高嶋阳子, 长谷川有奈, 吉田あゆみ, 吉永ゆりあ, 吉野サリー, 吉冈なつみ, 村上ゆう, 青叶ゆうな, 爱田由, 忧花かすみ, 安里佑加, 相沢优衣, 雨宫优衣, 遥优衣, 风间由衣, 舞坂由衣, 松浦唯, 长瀬ゆい, 沙里奈ユイ, 斉藤唯, #124;户由衣, 徳井唯, 上野结, 浅野由香, 中根ゆか, 小野由佳, 坂上友香, 纱月结花, 松本ゆかり, 樱田由加里, 関口ゆかり, 田口ゆかり, 广#124;由香, 美穂由纪, 持田ゆき, 森原由纪, 墨田ユキ, 当真, 田崎友希（牧本千幸）, 雪村, 爱田ゆう子, 浅间夕子, 麻生叶子, 饭塚友子, 前原佑子, 小仓优子, 中根由真, 中田由真, 相泽梦, 松浦梦, 川岛梦, 相田由美, 远藤悠美, 早川优美, 平井由美, 新堂有望, 林由美香, 諝悇 , 杉本由美香, 山下由美子, 小室优奈, 七瀬由奈, 岛田由菜, 中里优奈, 麻宫淳子, 小泉ゆり, 小室友里, 水树ゆり, 西泽友里, 大原佑里, 寺尾佑里, 加藤ゆりあ, 仓持ゆりあ, 美崎ゆりあ, 三里ゆりか, 水沢ゆりか, 里美由梨香, 芳野ゆりか, 细川百合子, 游佐七海, 青木ゆう, 片桐优, 片瀬ゆう, 可爱ゆう, 筒见友, 三田友穂, ゆう香, 安里佑加, 泉ゆうか, 五十岚ゆうか, 白鸟ゆうか, 爱叶ゆうき, 雨木夕纪, 结城杏奈, 夕树舞子, 前原优树, 吉泽ゆうこ, 明乃夕奈, 秋本优奈, 宫泽ゆうな, 冈崎结由, 徐若樱, 树若菜上面写的这些人我一个也不认识，当然她们的片子我也从来没看过!</description><content type="html"><![CDATA[<h1 id="我从来不看av"><strong>我从来不看AV</strong></h1>
<p>我是一个极其讨厌AV和看AV的人，我从来不看AV
像什么:原田由香, 日置由香, 前园友香, 松井友香, 中森友香, 大西结花, 立原友香, 福井裕佳梨, 萩原, 由纪, 广濑由香, 北原由纪, 木崎友纪, 工藤夕贵, 松冈由树, 西野优辉, 筱崎由纪, 庄司友希, 田崎友希（牧本千幸）, 内田有纪, 仲间由纪惠, 伊藤由贵子, 染谷由纪子, 渡边由纪子, 山口由纪子, 穴井夕子, 青木裕子, 滨野裕子, 石桥佑子, 石倭裕子, 河合佑子, 北村裕子, 纪藤裕子, 小林有子, 三轮裕子, 水岛裕子, 森山佑子, 小优子, 坂木优子, 杉村阳子, 高滨优子, 竹内结子, 足立佑美, 江川有未, 早川优美, 平井由美, 久留须留美, 中村裕美, 小野田优美, 坂井优美, 芹泽优美, 新堂有望, 寺尾友美, 林由美香, 早川由美子, 阪谷佑三子, 释由美子, 嶋由美子, 杉本由美香, 高桥由美子, 夏生优奈, 上原优奈, 麻宫淳子, 安藤有里, 小室友里, 河野友里, 三井百合, 西尾佑里, 大原佑里, 吉田由莉, 芳贺优里雅, 细川百合子, 石田百合子, 彗月优, 片桐优, 野村佑香第二份，和上面有些重复的葵あげは, 日吉亚衣, 饭岛爱, 加藤爱, 君岛爱, 黑泽爱, 水木爱, 水野爱, 长瀬爱, 冈崎爱, 立木爱, 爱叶るび, 爱田友, 三浦爱佳, 饭岛爱子, 水岛爱奈, 中里爱菜, ＡＩＲＡ, （あいら）, 松下爱来, 雨宫あいり, 河合あいり, 黒木アイリ, 岛谷爱梨, 相泽梦, 相泽唯衣, 水野茜, 赤坂ルナ, 爱叶亜希, 藤崎秋, 片#124;亚纪, 佐仓亜希, 泽宫有希, 友崎亜希, 吉泽明步, 河村亜希子, 秋元优奈, （あきら）, 友坂あきら, 渡瀬晶, 天衣, 鮎川亚美, 日向あみ, 三本亜美, （, ), 水野亜美（吉野纱莉）, 中村あみ, 西村あみ, 樱木亜美, 翔野あみ, 杉浦あみ, 铃木亚美, 山崎亜弥, 仓木杏, 三月あん, 南波杏, 松下可怜, 小仓杏, 秋月杏奈, 姬木杏奈, 香月安娜, 宫下杏奈, 泽田杏奈, 凉风杏菜, 结城杏奈, 星野杏里, みずなあんり, 青羽未来, 宫沢あおい, 青木絵里, 青木玲, 青木沙罗, 青山和希, 青山くるみ, 有川真生, 水咲ありみ, （ありさ）, 本田亚里沙, 真木亚里沙, 野宫ありす, 朝比奈ゆい, 朝美雾唯, 城麻美, 早纪麻未, 平山朝香, 神田アサカ, 朝香美穗, 朝仓まりあ, 浅仓みるく, 杏野明日香, 森村あすか, 小川明日香, 大空明日香, 阪卷明日香, 浅仓みるく, 川奈あつみ, あや, 藤木亚弥, 姫野あや, 本城彩, 神崎あや, 小泉彩, 小池亚弥, 香咲绫, 水来亜矢, 水嶋彩, 中原绫, 夏树亜矢, 音咲绚, 白石あや, 铃木あや, 藤彩香, 藤崎彩花, 星野绫香, 大石, 四季彩香, 木田彩水, 樱井彩美, 彩名杏子, 持田彩菜, あやの, 寿绫乃, 望月あやの, 紫彩乃, 真弓あゆ, 秋吉あゆみ, 一色鮎美, 岩本亚由美, 小山渉, 黒沢あゆみ, 美树亚由美, 田原步, 吉田あゆみ, 麻布レオナ, 川岛和津实, 小泽, 美, 上条あずさ, 宫永あずさ, 长野あずさ, ペクチヨン, 金泽文子, 原千晶, 岛津千秋, 青沼知朝, 松原ちえ, 観月千穂, 叶月千穗, 井上千寻, 中野千夏, 伊藤千夏（三田有穗）, 成宫智香, 上原ちか, 川村千里（三原夕香）, 绮罗ちさと, 德田千圣, 筱宫知世, （こころ）, 七海ここな, ウングレアーヌ, デヴィ, 新藤惠美, 惠美梨, 中上絵奈, 赤川絵理, 林絵里（元光月夜也）, 本城爱里, 石田★り, 菊池英里, 汤川えり, 姫宫エリカ, 上条えりか, 君原エリカ, 上原絵里香, 後藤えり子, 苍吹雪, 樱井风花, 藤木那奈, 藤森エレナ, 原史奈, 佐佐木和佳, 大叶由, 山, 一步, 春菜, 原田春奈, 春菜まい, 上村春奈, 冲遥, 小泉春香, 遥优衣, 水野春树, 叶山小姫, 芳本叶月, 来生光, 沢口ひかり, 宇美野ひかり, (), 古都光, 星野光, かわいひかる, 大石ひかる, うさだひかる, 卑弥呼, 爱川日奈, 可爱ひな, 七瀬ひな, 木村ひなの, 中山ひなの, 矢口ひなの, ひなこ, 立花ひろみ, 広瀬晴美, 爱川瞳, 青木仁美, 芦屋瞳, 藤志吕仁美, 浜ひとみ, 长谷川瞳, 早坂仁美, 星崎瞳, 池野瞳, 小林仁美（小林瞳）, 国府田ひとみ, 工藤ひとみ, 松田瞳, 森尾ひとみ, 望月瞳, 二阶堂仁美, 沢木仁美, 白石瞳, 高野ひとみ, 吉野瞳, 忧木瞳, 小春, 白石日和, 森村ハニー, 麻井帆野香, 河合ほのか, 橘ほのか, 星ありす(星), 星川ヒカル, 星野瑠海, うづきほたる, 苍吹雪, 藤城なの, 樱井风花, 冬月ひなの, 河合いいな, 饭岛ことみ, 一色志乃, 伊#124;梨花, いつか, 沙罗树, 飞鸟美, 长谷川瞳, 森川いづみ, 森野泉, 田诨美, 上原いずみ, 山田いずみ, 朝仓纯, 速水纯, 河合纯, 草风纯, 唯川纯, 朝比奈顺子, 麻宫淳子, 真山润, 岬じゅん, 桃井じゅん, 冈田纯菜, 朝比奈树里, 松坂树梨, 竹田树理, 桥本树里, 若林树里, 若月树里, 可爱あずさ, 藤崎枫, 松岛枫, 中谷カイト, 彩波花穂, 饭田夏帆, 木村果步, 藤谷かな, 坂口华奈, 藤沢かんな, 内藤花苗, 藤森加奈子, 岸加奈子, 杉森风绪, 安部かおり, （あべかおり）, 爱川香理, 藤森かおり, 速水かおり, 姫野香, (, ), 北条香理, きららかおり, 岸田香织, 森下香织, 仲谷香织, 清水香织, 筱原かおり, 盐见香织, 椿香织, 浅见薫, 持田薫, 松尾薰, 黒木香, 桜沢かおる, 梅宫かおる, 井上可奈, 山崎华奈, 榎木加奈子, 松嶋加奈子, 华歌恋, 林かれん, 笠木忍, 春日みゆき, 朝霞美, 伊藤かすみ, 美里かすみ, 大野かすみ, 片瀬まひろ, 片瀬梨音, 可爱亚织沙, 河井ゆう, （かわいゆう）, 川村りさ, （けい）, 浅见伽椰, 香山圣, 加山由衣, 小峰佳世, 园部かづは, 青山和希, 一夜かずみ, 冈本圭, 中泽庆子, 高嶋圭子, 朝吹ケイト, 菊池らん, キムギョンジュ, 森村きみえ, 松坂季実子, 伊丹公理, 君嶋もえ, 小泉キラリ, 衣澄桐子, 木崎りの, 来生ひかり, 杉浦清香, 香田ゆみ, 远野小春, 饭岛恋, 小泉麻由, 斉藤ここみ, 天野こころ, 安井小径, 葵小夏, 长谷川小夏, 双叶このみ, 桜このみ, 青木琴美, くすのき琴美, 坂井ことみ, 諝迮^美, 琴野まゆ, 琴乃夕夏, 岸田小雪, 雪乃小春, 五十岚こずえ, 松嶋こずえ, 桃瀬くらら, 森下来美, 爱川京香, 恭香, 爱染恭子, &lsquo;, 彩名杏子, 福沢京子, 中村凉子, 西原京子, 立花杏子, 京乃あづさ, うさみ恭香, 森咲小雪, 藤泽京子, 西荻恭子, 小野今日子, 沢村杏子, 岛久美子, 星野くるみ, 城源寺くるみ, ロレッタリー, **ミロソビッチ, 星野まどか, 松叶まどか, 内田, 原口まほ, 速水真保(真帆, ), まい, 朝霞舞, 浅仓舞, （, )麻生舞（泽口丽奈）, 荻原舞, 星乃舞, 星乃舞, 神崎麻衣, かつら舞, 川本舞, 小夏まい, 仓本麻衣, 中条舞, 夏美舞, 坂下麻衣, 早乙女舞, 佐藤舞, 樱月舞, 椎名舞, 凉白舞, 田村麻衣, 月咲舞, 上原舞, 真中みすず, 星野マキ, 椎名真希, 筱塚真树子, 日向まこ, 风野舞子, 君矢摩子, 木下まこ, 神崎麻子, 夕树舞子, 筱原真琴（筱原凉）, 後藤まみ, 早咲まみ, 宫本真美, 铃木麻奈美, 吉川真奈美, 广#124;真夏, ひろせまなつ, #123;泽舞音, 三咲真绪, 筱原真女, 橘真央, 未来, 绫#124;麻理, 鮎川真理, 春日部まり, 美里真里, 山田まり, 日高マリア, 平井まりあ, 梦野まりあ, 神乃球绘, 杉本まりえ, 高野まりえ, 浅井真理子, 树まりこ, 川奈まり子, 盛本真理子, 本木真梨子, 乃木真梨子, 青木まりん, 小早川麻玲, 胡桃沢麻里奈, 松本麻里奈, 加藤爱美, 京野真里奈, 松嶋まりな, 矢吹麻里奈, 麻生まりも, 折原まりの, 葵マリー, 松井夏穂, 小沢园, 橘ますみ, 星野真弥, 木谷麻耶, 远野麻耶, 爱田まゆ, 小山内まゆ, 持月真由, 岩崎真由美, 金泽美, 泽木美帆, 田村真由实, 辻めぐ, 安来めぐ, 相原めぐみ, 石原美, 大泽惠, 小野寺めぐみ, メイファ, 小鸠美爱, 金子みえ, 松冈美江, 冴嶋みどり, 小野美晴, 羽田, 有贺美穗, 赤坂美歩, 深田美穗, 岩崎美穂, 鹿岛美和, 望月美穂, 仲井美帆, 成瀬美穂, 齐藤美保, 铃木美帆, 寺田美穂, 吉野美穂, 常夏みかん, 秋元实花, 根本美香, 三上翔子, 相川未希, 青山美树, 藤谷美纪, 深山真希, 井上美树, 伊藤未来, 岩下美季, 神保美喜, 久保美希, 大西美希, 酒井未希, 早乙女美树, 沢井美树, 翔巳辉, 橘未稀, 上原美纪, 吉井美希, 塚本美纪, 叶山美湖, 阿立未来, 浅仓未来, 藤冈未玖, 长谷川美红, 堀越みく, 水桥みく, 中山美玖, 筱原未来, 远野未来, 高岭みく, 高根みく, 水原美美, 水原美美, 峯不二子, 佐伯美奈, 藤本圣名子, 小川美那奈, 上杉みなこ, みなみ, 青山みなみ, 南彩菜, 星川みなみ, 仲本みなみ, 栗原美奈美, 吉川美奈美, みなみゆい, 葵实, 麻川美绪, 朝仓海音, 小森美王, 冈崎美女, 三枝实央, 舞岛美织, 松嶋美织, 未来, 星川みらい, 宏冈みらい, 星崎未来, 朝冈实岭, すぎはら览, 森田美丽, 田中子, 草莓牛奶, 日野美沙, 西田美沙, 手塚みさ, 三咲まお, 樱井美树, 白石, 柴崎未永, 天衣みつ, 雨宫沙纪, 宫下希帆, 深芳野, あづき美由, 藤原美忧, 北原美由, 夏木美夕, 野宫美忧, 立河みゆ, 山瀬美优, 美幸, 宝来美由纪, 小松美幸, 乃原深雪, 真藤みゆき, 白石美由纪, 庄司みゆき, 杉山美雪, 水原美々, みずほ, 榎本瑞怆, 加#123;瑞穗, 瑞穂このみ, 中川美志穗, 椎名みずき, 水森一叶, 水野彩香, 美月莲, 水谷麻子, 水沢ゆうな, 水嶋彩, 水岛凉子, 君嵨, 西村萌, 沢木萌, 山咲萌, 高木萌美, 相田桃, 藤田睦月, 姫野もも, 星野桃, 白井もも, 手束桃, 相马もみじ, 百华, （ももか）, 桃香, 纹舞らん, 森原由纪, 森町ここみ, 森高千春, ミュウ, 滩ジュン, 流星ラム, 汐见なぎさ, なごみもえ, 小泽菜穗, 中川珠代, 仲山うさぎ, 広末奈绪, 百瀬奈绪, 及川奈央, 冴岛奈绪, 有吉奈生子, 広瀬奈央美, 麻田奈美, 白鸟奈未, 舞田奈美, 小沢奈美, 高原奈美, 宝生奈奈, 夏目奈奈, 堀内奈奈, 宝生奈奈, 川嶋なな, 松嶋菜々, 瑞树なな, 三和なな, 樱沢菜菜子, 里美(里见)奈奈子, 仓沢七海, 北原ななせ, 中川奈奈, 广末奈绪, 及川奈央, 禤奈绪, 白石奈绪, 竹中, 森永奈绪美, 白川なるみ, 立花ナツ, 安倍夏树, 日向なつき, 夏树りさ, 田坂菜月, なつみ, 神崎奈津美, 川滨奈美, 一色志乃, 野原奈津美, 野坂奈津美, 嶋田奈津美, 相原夏海, 夏目しおん, 望月ねね, 小川音子, 森永のあ, 月岛のあ, 青木のあ, 野原りん, 乃原深雪, 羽山典子, 兰望美, 桃井望, 松田千夏, 小野谷実穂, 流星ラム, 朝河兰, 贵水らん, 高野らん, 宝城らら, 姫川丽, 伊#124;怜, 村上レイ, 矢吹丽, 有森玲香, 饭岛丽华, 菊池丽香, 望月れいか, 杉崎丽香, 立花丽华, 吉泽レイカ, 秋本玲子, 叶山丽子, 镜丽子, 水越丽子, 水野礼子, 高田礼子, 山口玲子, 青木レミ, 叶丽美, 稻森丽奈, 神崎レイナ, 小桥礼奈, 近藤れいな, 桜井レイナ, 进藤玲菜, 山口レナ, 铃川玲理, 一色丽矢, 光咲玲奈, 村上丽奈, 七海りあ, 浅井理#123;, 松冈理#123;, みさき理絵, 手塚莉絵, 小林里穂, 七瀬里帆, 相原梨花, 秋吉里香, 浅井リカ, 芝山, 上原里香, 上杉里香, 世良, （, )秋菜里子（美崎凉香）, 青山梨子, 片瀬理子, 立花里子, 水城凛, 野々宫りん, 青木まりん, 友崎怜, 冈田りな, 相沢梨菜, 藤泽理名, 藤原リナ, 北原梨奈, 高瀬りな, 富田梨#123;, 内山理名, 臼井利奈, 卯月梨奈, 冈田丽奈, 上原铃华(绫香), 爱原梨央, 朝永里绪, 河井梨绪, 大沢莉央, 三宫里绪, 宫沢璃音, 森下理音, 坂巻リオナ, 由树莉莉, 朝比奈りり子, 璃纱, （りさ）, 水野理沙, 仲村梨沙, 新山理沙, 野村理沙, 小野, 大塚梨沙, 内田理沙, 美竹凉子（树本凉子）, 田中露央沙, 望月るあ, 望月ルイ, 樱树蕾, 若林るい, 爱田るか, 藤代流花, 小川流果, 红兰, 红月, 高原流美, 长谷川留美子, 绫瀬ルリ, 池ノ内るり, 池乃内るり, 橘瑠璃, 麻生凉, 瞳亮, 高见凉, 小泉凉子, 美竹凉子, 水泽良子, 樱井凉子, 沢山凉子, 橘凉子, 有贺凉, 深田凉子, 原田りょうこ, 水咲凉子, 杉原凉子, 赤木佐知, 小沢幸子, 池端さえ, 池川小咏, 三枝美忧, Ｓａｉｋｏ, （さいこ）, 斉藤つかさ, 深沢沙希, 一条沙希, 桐岛咲, 小野寺沙希, 音野さき, 床田早纪, 间宫沙希子, 樱朱音, |田, 桜もも, 桜菜々, 樱田桜田さくら, 可爱さくら, 白鸟樱花, 桜井风花, 桜田由加里, 吉野 , 中岛佐奈, 大塚纱奈, 吉崎纱南, 朝比奈さなえ, 麻生早苗, 佐佐木, 加藤, 牧野さおり, 美雪沙织, 中山, 奈奈见沙织, 露木沙织, 山本早织, 苍井空专集, 裕木サラ, 青木沙罗, 田嶋さとみ, 有马, 高村なつき, 沢口あすか, 沢木まゆみ, 沢见ひかり, 泽宫有希, 冰高小夜, 杉本小夜, 上戸さや, 沙也加, さやか, 榎本さやか, 藤野さやか, 萩原さやか, 圣さやか, 楠木さやか, 乙伊沙也加, 三浦沙耶香, 仲西さやか, 樱井沙也加, 高城さやか, 立石さやか, 堤さやか, 西野由, 阿木さゆり, 本城小百合, 河野小百合, 本田圣名, 　, 泉星香, 黑崎扇菜, 若菜#124;奈, セヴェリナ, 朝仓しほ, 藤原史歩, 西川しほ, 铃木志穂, 岸本志麻, 清水かおり, いとうしいな, 一色志乃, 永衣志帆, 井川しのぶ, 笠木忍, 零忍, 宫木汐音, 秋本诗织, 秋野しおり, 青木诗央里, 青野诗织, 藤谷しおり, 神谷诗织, 折原栞, 白石ひより, しろいうさぎ, 市井静香, 真木静香, 松本静香, 月野静玖, 今木翔子, 夏目しおん, 佐々木空, 冬木さおり, 北原翔子, 姫咲しゅり, すばる, 町田梨乃, 铃木くるみ, 木暮すづな, 铃里ちさと, 立花里子, 高树玛莉亚, 高原ジュリ, 高冈初美, 高杉あこ, 井上千寻, 川村智花, 千夏, 远野小春, 友田真希, 藤森智子, 菊池智子, 鮎川ともみ, 水野朋美, 七瀬ともみ, 佐藤智美, 奥菜つばさ, (冲那), 菅野つぼみ, 星野つぐみ, 宫岛司, 辻さやか, ＴＳＵＫＡＳＡ, （つかさ）, 绀堂, 早乙女つくし, 津野田薰, 露木阳子, ティアラ, 海野真珠, (), 三原夕香, 北村うるか, 逢乃うさぎ, 高田うさぎ, 小森诗, うちだまひろ, 矢吹さゆり, 矢田あき, 山咲あかり, 光月夜也, 松岛やや, 午後野弥生, 寺田弥生, 杉浦清香, 星野洋子, 永井阳子, 中原遥子, 高賱坐, 矢泽阳子, 麻生优, 安里佑加, 今井优香, 夕树舞子, 具志坚阳子, 高嶋阳子, 长谷川有奈, 吉田あゆみ, 吉永ゆりあ, 吉野サリー, 吉冈なつみ, 村上ゆう, 青叶ゆうな, 爱田由, 忧花かすみ, 安里佑加, 相沢优衣, 雨宫优衣, 遥优衣, 风间由衣, 舞坂由衣, 松浦唯, 长瀬ゆい, 沙里奈ユイ, 斉藤唯, #124;户由衣, 徳井唯, 上野结, 浅野由香, 中根ゆか, 小野由佳, 坂上友香, 纱月结花, 松本ゆかり, 樱田由加里, 関口ゆかり, 田口ゆかり, 广#124;由香, 美穂由纪, 持田ゆき, 森原由纪, 墨田ユキ, 当真, 田崎友希（牧本千幸）, 雪村, 爱田ゆう子, 浅间夕子, 麻生叶子, 饭塚友子, 前原佑子, 小仓优子, 中根由真, 中田由真, 相泽梦, 松浦梦, 川岛梦, 相田由美, 远藤悠美, 早川优美, 平井由美, 新堂有望, 林由美香, 諝悇 , 杉本由美香, 山下由美子, 小室优奈, 七瀬由奈, 岛田由菜, 中里优奈, 麻宫淳子, 小泉ゆり, 小室友里, 水树ゆり, 西泽友里, 大原佑里, 寺尾佑里, 加藤ゆりあ, 仓持ゆりあ, 美崎ゆりあ, 三里ゆりか, 水沢ゆりか, 里美由梨香, 芳野ゆりか, 细川百合子, 游佐七海, 青木ゆう, 片桐优, 片瀬ゆう, 可爱ゆう, 筒见友, 三田友穂, ゆう香, 安里佑加, 泉ゆうか, 五十岚ゆうか, 白鸟ゆうか, 爱叶ゆうき, 雨木夕纪, 结城杏奈, 夕树舞子, 前原优树, 吉泽ゆうこ, 明乃夕奈, 秋本优奈, 宫泽ゆうな, 冈崎结由, 徐若樱, 树若菜上面写的这些人我一个也不认识，当然她们的片子我也从来没看过!!!!!</p>
]]></content></item><item><title>Gabry Ponte live at Aquafan, 14 agosto 2011</title><link>https://painso.com/posts/share/2011/gabry-ponte-live-at-aquafan-14-agosto-2011/</link><pubDate>Tue, 22 Nov 2011 11:57:44 +0000</pubDate><guid>https://painso.com/posts/share/2011/gabry-ponte-live-at-aquafan-14-agosto-2011/</guid><description>Gabry Ponte live at Aquafan, 14 agosto 2011</description><content type="html"><![CDATA[<h1 id="gabry-ponte-live-at-aquafan-14-agosto-2011"><strong>Gabry Ponte live at Aquafan, 14 agosto 2011</strong></h1>
<p><a href="http://www.youtube.com/watch?v=w25cdu8R_VU" title=""><img src="http://img.youtube.com/vi/w25cdu8R_VU/0.jpg" alt=""></a></p>
]]></content></item><item><title>Electro 大神 | (SWAGGA MIX) DJ BL3ND</title><link>https://painso.com/posts/share/2011/electro-e5-a4-a7-e7-a5-9e-swagga-mix-dj-bl3nd/</link><pubDate>Tue, 22 Nov 2011 11:47:09 +0000</pubDate><guid>https://painso.com/posts/share/2011/electro-e5-a4-a7-e7-a5-9e-swagga-mix-dj-bl3nd/</guid><description>Electro 大神 | (SWAGGA MIX) DJ BL3ND
最近才发现这人的，我特意从YOUTUBE下载的超清，太麻烦了，最终还是搞定了嘿嘿</description><content type="html"><![CDATA[<h1 id="electro-大神--swagga-mix-dj-bl3nd"><strong>Electro 大神 | (SWAGGA MIX) DJ BL3ND</strong></h1>
<p><a href="http://www.youtube.com/watch?v=PzjFQhj2aFY" title=""><img src="http://img.youtube.com/vi/PzjFQhj2aFY/0.jpg" alt=""></a></p>
<p>最近才发现这人的，我特意从YOUTUBE下载的超清，太麻烦了，最终还是搞定了嘿嘿</p>
]]></content></item><item><title>Le Castle Vania at Escape From Wonderland 2011</title><link>https://painso.com/posts/share/2011/le-castle-vania-at-escape-from-wonderland-2011/</link><pubDate>Mon, 21 Nov 2011 19:25:43 +0000</pubDate><guid>https://painso.com/posts/share/2011/le-castle-vania-at-escape-from-wonderland-2011/</guid><description>Le Castle Vania at Escape From Wonderland 2011
Le Castle Vania 又来新视频了，帅啊帅的一B</description><content type="html"><![CDATA[<h1 id="le-castle-vania-at-escape-from-wonderland-2011">Le Castle Vania at Escape From Wonderland 2011</h1>
<p><a href="http://www.youtube.com/watch?v=k1_iNS_lm-w" title=""><img src="http://img.youtube.com/vi/k1_iNS_lm-w/0.jpg" alt=""></a></p>
<p>Le Castle Vania 又来新视频了，帅啊帅的一B</p>
]]></content></item><item><title>Brothers - The Moon OFFICIAL VIDEO</title><link>https://painso.com/posts/share/2011/brothers-the-moon-official-video/</link><pubDate>Mon, 21 Nov 2011 18:07:18 +0000</pubDate><guid>https://painso.com/posts/share/2011/brothers-the-moon-official-video/</guid><description>Brothers - The Moon OFFICIAL VIDEO
今天刚从youtube下载的，我了个擦这货不是Brothers吧？
就这个清晰了，你能叫我怎么办</description><content type="html"><![CDATA[<h1 id="brothers---the-moon-official-video">Brothers - The Moon OFFICIAL VIDEO</h1>
<p><a href="http://www.youtube.com/watch?v=tGzkqKpSFSY" title=""><img src="http://img.youtube.com/vi/tGzkqKpSFSY/0.jpg" alt=""></a></p>
<p>今天刚从youtube下载的，我了个擦这货不是Brothers吧？</p>
<p>就这个清晰了，你能叫我怎么办</p>
]]></content></item><item><title>000webhost三蛋空间全新自定义404及其他错误页面方法</title><link>https://painso.com/posts/play/2011/000webhost-custom-error-pages/</link><pubDate>Fri, 18 Nov 2011 17:02:06 +0000</pubDate><guid>https://painso.com/posts/play/2011/000webhost-custom-error-pages/</guid><description>000webhost三蛋空间全新自定义404及其他错误页面方法
今天整了一个三蛋空间做WP，差不多都弄好了，最后剩下个404页面让我很蛋疼 于是我就去度娘那搜相关文章，按照他们的方法都不行，后来无意中我访问错误页面的时候跳到了正常的404，我马上进FTP下载了空间上的.htaccess文件看了看
我把这段代码同样复制到另外一个三蛋BBS站上去也OK了，
代码如下：
Options -Indexes ErrorDocument 403 /sorry.php ErrorDocument 404 /sorry.php ErrorDocument 500 /sorry.php &amp;lt;IfModule mod_rewrite.c&amp;gt; RewriteEngine On RewriteBase / RewriteRule ^index.php$ - [L] RewriteCond %{REQUEST_FILENAME} !-f RewriteCond %{REQUEST_FILENAME} !-d RewriteRule . /404.htm [L] &amp;lt;/IfModule&amp;gt; 只要把这段代码复制保存成.htaccess 文件即可 （如果不可以保存的话可以先随便保存一个文件名，传到空间后再改回来）
然后RewriteRule . /404.htm [L]这里的404.htm换成你的错误页面文件名
大功告成试试
三蛋的速度还是比较快的嘿嘿
btw: 听说给000webhost挂友链可以降低被封几率</description><content type="html"><![CDATA[<p><strong>000webhost三蛋空间全新自定义404及其他错误页面方法</strong></p>
<p>今天整了一个三蛋空间做WP，差不多都弄好了，最后剩下个404页面让我很蛋疼
于是我就去度娘那搜相关文章，按照他们的方法都不行，后来无意中我访问错误页面的时候跳到了正常的404，我马上进FTP下载了空间上的.htaccess文件看了看</p>
<p>我把这段代码同样复制到另外一个三蛋BBS站上去也OK了，</p>
<p>代码如下：</p>
<pre><code>Options -Indexes

ErrorDocument 403 /sorry.php

ErrorDocument 404 /sorry.php

ErrorDocument 500 /sorry.php

&lt;IfModule mod_rewrite.c&gt;

RewriteEngine On

RewriteBase /

RewriteRule ^index.php$ - [L]

RewriteCond %{REQUEST_FILENAME} !-f

RewriteCond %{REQUEST_FILENAME} !-d

RewriteRule . /404.htm [L]

&lt;/IfModule&gt;

</code></pre><p>只要把这段代码复制保存成.htaccess 文件即可 （如果不可以保存的话可以先随便保存一个文件名，传到空间后再改回来）</p>
<p>然后<code>RewriteRule . /404.htm [L]</code>这里的404.htm换成你的错误页面文件名</p>
<p>大功告成试试</p>
<p>三蛋的速度还是比较快的嘿嘿</p>
<p>btw: 听说给000webhost挂友链可以降低被封几率</p>
]]></content></item><item><title>冯巩 郭冬临 郭月《得寸进尺》</title><link>https://painso.com/posts/share/2011/guo-feng-gong-guo-pro-insatiable-month/</link><pubDate>Fri, 18 Nov 2011 14:08:26 +0000</pubDate><guid>https://painso.com/posts/share/2011/guo-feng-gong-guo-pro-insatiable-month/</guid><description>冯巩 郭冬临 郭月《得寸进尺》</description><content type="html"><![CDATA[<p><a href="http://www.youtube.com/watch?v=ohm29TYeDl4" title=""><img src="http://img.youtube.com/vi/ohm29TYeDl4/0.jpg" alt=""></a></p>
<p>冯巩 郭冬临 郭月《得寸进尺》</p>
]]></content></item><item><title>冯巩 牛群《小偷公司》</title><link>https://painso.com/posts/share/2011/feng-gong-cattle-thiefs/</link><pubDate>Fri, 18 Nov 2011 14:06:07 +0000</pubDate><guid>https://painso.com/posts/share/2011/feng-gong-cattle-thiefs/</guid><description>冯巩 牛群《小偷公司》</description><content type="html"><![CDATA[<p><a href="http://www.youtube.com/watch?v=oeJv0wbHsMs" title=""><img src="http://img.youtube.com/vi/oeJv0wbHsMs/0.jpg" alt=""></a></p>
<p>冯巩 牛群《小偷公司》</p>
]]></content></item><item><title>Dia feat Nurbek Altynai ( Kyrgyzstan ) Kyrgyz song</title><link>https://painso.com/posts/share/2011/dia-feat-nurbek-altynai-kyrgyzstan-kyrgyz-song/</link><pubDate>Fri, 18 Nov 2011 13:53:18 +0000</pubDate><guid>https://painso.com/posts/share/2011/dia-feat-nurbek-altynai-kyrgyzstan-kyrgyz-song/</guid><description>貌似最近好多人都在找这歌</description><content type="html"><![CDATA[<p><a href="http://www.youtube.com/watch?v=FCjzeFwKbOw" title=""><img src="http://img.youtube.com/vi/FCjzeFwKbOw/0.jpg" alt=""></a></p>
<p>貌似最近好多人都在找这歌</p>
]]></content></item><item><title>DHT - Listen to Your Heart</title><link>https://painso.com/posts/share/2011/dht-listen-to-your-heart/</link><pubDate>Fri, 18 Nov 2011 13:37:38 +0000</pubDate><guid>https://painso.com/posts/share/2011/dht-listen-to-your-heart/</guid><description>在youtu上面下的高清，原版没混音版本好听丫</description><content type="html"><![CDATA[<p><a href="http://www.youtube.com/watch?v=C4HJ0zfZ-EM" title=""><img src="http://img.youtube.com/vi/C4HJ0zfZ-EM/0.jpg" alt=""></a></p>
<p>在youtu上面下的高清，原版没混音版本好听丫</p>
]]></content></item><item><title>被强奸了怎么忍受</title><link>https://painso.com/posts/share/2011/how-to-endure-being-raped/</link><pubDate>Fri, 18 Nov 2011 10:34:00 +0000</pubDate><guid>https://painso.com/posts/share/2011/how-to-endure-being-raped/</guid><description>小时候，第一次恋爱时，我们希望对方也是第一次谈恋爱。再大一点，对方是不是第一次恋爱我们不在意了，只要是初吻就好。再大一点，
对方是不是初吻我们不在意了， 还是第一次就好。
再大一点，
对方是不是第一次我们不在意了，只要和自己之前别有过太多人就好。
再大一点，
对方是不是在认识我们之前跟过很多人我们不在意了，只要和我们在一起后别再和之前的那些人联系了就好。
再大一点，
对方是不是还和之前那些人联系我们不在意了，只要他们不再见面了就好。
再大一点，
对方是不是和之前那些人还见面我们不在意了，只要别做出格的事就好。
再大一点，
对方是不是和之前的人做了出格的事我们不在意了，只要别再有新人了就好。
再大一点，
对方是不是有新人了我们不在意了，只要对方和第三者在一起只是玩玩，不是真心的就好。
再大一点，
对方是不是和第三者真心在一起我们也不在意了，但只要别让我知道就好&amp;hellip;&amp;hellip;&amp;hellip;..
是我们是真的不在意了吗？
是我们成熟了，可承受的残缺越来越多了？
是我们妥协了，不得不选择去承受越来越多的残缺？
是现实社会和生活越来越多的展现出它真实的残缺？
真想反问，我们到底是成长了还是被他妈的生活强奸了后不得不呐喊出来的叫床声。</description><content type="html"><![CDATA[<p>小时候，第一次恋爱时，我们希望对方也是第一次谈恋爱。再大一点，对方是不是第一次恋爱我们不在意了，只要是初吻就好。再大一点，</p>
<p>对方是不是初吻我们不在意了， 还是第一次就好。</p>
<p>再大一点，</p>
<p>对方是不是第一次我们不在意了，只要和自己之前别有过太多人就好。</p>
<p>再大一点，</p>
<p>对方是不是在认识我们之前跟过很多人我们不在意了，只要和我们在一起后别再和之前的那些人联系了就好。</p>
<p>再大一点，</p>
<p>对方是不是还和之前那些人联系我们不在意了，只要他们不再见面了就好。</p>
<p>再大一点，</p>
<p>对方是不是和之前那些人还见面我们不在意了，只要别做出格的事就好。</p>
<p>再大一点，</p>
<p>对方是不是和之前的人做了出格的事我们不在意了，只要别再有新人了就好。</p>
<p>再大一点，</p>
<p>对方是不是有新人了我们不在意了，只要对方和第三者在一起只是玩玩，不是真心的就好。</p>
<p>再大一点，</p>
<p>对方是不是和第三者真心在一起我们也不在意了，但只要别让我知道就好&hellip;&hellip;&hellip;..</p>
<p>是我们是真的不在意了吗？</p>
<p>是我们成熟了，可承受的残缺越来越多了？</p>
<p>是我们妥协了，不得不选择去承受越来越多的残缺？</p>
<p>是现实社会和生活越来越多的展现出它真实的残缺？</p>
<p>真想反问，我们到底是成长了还是被他妈的生活强奸了后不得不呐喊出来的叫床声。</p>
]]></content></item><item><title>用php+mysql写一个刷新页面显示不同的内容</title><link>https://painso.com/posts/tech/2011/used-to-write-a-php-mysql-refresh-the-page-to-display-different-content/</link><pubDate>Fri, 18 Nov 2011 04:31:39 +0000</pubDate><guid>https://painso.com/posts/tech/2011/used-to-write-a-php-mysql-refresh-the-page-to-display-different-content/</guid><description>用php+mysql写一个刷新页面显示不同的内容
&amp;lt;? $conn=mysql_connect(&amp;#34;localhost&amp;#34;,&amp;#34;user&amp;#34;,&amp;#34;pwd&amp;#34;); $sql=&amp;#34;select * from tab where 1&amp;#34;; result=mysql_db_query(&amp;#34;database_name&amp;#34;,sql); row_num=mysql_num_rows(result); rand=rand(0,row_num); mysql_data_seek(result, rand); row=mysql_fetch_assoc(result); echo &amp;#34;&amp;lt;pre&amp;gt;&amp;#34;; print_r($row); echo &amp;#34;/&amp;lt;pre&amp;gt;&amp;#34;; ?&amp;gt;</description><content type="html"><![CDATA[<p>用php+mysql写一个刷新页面显示不同的内容</p>
<div class="highlight"><pre class="chroma"><code class="language-php" data-lang="php"><span class="cp">&lt;?</span>
<span class="nv">$conn</span><span class="o">=</span><span class="nx">mysql_connect</span><span class="p">(</span><span class="s2">&#34;localhost&#34;</span><span class="p">,</span><span class="s2">&#34;user&#34;</span><span class="p">,</span><span class="s2">&#34;pwd&#34;</span><span class="p">);</span>
<span class="nv">$sql</span><span class="o">=</span><span class="s2">&#34;select * from tab where 1&#34;</span><span class="p">;</span>
<span class="nx">result</span><span class="o">=</span><span class="nx">mysql_db_query</span><span class="p">(</span><span class="s2">&#34;database_name&#34;</span><span class="p">,</span><span class="nx">sql</span><span class="p">);</span>
<span class="nx">row_num</span><span class="o">=</span><span class="nx">mysql_num_rows</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span>
<span class="nx">rand</span><span class="o">=</span><span class="nx">rand</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">row_num</span><span class="p">);</span>
<span class="nx">mysql_data_seek</span><span class="p">(</span><span class="nx">result</span><span class="p">,</span> <span class="nx">rand</span><span class="p">);</span>
<span class="nx">row</span><span class="o">=</span><span class="nx">mysql_fetch_assoc</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span>
<span class="k">echo</span> <span class="s2">&#34;&lt;pre&gt;&#34;</span><span class="p">;</span>
<span class="nx">print_r</span><span class="p">(</span><span class="nv">$row</span><span class="p">);</span>
<span class="k">echo</span> <span class="s2">&#34;/&lt;pre&gt;&#34;</span><span class="p">;</span>
<span class="cp">?&gt;</span>
</code></pre></div>]]></content></item></channel></rss>